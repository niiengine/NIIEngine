//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxcrafter.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CODELITE_PLUGIN_WXCRAFTER_BASE_CLASSES_H
#define _CODELITE_PLUGIN_WXCRAFTER_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/dialog.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/stc/stc.h>
#include <wx/button.h>
#include <wx/panel.h>
#include <wx/splitter.h>
#include "gsgsSplitterWindow.h"
#include <wx/textctrl.h>
#include <wx/stattext.h>
#include <wx/treectrl.h>
#include "gsgsFileViwerTreeCtrl.h"
#include <wx/dataview.h>
#include "gsgsTreeCtrl.h"
#include <wx/srchctrl.h>
#include <wx/scrolwin.h>
#include <wx/statbmp.h>
#include "gsgsButton.h"
#include <wx/frame.h>
#include <wx/listbox.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

#include "gsgsPreInclude.h"
// clang-format on

class _gsgsAPI GetTextFromUserBaseDialog : public wxDialog
{
protected:
    wxStaticText* m_staticTextCaption;
    wxTextCtrl* m_textCtrl;
    DialogButtonSizer* m_stdBtnSizer137;
    gsgs::Button* m_buttonCancel;
    gsgs::Button* m_buttonOK;

protected:
public:
    wxStaticText* GetStaticTextCaption() { return m_staticTextCaption; }
    wxTextCtrl* GetTextCtrl() { return m_textCtrl; }
    GetTextFromUserBaseDialog(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = wxT(""),
                                const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1),
                                long style = wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    virtual ~GetTextFromUserBaseDialog();
};

class NotebookNavigationDlgBase : public wxDialog
{
protected:
    wxPanel* m_panel161;
    gsgs::ThemedListCtrl* m_dvListCtrl;

protected:
    virtual void OnKeyDown(wxKeyEvent& event) { event.Skip(); }
    virtual void OnKeyUp(wxKeyEvent& event) { event.Skip(); }
    virtual void OnItemActivated(wxDataViewEvent& event) { event.Skip(); }

public:
    gsgs::ThemedListCtrl* GetDvListCtrl() { return m_dvListCtrl; }
    wxPanel* GetPanel161() { return m_panel161; }
    NotebookNavigationDlgBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Select Tab"),
                              const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(400, 200),
                              long style = wxRESIZE_BORDER);
    virtual ~NotebookNavigationDlgBase();
};

class _gsgsAPI EditorBarBase : public wxPanel
{
protected:
    DefaultButton* m_buttonScope;
    DefaultButton* m_buttonFilePath;
    DefaultButton* m_buttonBookmarks;

protected:
    virtual void OnButtonScope(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonActions(wxCommandEvent& event) { event.Skip(); }
    virtual void OnButtonBookmarks(wxCommandEvent& event) { event.Skip(); }

public:
    DefaultButton* GetButtonScope() { return m_buttonScope; }
    DefaultButton* GetButtonFilePath() { return m_buttonFilePath; }
    DefaultButton* GetButtonBookmarks() { return m_buttonBookmarks; }
    EditorBarBase(wxWindow* parent, wxWindowID id = wxID_ANY, const wxPoint& pos = wxDefaultPosition,
                    const wxSize& size = wxSize(-1, -1), long style = wxTAB_TRAVERSAL);
    virtual ~EditorBarBase();
};

class TableLineEditorBaseDlg : public wxFrame
{
protected:
    wxPanel* m_panel344;
    wxListBox* m_listBoxColumns;
    wxStyledTextCtrl* m_stc;

protected:
    virtual void OnColumnSelected(wxCommandEvent& event) { event.Skip(); }

public:
    wxListBox* GetListBoxColumns() { return m_listBoxColumns; }
    wxStyledTextCtrl* GetStc() { return m_stc; }
    wxPanel* GetPanel344() { return m_panel344; }
    TableLineEditorBaseDlg(wxWindow* parent, wxWindowID id = wxID_ANY, const wxString& title = _("Text Viewer"),
                             const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxSize(-1, -1),
                             long style = wxDEFAULT_FRAME_STYLE | wxFRAME_FLOAT_ON_PARENT);
    virtual ~TableLineEditorBaseDlg();
};

#endif
