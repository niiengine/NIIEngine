//--------------------------------------------------------------------------
TODO:
    加入RenderEffect概念,把GPUProgram概念化
//--------------------------------------------------------------------------
OGRE_MAX_TEXTURE_LAYERS == NII_MAX_TextureLayer
所有 命名空间,类,全局函数
getBoundingBox == getAABB
setBoundingBox == setAABB
getBoundingRadius == getBR
getWorldBoundingBox == getSpaceAABB
getWorldBoundingSphere == getSpaceBS
_updateRenderQueue == _update
setRenderingDistance == setVisibleDistanceLimit
getRenderingDistance == getVisibleDistanceLimit
calculateSize == calcSize
createOrRetrieve == ref
addListener == add
removeListener == remove
addFactory == add
removeFactory == remove
addEffect == add
removeEffect == remove
addRenderable == add
freeMemory == free
addChild == add
getChild == get
getSquaredViewDepth == getSDis
getOrientation == getOri
setOrientation == setOri
getPosition == getPos
setPosition == setPos
setListener == set
_getDerivedPosition == getSpacePos
_setDerivedPosition == setSpacePos
_setDerivedOrientation == setSpaceOri
_notifyAttached == _notify
setRenderQueueGroup == setRenderGroup 融入到 setRenderQueueGroupAndPriority
setRenderQueueGroupAndPriority == setRenderGroup
getRenderQueueGroup == getRenderGroup
setDebugDisplayEnabled == setDebugMode
getRenderOperation == getGeometry 这个函数一般是来自 GeometryObj 的子类
getWorldTransforms == getWorldMatrix
_getWorldTransforms == _getWorldMatrix
getNumWorldTransforms == getMatrixCount
getCastShadows == isCastShadow
_updateCustomGpuParameter == updateCustom
setPolygonModeOverrideable == setAutoReduce
getPolygonModeOverrideable == getAutoReduce
_getRenderSystemData == _getRenderData
getConfigOptions == getConfig
setConfigOption == setConfig
getDescription == getVerbose
getDescriptionFor == getVerbose
_initialise == _init
_initialize == _init
initialise == init
mRenderQueueID == mRenderGroup
mRenderQueuePriority == mRenderLevel
mRenderQueueIDSet 融入 mRenderGroup 概念
mRenderQueuePrioritySet 融入到 mRenderLevel 概念
setLightingEnabled == setLight
getUserObjectBindings == getUserBindings
getErrorDescription == getErrorString
determineEndianness == checkEndianness
allocateBytes == alloc
deallocateBytes == dealloc
getMaxAllocationSize == getMaxSize
Inverse = inverse
getInterpolatedKeyFrame == getFusion
setCastShadows == setCastShadow
LS_PREPARED == LS_PLANNED
LS_PREPARING == LS_PLANNING
变量
mUserObjectBindings == mUserBindings
NameValuePairList == PropertyData 类对象 非 multimap<>
getByName == get
GpuProgramType == ShaderType 移入到 GpuProgram
GPT_VERTEX_PROGRAM == ST_VS
GPT_FRAGMENT_PROGRAM == ST_FS
GPT_GEOMETRY_PROGRAM == ST_GS
工厂类 createInstanceImpl == create
BackgroundProcessTicket == BgPrcID
VertexKeyFrameTrack::TargetMode 移到 KeyFrameTrack 改名 CalcMode
TM_SOFTWARE == KeyFrameTrack::M_HOST
TM_HARDWARE == KeyFrameTrack::M_DEV
setMaterialName == setMaterial
hasAnimation == isAnimationExist
getNumAnimations == getAnimationCount
hasAnimationState == isFusionExist
getAnimationState == getFusion
getColourVertexElementType == getColourType
SceneBlendFactor == ColourFactor
findCommandLineOpts == findCmdArgs
SBF_ONE == CF_ONE
SBF_DEST_COLOUR == CF_DST
SBF_SOURCE_COLOUR == CF_SRC
SBF_ONE_MINUS_DEST_COLOUR == CF_INV_DST
SBF_ONE_MINUS_SOURCE_COLOUR == CF_INV_SRC
SBF_DEST_ALPHA == CF_DST_ALPHA
SBF_SOURCE_ALPHA == CF_SRC_ALPHA
SBF_ONE_MINUS_DEST_ALPHA == CF_INV_DST_ALPHA
SBF_ONE_MINUS_SOURCE_ALPHA == CF_INV_SRC_ALPHA
SBF_ZERO == CF_ZERO
FOG_NONE == FM_NONE
FOG_EXP == FM_EXP
FOG_EXP2 == FM_EXP2
FOG_LINEAR == FM_LINEAR
ShadowTechnique == ShadowFeture
SHADOWDETAILTYPE_INTEGRATED == SF_Fusion
SceneBlendOperation == ColourBlendMode
SBO_ADD == CBM_ADD
SBO_SUBTRACT == CBM_SUBTRACT
SBO_REVERSE_SUBTRACT == CBM_REV_SUBTRACT
SBO_MIN == CBM_MIN
SBO_MAX == CBM_MAX
IS_AMBIENT == SS_Global
IS_PER_LIGHT == SS_Detail_Light
IS_SHADOW == SS_Shadow
IS_DECAL == SS_Decal
IS_UNKNOWN == SS_UNKNOW
ShadeOptions == ShadeMode
SO_NONE ==  SM_NONE
SO_FLAT == SM_FLAT
SO_GOURAUD == SM_GOURAUD
SO_PHONG == SM_PHONG
TrackVertexColourType == Nmark
ManualCullingMode == SysCullingMode
TrackVertexColourEnum == ColourMark
TVC_NONE == CTM_T_NONE
TVC_AMBIENT == CTM_T_AMBIENT
TVC_DIFFUSE == CTM_T_DIFFUSE
TVC_SPECULAR == CTM_T_SPECULAR
TVC_EMISSIVE == CTM_T_EMISSIVE
MANUAL_CULL_NONE == SCM_NONE
MANUAL_CULL_BACK == SCM_BACK
MANUAL_CULL_FRONT == SCM_FRONT
CompareFunction == CmpMode
CMPF_ALWAYS_FAIL == CM_ALWAYS_FAIL
CMPF_ALWAYS_PASS == CM_ALWAYS_PASS
CMPF_EQUAL == CM_EQUAL
CMPF_NOT_EQUAL == CM_NOT_EQUAL
CMPF_LESS == CM_LESS
CMPF_LESS_EQUAL == CM_LESS_EQUAL
CMPF_GREATER_EQUAL == CPM_GREATER_EQUAL
CMPF_GREATER == CM_GREATER
TextureFilterOptions == TextureFilterMode
CpuFeatures == CpuSimd
CF_SSE == CS_SSE
CF_SSE2 == CS_SSE2
CF_SSE3 == CS_SSE3
CF_SSSE3 == CS_SSSE3
CF_SSE4 == CS_SSE4
CF_SSE42 == CS_SSE42
CF_MMX == CS_MMX
CF_MMX2 == CS_MMX2
CF_3DNOW == CS_3DNOW
CF_3DNOWEXT == CS_3DNOWEXT
CF_CMOV == CS_CMOV
CF_TSC == CS_TSC
CF_FPU == CS_FPU
CF_PRO == CS_PRO
CF_HTT == CS_HTT
CF_ALTIVEC == CS_ALTIVEC
CF_VFP == CS_VFP
CF_VFP3 == CS_VFP3
CF_NEON == CS_NEON
CF_NONE == CS_NONE
LightTypes == LightType
setNormaliseNormals == setUnitNormals
getNormaliseNormals == isUnitNormals
attachDepthBuffer == attachExt
detachDepthBuffer == detachExt
CULL_CLOCKWISE == CM_Clockwise
CULL_NONE == CM_None
CULL_ANTICLOCKWISE == CM_Anticlockwise
RenderOperation == GeometryRaw
FilterType == TextureFilterType
getDerivedDirection == getSpaceDirection
FT_MIN == TFT_MIN
FT_MAG == TFT_MAG
FT_MIP == TFT_MIP
FilterOptions == TextureFilterOP
FO_NONE == TFOP_NONE
FO_POINT == TFOP_POINT
FO_LINEAR == TFOP_LINEAR
FO_ANISOTROPIC == TFOP_ANISOTROPIC
TextureAddressingMode::TAM_WRAP == TAM_REPEAT
enum TexCoordCalcMethod == TextureCoordPrc

TEXCALC_NONE == TCP_NONE
TEXCALC_ENVIRONMENT_MAP == TCP_ENV_SPHERE
TEXCALC_ENVIRONMENT_MAP_NORMAL == TCP_ENV_NORMAL
TEXCALC_ENVIRONMENT_MAP_PLANAR == TCP_ENV_REFLECTION
TEXCALC_ENVIRONMENT_MAP_REFLECTION == TCP_ENV_REFLECTION_INV
TEXCALC_PROJECTIVE_TEXTURE == TCP_ENV_PROJECTIVE

RenderQueueGroupID == RenderGroupType
NII_AUTO_MUTEX == N_mutex1
NII_AUTO_MUTEX_NAME == N_mutex1_name
NII_LOCK_AUTO_MUTEX == N_mutex1_lock
NII_MUTEX == N_mutable_mutex
NII_STATIC_MUTEX == N_static_mutex
NII_STATIC_MUTEX_INSTANCE == N_mutex
NII_LOCK_MUTEX == N_lock_mutex

VES_TEXTURE_COORDINATES == VT_Tex_Coord
VES_POSITION == VT_Pos
VES_NORMAL == VT_Normals
VES_DIFFUSE == VT_Diffuse
VES_BLEND_WEIGHTS == VT_Matrix_Weight
VES_BLEND_INDICES == VT_Matrix_Index
VES_SPECULAR == VT_Specular
VES_BINORMAL == VT_Binormal
VES_TANGENT == VT_Tangent
VEC_SPACE == VT_Space
VES_COUNT == VT_Count
DataType -> VET_FLOAT1 == DT_Float1x
DataType -> VET_FLOAT2 == DT_Float2x
DataType -> VET_FLOAT3 == DT_Float3x
DataType -> VET_FLOAT4 == DT_Float4x
DataType -> VET_COLOUR == DT_Colour
DataType -> VET_COLOUR_ARGB == DT_Colour_ARGB
DataType -> VET_COLOUR_ABGR == DT_Colour_ABGR
DataType -> VET_SHORT1 == DT_Short1x
DataType -> VET_SHORT2 == DT_Short2x
DataType -> VET_SHORT3 == DT_Short3x
DataType -> VET_SHORT4 == DT_Short4x
DataType -> VET_UBYTE4 == DT_UByte
DataType -> VET_BYTE4 == DT_Byte
TextureEffectType 融入到 TextureTransformType {
    ET_UVSCROLL == TTT_UV_OFT
    ET_USCROLL == TTT_U_OFT
    ET_VSCROLL == TTT_V_OFT
    ET_ROTATE == TTT_ROTATE
    ET_TRANSFORM == TTT_FUNCTION
}
ColourBufferType == ViewportType

needsDifferentView 反义 isValidView
//--------------------------------------------------------------------------
惟独 ID, 只有可编程类才会有这个ID (reg to factory)

Root                            0x1001
ZipArchive                      0x1002
FileSystem                      0x1003
LibArchive                      0x1004
Skeleton                        0x1005
Bone                            0x1006
SpaceNode                       0x1007
ParticleCtrlGeo					0x1008

GameObj                         0x10000

//--------------------------------------------------------------------------
类 Renderable            改名为 GeometryObj
类 RenderObjectListener  改名为 GeometryObjListener
类 MovableObject         改名为 SpaceObj
类 UserObjectBindings    改名为 ExtData
类 ShadowRenderable      改名为 ShadowVolume
类 SimpleRenderable      改名为 RenderObj
类 ManualObject          改名为 CustomSpaceObj
类 StringConverter       改名为 StrConvert 类
类 StringUtil            改名为 StrUtil 类
类 ParamCommand          改名为 PropertyCmd 类
去掉 Real 类型 还原成 NIIf
移去 ScriptCompilerListener
移去 ScriptCompilerEvent
移去 ProcessResourceNameScriptCompilerEvent
移去 ProcessNameExclusionScriptCompilerEvent
移去 CreateMaterialScriptCompilerEvent
移去 CreateGpuPreDefineValueScriptCompilerEvent
移去 CreateParticleSpaceScriptCompilerEvent
移去 CreateCompositorScriptCompilerEvent
类 PlatformInformation   改名为 PlatInfo
类 Request               从 WorkQueue     中分离 并改名为 ResourceJob (getChannel 概念移去)
类 RequestHandler        从 WorkQueue     中分离 并改名为 JobPrc
类 Response              从 WorkQueue     中分离 并改名为 JobResult
类 ResponseHandler       从 WorkQueue     中分离 并改名为 JobResultPrc 概念融入到 JobPrc
类 ParamDictionary       改名为 PropertyCmdSet
类 ParameterDef          合并到 PropertyCmd 中
类 StringInterface       改名为 PropertyCmdObj
类 ColourValue           改名 Colour
类 STLAllocator          改名 StlAlloc
类 STLAllocatorBase      改名 StlAllocBase
类 SharedPtr             改名 SharedPtrST
类 HardwareIndexBuffer   改名 IndexBuffer
类 HardwareBuffer        改名 Buffer
类 HardwareUniformBuffer 改名 StructBuffer
类 OptimisedUtil 改名	     SIMDUtil
类 DefaultHardwareUniformBuffer 改名 MemUniformBuffer
类 Compositor            改名 Fusion
类 GBufferManager 改名 BufferManager
类 HardwareBufferManager 改名 BufferManager
类 HardwarePixelBuffer 改名 FrameBuffer 失效
类 HardwareVertexBuffer 改名 VertexBuffer
类 DefaultHardwareVertexBuffer 改名 MemVertexBuffer
类 DefaultHardwareIndexBuffer 改名 MemIndexBuffer
类 RenderSystem 改名 RenderSys
类 RenderSystemCapabilities 改名 RenderFeature
类 RenderSystemCapabilitiesManager 改名 RenderSysManager
类 RenderSystemCapabilitiesSerializer 改名 RenderFeatureSerializer
类 AutoParamDataSource 改名 SysSyncParam
类 HardwarePixelBufferSharedPtr 改名 FrameBufferSPtr
类 HardwareVertexBufferSharedPtr 改名 VertexBufferSPtr
类 HardwareIndexBufferSharedPtr 改名 IndexBufferSPtr
类 ManualResourceLoader 转入 ResLoadScheme 概念中
类 CompositorManager 改名 FusionManager
类 Root 改名 Engine
类型 ResourceHandle 改名 PrcID
类 ResourceBackgroundQueue 改名 LoadSchemeManager
类 GpuProgramUsage 改名 ShaderChShader 融入 ShaderChProgram
类 Pass 改名 ShaderCh
类 Technique 改名 ShaderFusion
类 CompositionPass 改名 FusionShaderOp
类 CompositionTargetPass 改名 FusionShader
类 CompositionTechnique 改名 FrameShader
类 CompositorChain 改名 FusionInstance
类 CompositorInstance 改名 FrameFusion
类 LodStrategyManager 改名 LodSchemeManager
类 LodStrategy 改名 LodScheme
类 DistanceLodStrategy 改名 CameraLodScheme
类 PixelCountLodStrategy 改名 ViewLodScheme
类 WindowEventListener 改名 WindowListener
类 WindowEventUtilities 改名 WindowUtil
类 ExternalTextureSource 改名 TextureFactory
类 AxisAlignedBox 改名 AABox
类 AnyNumeric 使用 FusionData 代替
类 SimpleSpline 改名 LinearSpline
类 SceneManager 改名 SpaceManager
类 ResourceGroupManager 改名 ResourceSchemeManager
类 HardwareOcclusionQuery 改名 PixelCountQuery
类 PixelBox 改名 PixelBlock
类 RenderTexture 改名 TextureFrame 失效
类 GpuNamedConstants 改名 GpuParamDefine
类 RenderToVertexBuffer 改名 DisplayBuffer
结构 MeshLodUsage 变形为 MeshLodScheme
结构 MeshLodUsage 改名 MeshLod
分散 ViewLodScheme 概念为 MeshViewlLodScheme
分散 CameraLodScheme 概念为 MeshCameraLodScheme
分散 ViewLodScheme 概念为 MaterialViewLodScheme
分散 CameraLoaScheme 概念为 MaterialCameraLodScheme
类 IteratorWrapper 改名 Iterator
类 VectorIteratorWrapper 改名 VectorContainer
类 MapIteratorWrapper 改名 MapContainer
文件 NiiIteratorWrappers.h 内容移入 NiiSTLPreDefine.h
类 TextureUnitState 改名 ShaderChTextureUnit
struct ResourceGroup 改名 LoadGroup
类 Archive 改名 VFS
类 ArchiveManager 改名 VFSManager
类 CompositorLogic 改名 FrameFusionListener
类 ArchiveFactory 改名 VFSFactory
类 WorkQueue 改名 ThreadManager
类 DefaultWorkQueueBase 融入到 ThreadManager
类 Entity 改名 GeometrySpace
类 SubEntity 改名 GeometryCom
类 ScriptLoader 改名 PropertyScriptSys
类 NumericKeyFrame 改名 UnitKeyFrame
类 AnimationTrack 改名 KeyFrameTrack
类 TransformKeyFrame 改名 NodeKeyFrame
类 NumericAnimationTrack 改名 UnitKeyFrameTrack
类 NodeAnimationTrack 改名 NodeKeyFrameTrack
类 VertexAnimationTrack 改名 VertexKeyFrameTrack
类 AnimationState 改名 AnimationFusion 转变概念 为 NodeFusion 衍生出另一个 AnimationFusion 基类
类 AnimationStateSet 改名 AnimationFusionObj
类 VertexMorphKeyFrame 改名 VertexUnitKeyFrame
类 VertexPoseKeyFrame 改名 VertexOffsetKeyFrame
类 TimeIndex 改名 TrackTime
类 AnimationContainer 改名 AnimationObj
类 TempBlendedBufferInfo 改名 AniTempBuffer
类 LinkedSkeletonAnimationSource 放到 Skeleton内 改名 ExtSkeleton
类 SkeletonInstance 改名 SkeletonFusion
类 Node 改名 PosNode 后 加入/ Node 新概念
类 GpuProgramParameters 改名 GpuProgramParam
类 GpuSharedParameters 改名 GpuParamValue
类 GpuProgramParametersSharedPtr 改名 GpuProgramParamPtr
VertexAnimationType 改名 AnimationMode
VAT_NONE == AM_None
VAT_MORPH == AM_VertexUnit
VAT_POSE == AM_VertexOffset
HardwareBufferLicensee 改名 TempBufferCtl
类 QueuedRenderableVisitor 改名 RenderFilter
移去 类 Angle
类 Degree 改名 Angle
类 Pose 改名 VertexOffset
类 RenderWindow 改名 ViewWindow 失效
类 AnimableValue 改使用 FusionData
类 IlluminationPass 改名 Fusion 移入 ShaderFusion
类 MemoryDataStream 改名 MemStream
类 PlaneBoundedVolumeListSpaceQuery 改名 PlaneSpaceQuery
类 AxisAlignedBoxSpaceQuery 改名 AABSpaceQuery
类 DefaultAxisAlignedBoxSpaceQuery 改名 DefaultAABSpaceQuery
类 SceneMgrQueuedRenderableVisitor 改名 ShadowRenderTest
类 RenderQueueGroup 改名 RenderGroup
类 ManualObjSectionShadowRenderable 改名 ManualObjShadowVolume
类 EntityShadowRenderable 改名 GeometrySpaceShadowVolume 内部类
类 LODShadowRenderable 改名 LODBucketShadowVolume
类 ShadowCaster 改名 ShadowObj
结构 UVWAddressingMode 改名 TextureAddressing
类 ControllerFunction 改名 DataFunc
类 ControllerValue 改名 DataValue
类 Controller 改名 DataEquation
类 EdgeData 改名 GeoEdget
类 VertexBoneAssignment 改名 SkeletonVertex
类 VertexCacheProfiler 无效移去
类 VertexElement 改名 VertexUnit
类 PlaneBoundedVolume 改名 PlaneSpace
类 ShadowCameraSetup 改名 CameraSetup
类 AnimableObject 改名 FusionDataCollector
类 FrameListener 改名 RenderFrameListener
类 FrameEvent 改名 RenderFrameArgs
类 RenderTarget 改名 FrameObj 失效
类 RenderTargetListener 改名 FrameObjListener
类 DepthBuffer 改名 ExtFrameBuffer 失效 用于FrameObj MultiTextureFrame
类 RenderQueueInvocationSequence 改名 RenderQueueFusion
类 MultiRenderTarget 改名 MultiTextureFrame 失效
类 TagPoint 改名 TagBone
类 DefaultHardwareBufferManagerBase 和 DefaultHardwareBufferManager 合并 MemGBufferManager
类 BufferManagerBase 和 BufferManager 合并 GBufferManager
类 VertexBufferLicense 改名 TempBufferCtlPrc
类 GpuLogicalBufferStruct 改名 GpuParamMap 融入到 GpuParamDefine
类 GpuParamVariability 改名 GpuBindType
类 GpuConstantDefinition 改名 GpuParamUnit
类 GpuLogicalIndexUse 改名 GpuParamBlock
类 AutoConstantEntry 改名 GpuSyncParamBlock 融入到 GpuParamBlock
类 GpuSharedParametersUsage 改名 ParamValueSync 内部函数
类 RenderQueueListener 改名 RenderListener
类 RenderQueueInvocation 改名 RenderGroupFusion
类 QueuedRenderableCollection 改名 RenderSort
类 RenderablePass 改名 RenderItem
类 RenderPriorityGroup 改名 RenderLevelGroup
类 VisibleObjectsBoundsInfo 改名 RenderBound
类 ParticleEmitter 改名 SpreadParticle
类 ConfigOption 改名 SysOption
类 StencilOperation 改名 StencilOpType
类 AnimationStateControllerValue 改名 AnimationDataValue
类 SceneQuery 改名 SpaceQuery
类 RegionSpaceQuery 改名 AreaSpaceQuery
类 SpaceQueryListener 改名 SpaceQueryCmd
类 PrefabType 改名 GeometrySamplePrefab
类 SceneNode 改名 SpaceNode
类 BillboardChain 改名 PixelChain
类 RibbonTrail 改名 PixelOrbit
类 VendorMatch 改名 GpuVendorDetail
类 Capabilities 改名 GpuFeature
类 Billboard 改名 SyncParticle
类 BillboardSet 改名 ParticleCtrl
类 ParticleVisualData 改名 ParticleEffect
WorldFragmentType 改名 PrimitivesType
类 WireBoundingBox 改名 WireAABGeo
类 Rectangle2D 改名 RectGeo
类 ParticleSystem 改名 ParticleSpace
类 ParticleAffector 融入到 ParticleEffect
类 ParticleSystemRenderer 改名 ParticleGeo
类 BillboardParticleRenderer 改名 ParticleCtrlGeo
类 MovableObjectFactory 改名 SpaceObjFactory
类 StaticGeometry 改名 StaticSpace
类 InstancedGeometry 改名 InstanceSpace
类 MovableObjectLodChangedEvent 改名 SpaceLodEvent
类 EntityMeshLodChangedEvent 改名 MeshLodEvent
类 EntityMaterialLodChangedEvent 改名 MaterialLodEvent
类 UnifiedHighLevelGpuProgram 改名 ProxyGpuProgram
类 SceneManagerEnumerator 改名 SpaceTypeManager
类 SceneManagerMetaData 改名 SpaceTypeVerbose
类 SceneManagerFactory 改名 SpaceTypeFactory
类 DynLib 改名 DynamicModule
类 ControllerManager 改名 EquationManager
类 InstanceManager 改名 InstanceMesh
类 InstancedEntity 改名 InstanceGeo
类 OverlayElement 改名 OverlayGeo
类 OverlayContainer 改名 OverlayView
类 TextAreaOverlayGeo 该名 TextOverlayGeo
类 BorderPanelOverlayGeo 改名 FrameOverlayGeo
类 PanelOverlayGeo 改名 ContainerOverlayView
类 AbstractNode 改名 ScriptNode
类 ScriptTranslator 改名 ScriptAnalyze
类 MaterialTranslator 改名 MaterialScriptAnalyze
类 MeshSerializerListener 整个概念移去
类 MeshSerializerImpl 融并到 MeshSerializer
类 MovablePlane 改名 PlaneSpaceObj
类 CurvedSurface 改名 CurvedSurface
类 FrameBufferObject 改名 FrameBufferObject
类 HlmsSamplerblock == TextureSampleUnit
类 HlmsBlendblock == ShaderChBlend
类 HlmsDepthblock == ShaderChStencil
蕾 DescriptorSetTexture2 == ShaderChTexture
类 DescriptorSetSampler == TextureSample
类 DescriptorSetUav == GpuParamBuffer
类 VertexArrayObject == GeometryRaw
WFT_NONE == PT_None
WFT_PLANE_BOUNDED_REGION == PT_PlaneList
WFT_SINGLE_INTERSECTION == PT_Point
WFT_CUSTOM_GEOMETRY == PT_SpaceObj
WFT_RENDER_OPERATION == PT_GeoRaw
SOP_KEEP == SOT_KEEP
SOP_ZERO == SOT_ZERO
SOP_REPLACE == SOT_REPLACE
SOP_INCREMENT == SOT_INCR
SOP_DECREMENT == SOT_DECR
SOP_INVERT == SOT_INVERT
SOP_INCREMENT_WRAP == SOT_INCR_WRAP
SOP_DECREMENT_WRAP == SOT_DECR_WRAP
结构 RenderWindowDescription 改名 WindowDefine
CapabilitiesCategory 改名 GpuFeatureGroup
ACDataType 改名 SyncParamInput
AutoConstantType 改名 GpuSyncParam
AutoConstantDefinition 改名 GpuEnvParamUnit 使用 GpuParamUnit代替
PixelFormatFlags 改名 PixelFormatFeature
PixelComponentType 改名 PixelDataType
LayerBlendSource 改名 TextureBlendSource
LayerBlendType 改名 TextureColourType
VertexElementType 改名 DataType
VertexDeclaration VertexBufferBinding 合并概念到 VertexData
VertexElementSemantic 改名 VertexType
SceneBlendType 改名 FrameBlendMode
LayerBlendOperation 改名 TextureBlendMode
LayerBlendOperationEx 改名 TextureBlendOp
结构 LayerBlendModeEx 改名 TextureBlend
OrganisationMode 外移 改名 RenderSortMode
OM_SORT_DESCENDING == RSM_View_Descending 概念融入 RSM_View
OM_SORT_ASCENDING == RSM_View_Ascending 概念融入 RSM_View
OM_PASS_GROUP == RSM_Material
ACDT_NONE == SPI_None
ACDT_INT == SPI_Int
ACDT_REAL == SPI_Float
PCT_BYTE ==  PDT_Byte
PCT_SHORT == PDT_Short
PCT_FLOAT16 == PDT_Float16
PCT_FLOAT32 == PDT_Float
PCT_COUNT == PDT_Count
GpuConstantType == GpuDataType
PFF_Float == PFF_Float
PFF_HASALPHA == PFF_Alpha
PFF_Depth == PFF_Depth
PFF_Compress == PFF_Compress
PFF_NATIVEENDIAN == PFF_NonEndian
PFF_LUMINANCE == PFF_Grayscale
SBT_ADD == FBM_ADD
SBT_SUBTRACT == FBM_SUBTRACT
SBT_MODULATE == FBM_MODULATE
SBT_REPLACE == FBM_REPLACE
SBT_MIN == FBM_MIN
SBT_MAX == FBM_MAX
SBT_TRANSPARENT_ALPHA == FBM_INV_ALPHA
SBT_TRANSPARENT_COLOUR == FBM_INV_COLOUR
TFO_BILINEAR == TFM_BILINEAR
TFO_TRILINEAR == TFM_TRILINEAR
TFO_ANISOTROPIC == TFM_ANISOTROPIC
TFO_NONE == TFM_NONE
ContentType == Type
CONTENT_NAMED == T_NORMAL
CONTENT_SHADOW == T_SHADOW
CONTENT_COMPOSITOR == T_FUSION
LBS_TEXTURE == TBS_TEXTURE
LBS_CURRENT == TBS_PRE_TEXTURE
LBS_DIFFUSE == TBS_DIFFUSE
LBS_SPECULAR == TBS_SPECULAR
LBS_MANUAL == TBS_CONSTANT
LBT_COLOUR == TCT_RGB
LBT_ALPHA == TCT_AAA
LBO_ADD == TBM_Src_Add_Dst
LBO_REPLACE == TBM_Src_Replace_Dst
LBO_MODULATE == TBM_Src_Modulate_Dst
LBO_ALPHA_BLEND == TBM_Src_Alpha_Dst
LBX_SOURCE1 == TBO_OPERAND1
LBX_SOURCE2 == TBO_OPERAND2
加入 TBO_OPERAND3
LBX_MODULATE == TBO_MODULATE
LBX_MODULATE_X2 == TBO_MODULATE_2X
LBX_MODULATE_X4 == TBO_MODULATE_4X
LBX_SUBTRACT == TBO_SUB
LBX_ADD == TBO_ADD
LBX_ADD_SIGNED == TBO_ADD_SIGNED
LBX_ADD_SMOOTH == TBO_ADD_SMOOTH
LBX_DOTPRODUCT == TBO_DOT_PRODUCT
LBX_BLEND_MANUAL == TBO_CONSTANT_FACTOR
LBX_BLEND_DIFFUSE_ALPHA == TBO_ADD_DIFFUSE
LBX_BLEND_TEXTURE_ALPHA == TBO_ADD_TEXTURE
LBX_BLEND_CURRENT_ALPHA == TBO_ADD_PRE_TEXTURE
LBX_BLEND_DIFFUSE_COLOUR == TBO_ADD_SPECULAR
PM_WIREFRAME == PM_LINE
_updateBounds == updateSpaceAABB

GpuConstantDefinitionMap == GpuParamUnitList
//--------------------------------------------------------------------------
移去内存分类概念 CateAlloc CateAlignAlloc  MemoryCategory MC_GENERAL MC_GEOMETRY
MC_ANIMATION MC_SCENE_CONTROL MC_SCENE_OBJECTS MC_RESOURCE MC_SCRIPTING MC_RENDERSYS
MC_Net  MC_COUNT GeneralAlloc GeometryAlloc AnimationAlloc SceneCtlAlloc
SceneObjAllocResourceAlloc ScriptingAlloc RenderSysAlloc
//--------------------------------------------------------------------------
LoggingLevel == LogDetail
LogMessageLevel == LogLevel
IlluminationStage == ShaderStep
//--------------------------------------------------------------------------
class SharedPtrST -> SharedPtrFreeMethod == MemUsage
class SharedPtrST -> SPFM_DELETE == MU_Delete
class SharedPtrST -> SPFM_DELETE_T == MU_Delete_T
class SharedPtrST -> SPFM_FREE == MU_Free
class SharedPtrST -> unique == isOneRef
class SharedPtrST -> useCount == getRefCount
class SharedPtrST -> useCountPointer == getRefCountPtr
class SharedPtrST -> freeMethod == getMemUsage
class SharedPtrST -> pRep == mPtr
class SharedPtrST -> pUseCount == mCount
class SharedPtrST -> useFreeMethod == mUsage
//--------------------------------------------------------------------------
class PropertyCmdSet 移去 getParameters
class PropertyCmdSet 添加 remove
class PropertyCmdSet -> addParameter == add
class PropertyCmdSet -> getParamCommand == get
class PropertyCmdSet -> 融入到 PropertyCmdObj (内部类)
//--------------------------------------------------------------------------
class PixelUtil -> hasAlpha == isAlpha
class PixelUtil -> isFloatingPoint == isFloat
class PixelUtil -> getFlags == getExentMark
class PixelUtil -> isCompress == isCompress
class PixelUtil -> isLuminance == isGrayscale
class PixelUtil -> isValidExtent 无用移去
class PixelUtil -> getBitDepths == getBitDepth
class PixelUtil -> getBitMasks == getBitMask
class PixelUtil -> getBitShifts == getBitShift
class PixelUtil -> getNumElemBytes == getUnitSize
class PixelUtil -> getNumElemBits == getUnitSize *8
class PixelUtil -> getFormatName == getMarkName
class PixelUtil -> isAccessible == isDirect
class PixelUtil -> getComponentType == getDataType
class PixelUtil -> getComponentCount == getDataCount
class PixelUtil -> getFormatFromName == getFormat
class PixelUtil -> getBNFExpressionOfPixelFormats 移去
class PixelUtil -> getFormatForBitDepths == getFormat
class PixelUtil -> bulkPixelConversion == conv
class PixelUtil -> bulkPixelConversion == conv
class PixelUtil -> bulkPixelVerticalFlip == verticalFlip -> PixelBlock

//--------------------------------------------------------------------------
class PropertyCmdObj 移去 getParameters
class Polygon -> removeDuplicates == opt
class Polygon -> reset == cleanAll
class Polygon -> storeEdges = getEdge
//--------------------------------------------------------------------------
class GpuParamUnit -> constType == mDataType
class GpuParamUnit -> elementSize == mUnitSize == mUnit32bSize
class GpuParamUnit -> arraySize == mUnitCount
class GpuParamUnit -> variability == mGBTMark
class GpuParamUnit -> physicalIndex == mMemIndex
class GpuParamUnit -> logicalIndex == mIndex
class GpuParamUnit -> getElementSize == getTypeCount 移动到 GpuProgramParam
class GpuParamUnit -> isFloat == mDataType < GDT_Int
class GpuParamUnit -> isSampler == mDataType > GDT_Int4X
//--------------------------------------------------------------------------
class GpuParamBlock -> physicalIndex == mMemIndex
class GpuParamBlock -> variability == mGBTMark
class GpuParamBlock -> currentSize == mSize
//--------------------------------------------------------------------------
enum TextureUsage -> TU_STATIC 融入移去
enum TextureUsage -> TU_DYNAMIC 融入移去
enum TextureUsage -> TU_WRITE_ONLY 无效移去
enum TextureUsage -> TU_STATIC_WRITE_ONLY 融入移去
enum TextureUsage -> TU_DYNAMIC_WRITE_ONLY 融入移去
enum TextureUsage -> TU_DYNAMIC_WRITE_ONLY_DISCARDABLE 融入移去
enum TextureUsage -> TU_AUTOMIPMAP == MM_MIPMAP_AUTO
enum TextureUsage -> TU_RENDERTARGET == MM_FRAME_RGB
enum TextureUsage -> 加入 MM_FRAME_DEPTH MM_FRAME_A MM_FRAME_STENCIL
enum TextureUsage -> Texture 中的 MemMode
enum TextureUsage -> TU_DEFAULT 融入移去
//--------------------------------------------------------------------------
class PropertyCmdObj -> setParameter == set
class PropertyCmdObj -> getParameter == void get(const String & name, String & value)
class PropertyCmdObj -> setParameterList == set
class PropertyCmdObj -> getParamDictionary == getCollecter
class PropertyCmdObj -> createParamDictionary == setupCmd(ClassID cid)
class PropertyCmdObj -> copyParametersTo == copyParam
class PropertyCmdObj -> msDictionary == mCmdCollectMap
class PropertyCmdObj -> msDictionaryMutex == mCmdCollectMapMutex
class PropertyCmdObj -> cleanupDictionary == clean
class PropertyCmdObj -> mParamDictName == mCmdObjID
class PropertyCmdObj -> mParamDict == mCmdCollecter
//--------------------------------------------------------------------------
class PropertyCmd -> doGet == get
class PropertyCmd -> doSet == set
class PropertyCmd -> mDescrip == mVerbose
//--------------------------------------------------------------------------
class DisplayBuffer -> setRenderToBufferMaterialName == setMaterialID
class DisplayBuffer -> getRenderToBufferMaterial == getMaterial
class DisplayBuffer -> setOperationType == setGeoOp
class DisplayBuffer -> getType == getGeoOp
class DisplayBuffer -> setSourceRenderable == setGeo
class DisplayBuffer -> getSourceRenderable == getGeo
class DisplayBuffer -> mSourceRenderable == mGeo
class DisplayBuffer -> setResetsEveryUpdate == setAutoFlush
class DisplayBuffer -> getResetsEveryUpdate == isAutoFlush
class DisplayBuffer -> mType == mGeoOp
class DisplayBuffer -> mResetsEveryUpdate == mAutoFlush
class DisplayBuffer -> mResetRequested == mRequestFlush
class DisplayBuffer -> reset == reflush
class DisplayBuffer -> update == flush
//--------------------------------------------------------------------------
GPV_GLOBAL 分离出 GPT_View_Param GPT_Colour_Param GPT_Texture_Param GPT_Fog_Param GPT_Fps_Param GPT_Other_Param
    改名 GPT_Render
GPV_PER_OBJECT == GPT_Space_Param
GPV_LIGHTS == GPT_Light_Param
GPV_PASS_ITERATION_NUMBER == GPT_ShaderCh_Param
GPV_ALL == GPT_Unknow
//--------------------------------------------------------------------------
class LodSchemeManager -> addStrategy == add
class LodSchemeManager -> removeStrategy == remove
class LodSchemeManager -> getStrategy == get
class LodSchemeManager -> removeAllStrategies == removeAll
class LodSchemeManager -> getDefaultStrategy == getDefault
class LodSchemeManager -> getIterator == getList
class LodSchemeManager -> setDefaultStrategy 移去 LodScheme 参数的
class LodSchemeManager -> setDefaultStrategy == setDefault
class LodSchemeManager -> mStrategies == mSchemeList
class LodSchemeManager -> mDefaultStrategy == mDefaultList(DefaultList 概念)
//--------------------------------------------------------------------------
class FrameObj -> FrameBuffer == FaceType
class FrameObj -> FB_FRONT == FT_Front
class FrameObj -> FB_BACK == FT_Back
class FrameObj -> FB_AUTO == FT_Unknow
class FrameObj -> copyContentsToMemory == fill 第一参数和第二参数(FT_Unknow)调换
class FrameObj -> mHwGamma == 融入到 mMark
class FrameObj -> setHardwareGammaEnabled == setHardwareSRGB
class FrameObj -> isHardwareGammaEnabled == isHardwareSRGB
class FrameObj -> getFSAAHint == getFSAAExt
class FrameObj -> getCustomAttribute == getPlatformData
class FrameObj -> mFSAAHint == mFSAAExt
class FrameObj -> getStatistics 4参数的移去
class FrameObj -> mLastSecond == mTempTime
class FrameObj -> mFrameCount == mSecFrame
class FrameObj -> FrameStats mTimer mTempTime mLastTime mSecFrame == FramesPerSecond 移到外部
class FrameObj -> mPriority == mFlushLevel
class FrameObj -> avgFPS == mAvg
class FrameObj -> lastFPS == mLast
class FrameObj -> bestFPS == mBest
class FrameObj -> worstFPS == mWorst
class FrameObj -> bestFrameTime == mBestFrame
class FrameObj -> worstFrameTime == mWorstFrame
class FrameObj -> triangleCount == mTriCount 分离出
class FrameObj -> batchCount == mBatchCount 分离出
class FrameObj -> getPlatformData 使用 RenderSysData 结构代替
class FrameObj -> getNumViewports == getViewportCount
class FrameObj -> getStatistics == getFPS
class FrameObj -> resetStatistics == resetFPS
class FrameObj -> getLastFPS == getFPS().mLast
class FrameObj -> getAverageFPS == getFPS().mAvg
class FrameObj -> getBestFPS == getFPS().mBest
class FrameObj -> getWorstFPS == getFPS().mWorst
class FrameObj -> getBestFrameTime == getFPS().mBestFrame
class FrameObj -> getWorstFrameTime == getFPS().mWorstFrame
class FrameObj -> getMetrics == 三参数移去
class FrameObj -> updateStats 融入移去
class FrameObj -> setAutoUpdated == setAutoFlush
class FrameObj -> isAutoUpdated == isAutoFlush
class FrameObj -> update == flush
class FrameObj -> swapBuffers == swap
class FrameObj -> StatFlags SF_NONE SF_FPS SF_AVG_FPS SF_BEST_FPS
    SF_WORST_FPS SF_TRIANGLE_COUNT SF_ALL
class FrameObj -> getViewportByZOrder 无效移去
class FrameObj -> hasViewportWithZOrder 无效移去
class FrameObj -> suggestPixelFormat == getFormat
class FrameObj -> destroyViewport == Zorder 参型改 index 参型
class FrameObj -> removeAllViewports == destroyAllViewport
class FrameObj -> setDepthBufferPool == setRasterGroup
class FrameObj -> getDepthBufferPool == getRasterGroup
class FrameObj -> setPriority == setFlushLevel
class FrameObj -> getPriority == getFlushLevel
class FrameObj -> writeContentsToFile 移动到 ViewWindow 中
class FrameObj -> writeContentsToTimestampedFile 移动到 ViewWindow 中 改名 screenshots
class FrameObj -> requiresTextureFlipping == isFlipping 默认返回 false
class FrameObj -> _updateAutoUpdatedViewports 融入移去
class FrameObj -> firePreUpdate firePostUpdate fireViewportPreUpdate
    fireViewportPostUpdate fireViewportAdded fireViewportRemoved 融入移去
class FrameObj -> Impl 类 _getImpl 无效移去
class FrameObj -> _updateViewport _updateAutoUpdatedViewports 第二参数为实化 true
class FrameObj -> _updateViewport NIIi参数 无效移去
class FrameObj -> _updateViewport == flushImpl
class FrameObj -> _beginUpdate == preFlush
class FrameObj -> _endUpdate == endFlush
class FrameObj -> mAutoUpdate 融入 mMark
class FrameObj -> isPrimary == isFirstWindow
class FrameObj -> 加入 getID
class FrameObj -> getDepthBuffer == getExtBuffer
class FrameObj -> mDepthBuffer == mExtBuffer
class FrameObj -> mDepthBufferPoolId == mRasterGroup
class FrameObj -> mViewportList == mViews
class FrameObj -> _notifyCameraRemoved == _notifyDestroy
class FrameObj -> _detachDepthBuffer == 使用 detachExt 代替(查看 ExtFrameBuffer 析构 / setGroup)
class FrameObj -> removeAllListeners == removeAllListener
class FrameObj -> addViewport == 使用 createViewport 第二参数 放最后
class FrameObj -> mStereoEnabled isStereoEnabled == mStereo isStereo
//--------------------------------------------------------------------------
class TextureDefine -> width == mWidth
class TextureDefine -> height == mHeight
class TextureDefine -> fsaa == mFSAA
class TextureDefine -> format == mFormat
class TextureDefine -> depthBufferPoolId == mGroup
//--------------------------------------------------------------------------
class ViewWindow -> setFullscreen == setFullMode
class ViewWindow -> reposition == pos
class ViewWindow -> create == setup
class ViewWindow -> windowMovedOrResized == notify
class ViewWindow -> setVSyncEnabled == setVSync
class ViewWindow -> isVSyncEnabled == isVSync
class ViewWindow -> setVSyncInterval == setSwapInterval
class ViewWindow -> getVSyncInterval == getSwapInterval
class ViewWindow -> getMetrics == getArea 最后两个参数提前到第一第二
class ViewWindow -> setDeactivateOnFocusChange == setAutoDeactive
class ViewWindow -> isDeactivatedOnFocusChange == isAutoDeactive
class ViewWindow -> isFullScreen == isFullMode
class ViewWindow -> writeContentsToFile == screenshots
class ViewWindow -> mIsPrimary == mFirstDev
class ViewWindow -> mIsFullScreen == mFullMode
class ViewWindow -> _setPrimary == setFirstWindow(true
class ViewWindow -> mAutoDeactivatedOnFocusChange == mAutoDeactive
class ViewWindow -> isVisible == isForce 未完成
class ViewWindow -> setVisible == setForce 未完成
//--------------------------------------------------------------------------
class TextureFrame -> mZOffset == mZOft
//--------------------------------------------------------------------------
class ExtFrameBuffer -> PoolId POOL_NO_DEPTH == GroupUnknow
class ExtFrameBuffer -> PoolId POOL_MANUAL_USAGE == GroupUnknow
class ExtFrameBuffer -> PoolId POOL_DEFAULT == GroupInner
class ExtFrameBuffer -> PoolId POOL_NON_SHAREABLE == GroupSeparate
class ExtFrameBuffer -> ExtFrameBuffer( 第二参数放到第四参数
class ExtFrameBuffer -> _setPoolId == setGroup
class ExtFrameBuffer -> getPoolId == getGroup
class ExtFrameBuffer -> RenderTargetSet == UserList
class ExtFrameBuffer -> mAttachedRenderTargets == mUserList
class ExtFrameBuffer -> isCompatible == isSuitable
class ExtFrameBuffer -> _notifyRenderTargetAttached == attach
class ExtFrameBuffer -> _notifyRenderTargetDetached == detach
class ExtFrameBuffer -> detachFromAllRenderTargets 融入移去
//--------------------------------------------------------------------------
class MultiTextureFrame -> bindSurface == attach
class MultiTextureFrame -> unbindSurface == detach
class MultiTextureFrame -> getBoundSurface == getAttach
class MultiTextureFrame -> bindSurfaceImpl == attachImpl
class MultiTextureFrame -> unbindSurfaceImpl == detachImpl
class MultiTextureFrame -> getBoundSurfaceList == getAttachList
class MultiTextureFrame -> mBoundSurfaces == mAttachList
//--------------------------------------------------------------------------
class SpreadParticle -> addBaseParameters == initCmd(PropertyCmdSet * dest)
class SpreadParticle -> mPosition 使用 Particle 里的
class SpreadParticle -> mDirection 使用 Particle 里的
class SpreadParticle -> setParticleVelocity == setSpreadSpeed 移去 2参数的
class SpreadParticle -> setMinParticleVelocity == setMinSpreadSpeed
class SpreadParticle -> setMaxParticleVelocity == setMaxSpreadSpeed
class SpreadParticle -> getParticleVelocity == getSpreadSpeed
class SpreadParticle -> getMinParticleVelocity == getMinSpreadSpeed
class SpreadParticle -> getMaxParticleVelocity == getMaxSpreadSpeed
class SpreadParticle -> setEmissionRate == setSpreadRate
class SpreadParticle -> getEmissionRate == getSpreadRate
class SpreadParticle -> setTimeToLive 使用 setMinTTL setMaxTTL 代替
class SpreadParticle -> setMinTimeToLive == setMinTTL
class SpreadParticle -> setMaxTimeToLive == setMaxTTL
class SpreadParticle -> getTimeToLive 使用 getMinTTL 代替
class SpreadParticle -> getMinTimeToLive == getMinTTL
class SpreadParticle -> getMaxTimeToLive == getMaxTTL
class SpreadParticle -> setEmitted isEmitted mEmitted == 移动到 Particle setAuto isAuto mAuto
class SpreadParticle -> setColour 移去 2参数的
class SpreadParticle -> setColourRangeStart == setMinColour
class SpreadParticle -> getColourRangeStart == getMinColour
class SpreadParticle -> setColourRangeEnd == setMaxColour
class SpreadParticle -> getColourRangeEnd == getMaxColour
class SpreadParticle -> setEmittedEmitter == setSpreadName
class SpreadParticle -> getEmittedEmitter == getSpreadName
clsss SpreadParticle -> setEnabled == setEnable
clsss SpreadParticle -> getEnabled == getEnable
class SpreadParticle -> setStartTime == setEnable
class SpreadParticle -> getStartTime 无用移去
class SpreadParticle -> setDuration 移去2参数的
class SpreadParticle -> setRepeatDelay 移去2参数的
class SpreadParticle -> initDurationRepeat == updateCostTime
class SpreadParticle -> _getEmissionCount == getSpreadImpl
class SpreadParticle -> _initParticle == initImpl
class SpreadParticle -> genConstantEmissionCount 融入到 getSpreadImpl 中 仅基类
class SpreadParticle -> genEmissionDirection == initDirectionImpl
class SpreadParticle -> genEmissionColour == initColourImpl
class SpreadParticle -> genEmissionVelocity == initSpeedImpl
class SpreadParticle -> genEmissionTTL == initTTLImpl
class SpreadParticle -> mParent == mCtrl
class SpreadParticle -> mEmittedEmitter == mSpreadName
class SpreadParticle -> mEmissionRate == mSpreadRate
class SpreadParticle -> mDurationMin == mMinDur
class SpreadParticle -> mDurationMax == mMaxDur
class SpreadParticle -> mRepeatDelayMin == mMinRepeatDelay
class SpreadParticle -> mRepeatDelayMax == mMaxRepeatDelay
class SpreadParticle -> mColourRangeStart == mMinColour
class SpreadParticle -> mColourRangeEnd === mMaxColour
class SpreadParticle -> mStartTime == mEnableTime
class SpreadParticle -> mDurationRemain == mRemainDur
class SpreadParticle -> mRepeatDelayRemain == mRemainDelay
class SpreadParticle -> mRemainder 无用移去
class SpreadParticle -> mCtrl 使用 Particle 里的
//--------------------------------------------------------------------------
class FusionManager -> isInputPreviousTarget == isPre
class FusionManager -> isInputToOutputTarget ==
class FusionManager -> addCompositor == attach
class FusionManager -> removeCompositor == detach
class FusionManager -> getCompositorChain == getInstance
class FusionManager -> hasCompositorChain == isInstanceExist
class FusionManager -> setCompositorEnabled == setEnable
class FusionManager -> _getTexturedRectangle2D == getArea
class FusionManager -> freeChains 融入移去
class FusionManager -> registerCompositorLogic == addListener
class FusionManager -> unregisterCompositorLogic == removeListener
class FusionManager -> getCompositorLogic == getListener
class FusionManager -> removeCompositorChain == removeInstance
class FusionManager -> registerCustomCompositionPass == addRender
class FusionManager -> removeFusionRender == removeRender
class FusionManager -> getCustomCompositionPass == getRender
class FusionManager -> mChains == mFusionResultList
class FusionManager -> _reconstructAllCompositorResources == rebuildInstance
class FusionManager -> mInstances 无用移去
class FusionManager -> mRectangle == mRect
class FusionManager -> mCompositorLogics == mListenerList
class FusionManager -> mCustomCompositionPasses == mRenderList
class FusionManager -> getPooledTexture == touchFusionTexture
class FusionManager -> freePooledTextures == freeFusionTexture 参数专义
class FusionManager -> mTexturesByDef == mTempTextureList
class FusionManager -> mChainTexturesByDef == mFusionTextureList
//--------------------------------------------------------------------------
class TextureFactory -> addBaseParams == initCmd(PropertyCmdSet * dest)
class TextureFactory -> getDictionaryStringName mDictionaryName 无用移去
class TextureFactory -> getPluginStringName mPluginName == getName mName
class TextureFactory -> createDefinedTexture == createTexture
class TextureFactory -> destroyAdvancedTexture == destroyTexture
class TextureFactory -> init 无用移去
class TextureFactory -> shutDown 无用移去
class TextureFactory -> TexturePlayMode
class TextureFactory -> setTextureTecPassStateLevel == getShaderFusion getShaderCh getRenderLevel
class TextureFactory -> getTextureTecPassStateLevel == setShaderFusion setShaderCh setRenderLevel
class TextureFactory -> mTechniqueLevel mPassLevel mStateLevel == mShaderFusion mShaderCh mRenderLevel
class TextureFactory -> mUpdateEveryFrame == mPreFrame
class TextureFactory -> TexturePlayMode TextureEffectPlay_ASAP TextureEffectPlay_Looping  TextureEffectPause == 
	PlayState PS_Play PS_Pause PS_Stop
//--------------------------------------------------------------------------
class PanelOverlayGeo -> addBaseParameters == initCmd(PropertyCmdSet * dest)
class PanelOverlayGeo -> setTiling == setTexCoordRepeat
class PanelOverlayGeo -> getTileX == getTexRepeatX
class PanelOverlayGeo -> getTileY == getTexRepeatY
class PanelOverlayGeo -> setTransparent == setSelfView 反义
class PanelOverlayGeo -> isTransparent == isSelfView 反义
class PanelOverlayGeo -> mTransparent == mSelfView 反义
class PanelOverlayGeo -> mNumTexCoordsInBuffer == mTexCoorCount
//--------------------------------------------------------------------------
class FrameOverlayGeo -> addBaseParameters == initCmd(PropertyCmdSet * dest)
class FrameOverlayGeo -> getCellUVString 融入移去
class FrameOverlayGeo -> String() 8个 改变
class FrameOverlayGeo -> BorderCellIndex == CellType
class FrameOverlayGeo -> setBorderMaterialName 使用 setMaterial 代替
class FrameOverlayGeo -> getBorderMaterialName 使用 getMaterial 代替
class FrameOverlayGeo -> mBorderMaterial 使用 mMaterial 代替
class FrameOverlayGeo -> mBorderRenderable = mFrameGeo
//--------------------------------------------------------------------------
class TextOverlayGeo -> addBaseParameters == initCmd(PropertyCmdSet * dest)
class TextOverlayGeo -> mTransparent 无用移去
class TextOverlayGeo -> checkMemoryAllocation == updateText
class TextOverlayGeo -> setAlignment == setAlignMode
class TextOverlayGeo -> getAlignment == getAlignMode
class TextOverlayGeo -> setColourBottom getColourBottom setColourTop getColourTop 移去概念
class TextOverlayGeo -> mColourBottom mColourTop == mColour
class TextOverlayGeo -> setFontName == setFontID
class TextOverlayGeo -> getFontName == getFontID
class TextOverlayGeo -> setCharHeight == setGlyphHeight
class TextOverlayGeo -> getCharHeight == getGlyphHeight
class TextOverlayGeo -> mColoursChanged 融入移去
class TextOverlayGeo -> mViewportAspectCoef 融入移去
//--------------------------------------------------------------------------
class LodScheme -> getBaseValue == getOrigin
class LodScheme -> transformUserValue == getDest
class LodScheme -> transformBias == getFactor
class LodScheme -> isSortedAscending == isAscend
class LodScheme -> isSortedDescending == isDescend
class LodScheme -> isSorted 移去无效果
class LodScheme -> assertSorted 移去无效果
class LodScheme -> getName mName 改为 SchemeID 概念
//--------------------------------------------------------------------------
class MeshLodUsage -> userValue == mSrc
class MeshLodUsage -> value == mDest
class MeshLodUsage -> manualName == mRid
class MeshLodUsage -> manualGroup == mGid
class MeshLodUsage -> manualMesh == mMesh
class MeshLodUsage -> edgeData == mEdget
//--------------------------------------------------------------------------
class KeyFrame -> mParentTrack == mTrack
class KeyFrame -> _clone == clone
//--------------------------------------------------------------------------
ScriptLexer 和 ScriptParser 融混成 ScriptLexerParser
ScriptLexerParser -> setToken == add
ScriptLexerParser -> getToken 无用移去
ScriptLexerParser -> tokenize == token
ScriptLexerParser ->
ScriptLexerParser ->
//--------------------------------------------------------------------------
ScriptNode -> context == mData
//--------------------------------------------------------------------------
ConcreteNodeType == TokenNodeType
ConcreteNode == TokenNode
//--------------------------------------------------------------------------
class RenderBound 融入到 Camera 中
//--------------------------------------------------------------------------
class RenderBound -> aabb == mAABB mAABB[0]
class RenderBound -> reset == resetBound
class RenderBound -> merge == expandBound
class RenderBound -> mergeNonRenderedButInFrustum == expandCastBound expandBound(ST_CAST)
class RenderBound -> receiverAabb == mAABBReceive mAABB[2]
class RenderBound -> minDistance == mMin mMin[0]
class RenderBound -> maxDistance == mMax mMax[0]
class RenderBound -> minDistanceInFrustum == mMinCast mMin[1]
class RenderBound -> maxDistanceInFrustum == mMaxCast mMax[1]
//--------------------------------------------------------------------------
RENDER_QUEUE_BACKGROUND == RQG_Bg
RENDER_QUEUE_SKIES_EARLY == RQG_Sky
RENDER_QUEUE_1 == RQG_FarBegin
RENDER_QUEUE_2 == RQG_FarEnd
加入 RQG_Ext_3
加入 RQG_Ext_4
加入 RQG_Ext_5
RENDER_QUEUE_WORLD_GEOMETRY_1 == RQG_Geo_1
RENDER_QUEUE_3 == RQG_UserBegin
RENDER_QUEUE_4 == RQG_Ext_7 融入移去
RENDER_QUEUE_MAIN == RQG_User
RENDER_QUEUE_6 == RQG_Ext_11 融入移去
RENDER_QUEUE_7 == RQG_UserEnd
RENDER_QUEUE_WORLD_GEOMETRY_2 == RQG_Geo_2
RENDER_QUEUE_8 == RQG_NearBegin
RENDER_QUEUE_9 == RQG_NearEnd
RENDER_QUEUE_SKIES_LATE == RQG_Sky_Last 使用 RQG_NearEnd
RENDER_QUEUE_OVERLAY == RQG_Overlay
RENDER_QUEUE_MAX == RQG_Count
//--------------------------------------------------------------------------
class VertexOffsetKeyFrame -> addPoseReference == add
class VertexOffsetKeyFrame -> removePoseReference == remove
class VertexOffsetKeyFrame -> updatePoseReference == update == set
class VertexOffsetKeyFrame -> removeAllPoseReferences == removeAll
class VertexOffsetKeyFrame -> setAssociatedVertexData == setTarget
class VertexOffsetKeyFrame -> getAssociatedVertexData == getTarget
class VertexOffsetKeyFrame -> PoseRef == VertexOffset
class VertexOffsetKeyFrame -> VertexOffset::poseIndex == mTargetIndex
class VertexOffsetKeyFrame -> VertexOffset::influence == mWeight
class VertexOffsetKeyFrame -> getPoseReferences == getValue
class VertexOffsetKeyFrame -> _applyBaseKeyFrame 融入到 VertexOffsetKeyFrameTrack
class VertexOffsetKeyFrame -> PoseRefList == Offsets
class VertexOffsetKeyFrame -> mPoseRefs == mOffsets
//--------------------------------------------------------------------------
class VertexUnitKeyFrame -> setVertexBuffer == setValue
class VertexUnitKeyFrame -> getVertexBuffer == setValue
//--------------------------------------------------------------------------
class UnitKeyFrameTrack -> setAssociatedAnimable == setTarget
class UnitKeyFrameTrack -> getAssociatedAnimable == getTarget
class UnitKeyFrameTrack -> applyToAnimable == apply
class UnitKeyFrameTrack -> createNumericKeyFrame 融入移去
class UnitKeyFrameTrack -> getNumericKeyFrame 融入移去
class UnitKeyFrameTrack -> mTargetAnim == mTarget
//--------------------------------------------------------------------------
class NodeKeyFrameTrack -> setAssociatedNode == setTarget
class NodeKeyFrameTrack -> getAssociatedNode == getTarget
class NodeKeyFrameTrack -> applyToNode == apply
class NodeKeyFrameTrack -> softwareVertexBlend == fusion
class NodeKeyFrameTrack -> prepareMatricesForVertexBlend 融入到 GeometrySpace
class NodeKeyFrameTrack -> createNodeKeyFrame 融入移去
class NodeKeyFrameTrack -> getNodeKeyFrame 融入移去
class NodeKeyFrameTrack -> setUseShortestRotationPath == setShortPath
class NodeKeyFrameTrack -> getUseShortestRotationPath == getShortPath
class NodeKeyFrameTrack -> buildInterpolationSplines == buildSpline
class NodeKeyFrameTrack -> mTargetNode == mTarget
class NodeKeyFrameTrack -> mUseShortestPath == mShortPath
class NodeKeyFrameTrack -> mSplineBuildNeeded == mSplineValid 转义
//--------------------------------------------------------------------------
class VertexUnitKeyFrameTrack -> createVertexMorphKeyFrame == create
class VertexUnitKeyFrameTrack -> getVertexMorphKeyFrame == get
class VertexUnitKeyFrameTrack -> applyToVertexData == apply
class VertexUnitKeyFrameTrack -> setTargetMode == setMode
class VertexUnitKeyFrameTrack -> getTargetMode == getMode
class VertexUnitKeyFrameTrack -> getVertexAnimationIncludesNormals == isNromalsFusion
class VertexUnitKeyFrameTrack -> softwareVertexMorph == fusion
class VertexUnitKeyFrameTrack -> setAssociatedVertexData == setTarget
class VertexUnitKeyFrameTrack -> getAssociatedVertexData == getTarget
class VertexUnitKeyFrameTrack -> mTargetVertexData == mTarget
class VertexUnitKeyFrameTrack -> mTargetMode == mMode
//--------------------------------------------------------------------------
class VertexOffsetKeyFrameTrack -> createVertexPoseKeyFrame == create
class VertexOffsetKeyFrameTrack -> getVertexPoseKeyFrame == get
class VertexOffsetKeyFrameTrack -> applyToVertexData == apply
class VertexOffsetKeyFrameTrack -> setTargetMode == setMode
class VertexOffsetKeyFrameTrack -> getTargetMode == getMode
class VertexOffsetKeyFrameTrack -> getVertexAnimationIncludesNormals == isNromalsFusion
class VertexOffsetKeyFrameTrack -> softwareVertexPoseBlend == fusion
class VertexOffsetKeyFrameTrack -> initialisePoseVertexData == memcpy
class VertexOffsetKeyFrameTrack -> applyPoseToVertexData 融入移去
class VertexOffsetKeyFrameTrack -> finalisePoseNormals 融入移去
class VertexOffsetKeyFrameTrack -> mTargetVertexData == mTarget
class VertexOffsetKeyFrameTrack -> mTargetMode == mMode
//--------------------------------------------------------------------------
class LinearSpline -> addPoint == add
class LinearSpline -> getPoint == get
class LinearSpline -> getNumPoints == getCount
class LinearSpline -> updatePoint == set
class LinearSpline -> recalcTangents == rebuild
class LinearSpline -> setAutoCalculate mAutoCalc == 移去概念
//--------------------------------------------------------------------------
class RotationSpline -> addPoint == add
class RotationSpline -> getPoint == get
class RotationSpline -> getNumPoints == getCount
class RotationSpline -> updatePoint == set
class RotationSpline -> recalcTangents == rebuild
class RotationSpline -> setAutoCalculate mAutoCalc == 移去概念
//--------------------------------------------------------------------------
class FrameFusion -> getChain == getInstance
class FrameFusion -> getCompositor == getFusion
class FrameFusion -> setEnabled == setEnable
class FrameFusion -> getEnabled == isEnable
class FrameFusion -> getAlive == isAlive
class FrameFusion -> getMRTTexLocalName 融入移去
class FrameFusion -> _fireNotifyMaterialSetup 融入移去
class FrameFusion -> _fireNotifyMaterialRender 融入移去
class FrameFusion -> _fireNotifyResourcesCreated notifyResourcesCreated 移去
class FrameFusion -> mChain == mResult
class FrameFusion -> mTechnique == mFusionShader
class FrameFusion -> mCompositor == mFusion
class FrameFusion -> Listener notifyMaterialSetup == onFusionSetup
class FrameFusion -> Listener notifyMaterialRender == onFusionRender
class FrameFusion -> queueRenderSystemOp 融入移去
class FrameFusion -> getRenderTarget 融入移去 使用 getTargetForTex == getFrameObj
class FrameFusion -> notifyResized 融入移去
class FrameFusion -> getTextureInstanceName 融入移去 使用 getSourceForTex == getTextureID
class FrameFusion -> getScheme == getSchemeID
class FrameFusion -> getTextureInstance == getTexture
class FrameFusion -> createLocalMaterial 融入移去
class FrameFusion -> notifyCameraChanged == onCameraChange
class FrameFusion -> getShaderFusion == getShader
class FrameFusion -> setTechnique == setShader
class FrameFusion -> mLocalTextures == mTextureList
class FrameFusion -> mLocalMRTs == mMultiFrameObjList
class FrameFusion -> mPreviousInstance == mPreFusion 使用FrameResultRestore FusionChain代替
class FrameFusion -> mReserveTextures == mRefTextureList
class FrameFusion -> deriveTextureRenderTargetOptions == deriveOptions
class FrameFusion -> TargetOperation CompiledState _compileTargetOperations _compileOutputOperation
	collectPasses 移到 FusionInstance
class FrameFusion -> createResources == createTexture
class FrameFusion -> freeResources == destroyTexture
class FusionInstance -> TargetOperation -> FrameObjOperation
class FusionInstance -> TargetOperation -> target == mFrameObj
class FusionInstance -> TargetOperation -> currentQueueGroupID == mQueueGroup
class FusionInstance -> TargetOperation -> renderSystemOperations == RenderOpList
class FusionInstance -> TargetOperation -> visibilityMask == mVisibleMask
class FusionInstance -> TargetOperation -> lodBias == mLodBias
class FusionInstance -> TargetOperation -> renderQueues == mRenderQueueBit
class FusionInstance -> TargetOperation -> materialScheme == mMaterialScheme
class FusionInstance -> TargetOperation -> onlyInitial == mOnce
class FusionInstance -> TargetOperation -> hasBeenRendered == mBeenRender
class FusionInstance -> TargetOperation -> findVisibleObjects == mAutoVisible
class FusionInstance -> TargetOperation -> shadowsEnabled == mShadowEnable
//--------------------------------------------------------------------------
class RenderFrameEvent -> timeSinceLastEvent == mLastEvent 无用移去
class RenderFrameEvent -> timeSinceLastFrame == mCurrent
//--------------------------------------------------------------------------
class Mesh -> mLodStrategy == mLodScheme
class Mesh -> mMeshLodUsageList == mLods
class Mesh -> getSharedVertexDataAnimationIncludesNormals == isNromalsFusion
class Mesh -> MeshLodUsageList == MeshLodList 移到 MeshLodScheme
class Mesh -> LodValueList 移到 MeshLodScheme
class Mesh -> mLods 移动 MeshLodScheme
class Mesh -> updateManualLodLevel 概念移动到 MeshLodScheme 改名 set(Nindex, ResourceID)
class Mesh -> getLodIndex 概念移动到 MeshLodScheme 改名 get(Nindex)
class Mesh -> mEdgeListsBuilt == mValidLod 移动到 MeshLodScheme
class Mesh -> freeEdgeList 概念移动到 MeshLodScheme 改名 destroy
class Mesh -> buildEdgeList 概念移动到 MeshLodScheme 改名 build
class Mesh -> _determineAnimationTypes == 融入移去
class Mesh -> _getAnimationTypesDirty == 融入移去
class Mesh -> isEdgeListBuilt 概念移动到 MeshLodScheme == isValid
class Mesh -> _setLodUsage 概念移动到 MeshLodScheme 中 的各种 set 概念
class Mesh -> isLodManual 概念移动到 MeshLodScheme 中 isRelation 反义概念
class Mesh -> mIsLodManual 概念移动到 MeshLodScheme 中 isRelation 反义概念
class Mesh -> getLodLevel 概念移动到 Nui32 get(Nindex index)
class Mesh -> readTextureLayer 无效移去
class Mesh -> readSubMeshOperation 移去第一参数
class Mesh -> readSubMeshTextureAlias 移去第一参数
class Mesh -> readSubMeshBoneAssignment 移去第一参数
class Mesh -> flipFromLittleEndian 融入移去
class Mesh -> flipToLittleEndian 融入移去
class Mesh -> getLodStrategy == get(LodScheme *&)
class Mesh -> setLodStrategy == set(LodScheme *)
class Mesh -> sharedVertexData == mVertex
class Mesh -> mSharedVertexDataAnimationType == mAnimationMode
class Mesh -> getSharedVertexDataAnimationType == getAnimationType
class Mesh -> mSharedVertexDataAnimationIncludesNormals == mNromalsFusion
class Mesh -> mAnimationsList == mAnimations 概念转换到 AnimationObj
class Mesh -> mFreshFromDisk == mSrc
class Mesh -> getNumLodLevels == getLodCount
class Mesh -> mNumLods == 使用 mLodScheme->getCount()
class Mesh -> softwareVertexMorph 移动到 VertexUnitKeyFrameTrack
class Mesh -> softwareVertexPoseBlend 移动到 VertexOffsetKeyFrameTrack
class Mesh -> prepareMatricesForVertexBlend 移动到 NodeKeyFrameTrack
class Mesh -> softwareVertexBlend 移动到 NodeKeyFrameTrack
class Mesh -> getAnimationType mAnimationMode mNromalsFusion mAnimationTypesDirty
    (不再出现在动画资源变化上,而是出现在实例动画状态上) mPosesIncludeNormals isNromalsFusion
        移动到 GeometrySpace
class Mesh -> sharedBlendIndexToBoneIndexMap == mBoneIndex
class Mesh -> _initAnimationState == _init
class Mesh -> _refreshAnimationState == _update
class Mesh -> _getAnimationImpl 融入到 getAnimation 中
class Mesh -> getNumSubMeshes == getSubCount
class Mesh -> getPoseList 融入移去
class Mesh -> getSubMeshIterator == getSubList
class Mesh -> getBounds == getAABB
class Mesh -> getBoundingSphereRadius == getCenterRange
class Mesh -> createPose == createOffset
class Mesh -> getPose == getOffset
class Mesh -> removePose == removeOffset
class Mesh -> removeAllPoses == removeAllOffset
class Mesh -> getPoseCount == getOffsetCount
class Mesh -> getVertexOffset == getOffsetList
class Mesh -> createSubMesh == createSub (Name 概念移到 SubMesh 中)
class Mesh -> getSubMesh == getSub (Name 概念移到 SubMesh 中)
class Mesh -> destroySubMesh == destroySub(Name 概念移到 SubMesh 中)
class Mesh -> _getSubMeshIndex 融入移去
class Mesh -> nameSubMesh 无效移去
class Mesh -> unnameSubMesh 无效移去
class Mesh -> _setBounds == setAABB setRangeFactor
class Mesh -> _setBoundingSphereRadius == setCenterRange
class Mesh -> setSkeletonName == setSkeletonID
class Mesh -> getSkeletonName == getSkeletonID
class Mesh -> hasSkeleton == isSkeletonFusion
class Mesh -> hasVertexAnimation == isVertexFusion
class Mesh -> getBoneAssignmentIterator == getSkeletonList
class Mesh -> buildIndexMap 融入移去
claas Mesh -> _setLodInfo == 分解成 setLodCount (mLodScheme->setGenEdget)(反义)
class Mesh -> createManualLodLevel 融入移去
class Mesh -> _setSubMeshLodFaceList 融入移去(getSub)
class Mesh -> removeLodLevels == removeAllLod
class Mesh -> updateMaterialForAllSubMeshes == 融入移去
class Mesh -> mSubMeshNameMap SubMeshNameMap 无用移去
class Mesh -> getSubMeshNameMap 无用移去
class Mesh -> setVertexBufferPolicy == setVertexMode 第二参数融入
class Mesh -> setIndexBufferPolicy == setIndexMode 第二参数融入
class Mesh -> getVertexBufferUsage == getVertexMode
class Mesh -> getIndexBufferUsage == getIndexMode
class Mesh -> mVertexBufferShadowBuffer isVertexBufferShadowed 使用 mVertexBufferUsage 代替
class Mesh -> mIndexBufferShadowBuffer isIndexBufferShadowed 使用 mIndexBufferUsage 代替
class Mesh -> getVertexDataByTrackHandle 融入移去
class Mesh -> _rationaliseBoneAssignments 移到 SkeletonManager
class Mesh -> compileBoneAssignments 移到 SkeletonManager
class Mesh -> _compileBoneAssignments 融入移去 (_updateCompiledBoneAssignments 中)
class Mesh -> _updateCompiledBoneAssignments == build(M_Skeleton)
class Mesh -> mPreparedForShadowVolumes == mMark & M_ShadowVol
class Mesh -> mBoneAssignmentsOutOfDate == mMark & M_Skeleton 转义
class Mesh -> mAutoBuildEdgeLists == mMark & M_AutoLod
class Mesh -> setAutoBuildEdgeLists == setAutoLod
class Mesh -> getAutoBuildEdgeLists == getAutoLod
class Mesh -> prepareForShadowVolume == build(M_ShadowVol)
class Mesh -> isPreparedForShadowVolumes == isExist(M_ShadowVol)
class Mesh -> mPoseList == mVertexOffsetList
class Mesh -> mBoneAssignments == mSkeletonVertexList
class Mesh -> addBoneAssignment == addSkeleton
class Mesh -> clearBoneAssignments == clearSkeleton
class Mesh -> _notifySkeleton == setSkeleton
class Mesh -> mSkeletonName == mSkeletonID
class Mesh -> suggestTangentVectorBuildParams ==
    getTangentBufferIndex (第一参数放最后 改 bool coord概念 第一参数和第二参数融入)
class Mesh -> mBoneIndex == getMatrixList mMatrixs
class Mesh -> buildTangentVectors == buildTangentBuffer 最后参数提到第二参数
class Mesh -> mBoundRadius == mCenterRange
class Mesh -> mVertexBufferUsage == mVertexMode
class Mesh -> mIndexBufferUsage == mIndexMode
class Mesh -> organiseTangentsBuffer == VertexData 改名 allocTangent
//--------------------------------------------------------------------------
class SpaceObjFactory -> _notifyTypeFlags == setTypeMark
class SpaceObjFactory -> mTypeFlag == mTypeMark
class SpaceObjFactory -> requestTypeFlags 转换为 mTypeMark != 0xFFFFFFFF
//--------------------------------------------------------------------------
class PlaneSpaceObj -> msMovableType 移去
class PlaneSpaceObj -> _getDerivedPlane == getSpacePlane
class PlaneSpaceObj -> mDerivedPlane == mSpacePlane
class PlaneSpaceObj -> mLastTranslate == mSpacePos
class PlaneSpaceObj -> mLastRotate == mSpaceRot
class PlaneSpaceObj -> mNullBB 融入移去
//--------------------------------------------------------------------------
class SubMesh -> mVertexAnimationType == mAnimationMode
class SubMesh -> _getRenderOperation == getGeometry
class SubMesh -> getVertexAnimationIncludesNormals == isNromalsFusion
class SubMesh -> mVertexAnimationIncludesNormals == mNromalsFusion
class SubMesh -> getVertexAnimationType == getAnimationType
class SubMesh -> getAnimationType isNromalsFusion mAnimationMode mNromalsFusion
                移动到 GeometryCom
class SubMesh -> blendIndexToBoneIndexMap == mBoneIndex
class SubMesh -> operationType == mType
class SubMesh -> vertexData == mVertex setVertexData getVertexData
class SubMesh -> indexData == mIndex 融入到 mLodFaceList 中 作为第一层
class SubMesh -> removeLodLevels == removeAllLod
class SubMesh -> getAliasTextureIterator
class SubMesh -> addTextureAlias 无效移去
class SubMesh -> removeTextureAlias 无效移去
class SubMesh -> removeAllTextureAliases 无效移去
class SubMesh -> hasTextureAliases 无效移去
class SubMesh -> getTextureAliasCount 无效移去
class SubMesh -> _compileBoneAssignments == buildSkeleton
class SubMesh -> addBoneAssignment == addSkeleton
class SubMesh -> clearBoneAssignments == clearSkeleton
class SubMesh -> getBoneAssignments == getSkeletonList
class SubMesh -> mBoneIndex == getMatrixList mMatrixs
class SubMesh -> mMaterialName == mMaterialID
class SubMesh -> getMaterialName == getMaterial
class SubMesh -> isMatInitialised == (getMaterial() != 0)
class SubMesh -> setBuildEdgesEnabled == setAutoLod
class SubMesh -> isBuildEdgesEnabled == isAutoLod
class SubMesh -> mMatInitialised == 移去
class SubMesh -> mBuildEdgesEnabled == mAutoLod
class SubMesh -> mTextureAliases == 移去
class SubMesh -> updateMaterialUsingTextureAliases 无效移去
class SubMesh -> useSharedVertices ==
class SubMesh -> mBoneAssignments == mSkeletonVertexList
class SubMesh -> parent == mMesh getMesh
class SubMesh -> mLodFaceList == mIndexList getIndexData setIndexData
class SubMesh -> generateExtremes == buildEdge
class SubMesh -> extremityPoints == mEdgePoints getEdgePoints
class SubMesh -> mBoneAssignmentsOutOfDate == mSkeletonVexrtexValid 转义
class SubMesh -> mType == setGeometryType  getGeometryType
class SubMesh -> useSharedVertices == mSelfVertex setSelfVertex isSelfVertex 反义
//--------------------------------------------------------------------------
struct SkeletonVertex -> vertexIndex == mVertexIndex
struct SkeletonVertex -> boneIndex == mBoneIndex
struct SkeletonVertex -> weight == mWeight
//--------------------------------------------------------------------------
class SkeletonManager -> _rationaliseBoneAssignments == Opt(第一参数和第二参数对调,加入地三参数)
class SkeletonManager -> compileBoneAssignments == combine(第二参数放最后，倒二参数放最前)
//--------------------------------------------------------------------------
class Skeleton -> createBone == create
class Skeleton -> getBone == get
class Skeleton -> getNumBones == getCount
class Skeleton -> getRootBone == getRoot
class Skeleton -> getRootBoneIterator 无效移去
class Skeleton -> getBoneIterator 无效移去
class Skeleton -> setBindingPose == build
class Skeleton -> mLinkedSkeletonAnimSourceList == mExtSkeletons
class Skeleton -> mAnimationsList == mAnimations 概念转换到 AnimationObj
class Skeleton -> addLinkedSkeletonAnimationSource == addExt(Rid rid, Gid gid)
class Skeleton -> removeAllLinkedSkeletonAnimationSources == removeAllExt
class Skeleton -> _updateTransforms == _update
class Skeleton -> SkeletonAnimationBlendMode == Mode
class Skeleton -> _getBoneMatrices == getFusion
class Skeleton -> optimiseAllAnimations == optimise 移去参数
class Skeleton -> setAnimationState == _refresh
class Skeleton -> _initAnimationState == _init
class Skeleton -> _refreshAnimationState == _update
class Skeleton -> _getAnimationImpl 融为 getAnimation 2参数
class Skeleton -> ANIMBLEND_AVERAGE == M_AVG
class Skeleton -> ANIMBLEND_CUMULATIVE == M_MUL
class Skeleton -> _notifyManualBonesDirty == _notifyUpdate(Bone *)
class Skeleton -> _notifyManualBoneStateChange == _notifyManualChange(Bone *)
class Skeleton -> _buildMapBoneByHandle 无效移去
class Skeleton -> getManualBonesDirty == isValidBone 转义
class Skeleton -> mManualBonesDirty == mValidBone 转义
class Skeleton -> hasManualBones == isCustomBoneExist
class Skeleton -> getLinkedSkeletonAnimationSourceIterator == getExtList
class Skeleton -> _mergeSkeletonAnimations 融入移去
class Skeleton -> deriveRootBone == getRootBoneImpl
class Skeleton -> _dumpContents 无用移去
class Skeleton -> mBlendState == mBlendMode
//--------------------------------------------------------------------------
class SkeletonFusion -> createTagPointOnBone == attach 第二参数和第三参数换位
class SkeletonFusion -> 加入 update
class SkeletonFusion -> freeTagPoint == detach
class SkeletonFusion -> mNextTagBoneAutoHandle == mFreeTagIndex
class SkeletonFusion -> mActiveTagBones == mTagList
class SkeletonFusion -> mFreeTagBones == mFreeTagList
class SkeletonFusion -> cloneBoneAndChildren 使用 Bone::cloneTo 代替
//--------------------------------------------------------------------------
class VertexOffset -> getIncludesNormals == isNormalsValid
class VertexOffset -> addVertex == add
class VertexOffset -> removeVertex == remove
class VertexOffset -> clearVertices == clear
class VertexOffset -> _getHardwareVertexBuffer == getFusion
//--------------------------------------------------------------------------

class Plane -> normal == mNormal
class Plane -> d == mD
class Plane -> getSide 2 参数 融入移去
class Plane -> redefine == set
class Plane -> getDistance == distance
class Plane -> projectVector == project

//--------------------------------------------------------------------------
class PlaneSpace -> intersects(const Ray 使用 Ray 中的
class PlaneSpace -> planes == mPlanes
class PlaneSpace -> outside == mOuterType
//--------------------------------------------------------------------------
class Ray -> intersects 返回参数 改 第二参数引用返回
class Ray -> intersects(const PlaneSpace &移去
//--------------------------------------------------------------------------
class AABox -> EXTENT_INFINITE setInfinite isInfinite 概念 全部移去
class AABox -> EXTENT_NULL setNull isNull概念 全部移去
class AABox -> EXTENT_FINITE isFinite 概念融合
class AABox -> mExtent 移去
class AABox -> setMinimumX setMinimumY setMinimumZ
    setMaximumX setMaximumY setMaximumZ
class AABox -> setExtents 融入移去
class AABox -> getHalfSize 融入移去
class AABox -> contains(const Vector3<> & 改名 intersects
class AABox -> mCorners 概念移去
class AABox -> getAllCorners 融入移去
class AABox -> getCorner CornerEnum 概念 全部移去
class AABox -> getMinimum == getMin
class AABox -> getMaximum == getMax
class AABox -> setMinimum == setMin
class AABox -> setMaximum == setMax
class AABox -> transformAffine == affine
//--------------------------------------------------------------------------
class ExtSkeleton -> pSkeleton == mSkeleton
class ExtSkeleton -> scale == mScale
//--------------------------------------------------------------------------

/---------------------------------------------------------------------------
class RenderLevelGroup -> addSolidRenderable 融入移去
class RenderLevelGroup -> addSolidRenderableSplitByLightType 融入移去
class RenderLevelGroup -> addUnsortedTransparentRenderable 融入移去
class RenderLevelGroup -> addTransparentRenderable 融入移去
class RenderLevelGroup -> resetOrganisationModes == removeSort(RenderSortMode om)
class RenderLevelGroup -> addOrganisationMode == addSort
class RenderLevelGroup -> defaultOrganisationMode == resetSort
class RenderLevelGroup -> removePassEntry == remove
class RenderLevelGroup -> setSplitLightingType mSplitLightingType
    setSplitNoShadow mSplitNoShadow setCastersNotBeReceivers
    getSolidsDiffuseSpecular mSolidsDiffuseSpecular getSolidsDecal mSolidsDecal
    getSolidsNoShadowReceive mSolidsNoShadowReceive mSolidsDiffuseSpecular
    mSolidsDecal mSolidsNoShadowReceive mCastersNotReceivers
        == 加入 ShadowRenderLevelGroup
class RenderLevelGroup -> mSolidsBasic == mBasic
class RenderLevelGroup -> getSolidsBasic == getBasic        render(SortType type, RenderFilter * filter)
class RenderLevelGroup -> getTransparents == getAlphaSort   render(SortType type, RenderFilter * filter)
class RenderLevelGroup -> mTransparents == mAlphaSort
class RenderLevelGroup -> getTransparentsUnsorted == getAlpha render(SortType type, RenderFilter * filter)
class RenderLevelGroup -> mTransparentsUnsorted == mAlpha
//--------------------------------------------------------------------------
class RenderSort -> acceptVisitorGrouped 融入移去        到 RenderLevelGroup
class RenderSort -> acceptVisitorDescending 融入移去	 到 RenderLevelGroup
class RenderSort -> acceptVisitorAscending 融入移去		 到 RenderLevelGroup
class RenderSort -> PassGroupLess == 外移到 ShaderCh 改名 IndexLess 到 RenderLevelGroup
class RenderSort -> removePassGroup == remove			 到 RenderLevelGroup
class RenderSort -> resetOrganisationModes == removeSort(RenderSortMode om) 到 RenderLevelGroup
class RenderSort -> addOrganisationMode == addSort       到 RenderLevelGroup
class RenderSort -> mOrganisationMode == mSortMark		 到 RenderLevelGroup
class RenderSort -> acceptVisitor == render				 到 RenderLevelGroup
class RenderSort -> mSortedDescending == mRenderList	 到 RenderLevelGroup
class RenderSort -> mGrouped == mRenderChList   		 到 RenderLevelGroup
class RenderSort -> msRadixSorter1 改内部变量 _rlgRadixSort1 到 RenderLevelGroup
class RenderSort -> msRadixSorter2 改内部变量 __renderRadixSort2 到 RenderLevelGroup
//--------------------------------------------------------------------------
class GeometrySpace -> initialisePoseVertexData 移动到 VertexOffsetKeyFrameTrack
class GeometrySpace -> finalisePoseNormals 移动到 VertexOffsetKeyFrameTrack
class GeometrySpace -> getNumSubEntities == getUnitCount
class GeometrySpace -> getSubEntity == getCom 2个函数(const String & 移去)
class GeometrySpace -> getChildObjectsBoundingBox == getComAABB
class GeometrySpace -> _getSkelAnimTempBufferInfo 无效移去
class GeometrySpace -> _getVertexAnimTempBufferInfo 无效移去
class GeometrySpace -> _getSoftwareVertexAnimVertexData 无效移去
class GeometrySpace -> _getHardwareVertexAnimVertexData 无效移去
class GeometrySpace -> _getSkelAnimVertexData 无效移去
class GeometrySpace -> getManualLodLevel == getLOD
class GeometrySpace -> getNumManualLodLevels == getLODCount
class GeometrySpace -> getCurrentLodIndex == getEvnLOD
class GeometrySpace -> applyVertexAnimation 第二参数 stencilShadows 改 softwareAnimation 概念
    == updateVertImpl
class GeometrySpace -> extractTempBufferInfo 融入移去
class GeometrySpace -> bindMissingHardwarePoseBuffers 融入移去
class GeometrySpace -> mSoftwareVertexAnimVertexData == mSWAniData
class GeometrySpace -> mHardwareVertexAnimVertexData == mHWAniData
class GeometrySpace -> mSkelAnimVertexData == mSkelAniData
class GeometrySpace -> mSWAniData 1 mHWAniData 2 mSkelAniData 3 -> mAniData (**)
class GeometrySpace -> mTempVertexAnimInfo mTempSkelAnimInfo -> mAniPrc (**)
class GeometrySpace -> mNumBoneMatrices 无效移去
class GeometrySpace -> _getNumBoneMatrices 无效移去
class GeometrySpace -> attachObjectToBone == attach
class GeometrySpace -> detachObjectFromBone == detach 2函数
class GeometrySpace -> detachAllObjectsFromBone == detachAll
class GeometrySpace -> setDisplaySkeleton == setBoneView
class GeometrySpace -> getDisplaySkeleton == getBoneView
class GeometrySpace -> setSkipAnimationStateUpdate == setAutoSkeleton 反义
class GeometrySpace -> getSkipAnimationStateUpdate == isAutoSkeleton 反义
class GeometrySpace -> mSkipAnimStateUpdates == mAutoSkeleton 反义
class GeometrySpace -> attachObjectImpl == attachImpl
class GeometrySpace -> detachObjectImpl == detachImpl
class GeometrySpace -> _getBoneMatrices 无效移去
class GeometrySpace -> mFrameAnimationLastUpdated == mAnimationFrame
class GeometrySpace -> mFrameBonesLastUpdated == mSkeletonFrame
class GeometrySpace -> mSkeletonInstance == mSkeleton
class GeometrySpace -> SubEntityList == Coms
class GeometrySpace -> mSubEntityList == mComs
class GeometrySpace -> ChildObjectList == Childs
class GeometrySpace -> mChildObjectList == mChilds
class GeometrySpace -> initHardwareAnimationElements == allocHWAnimate 移动到 VertexData
class GeometrySpace -> mBoneMatrices 概念移到 SkeletonFusion 中 == mBoneSpace
class GeometrySpace -> mBoneWorldMatrices == mBoneSpace
class GeometrySpace -> isHardwareAnimationEnabled == isHWAnimation
class GeometrySpace -> getSoftwareAnimationRequests 无效移去
class GeometrySpace -> getSoftwareAnimationNormalsRequests 无效移去
class GeometrySpace -> getSkeletonInstanceSharingSet 无效移去
class GeometrySpace -> setAlwaysUpdateMainSkeleton == setLODAutoSkeleton
class GeometrySpace -> getAlwaysUpdateMainSkeleton == isLODAutoSkeleton
class GeometrySpace -> mAlwaysUpdateMainSkeleton == mLODAutoSkeleton
class GeometrySpace -> setAutoReduce 无用移去
class GeometrySpace ->
class GeometrySpace -> addSoftwareAnimationRequest removeSoftwareAnimationRequest
    mSoftwareAnimationRequests mSoftwareAnimationNormalsRequests 无用移去
class GeometrySpace ->
class GeometrySpace -> shareSkeletonInstanceWith == linkSkeleton
class GeometrySpace -> stopSharingSkeletonInstance == unlinkSkeleton
class GeometrySpace -> updateAnimation == updateAniImpl
class GeometrySpace -> refreshAvailableAnimationState == updateAnimation
class GeometrySpace -> sharesSkeletonInstance 无效移去
class GeometrySpace -> hasVertexAnimation 无效移去
class GeometrySpace -> cacheBoneMatrices == updateBoneSpaceImpl
class GeometrySpace -> _isAnimated == isAnimationValid
class GeometrySpace -> _isSkeletonAnimated == isSkeletonValid
class GeometrySpace -> hasSkeleton 融入移去
class GeometrySpace -> mPosesIncludeNormals  融入概念
class GeometrySpace -> getAnimationType == checkAnimationNormal
class GeometrySpace -> mSharedSkeletonEntities == mLinkList
class GeometrySpace -> mLodEntityList == mLods 改包含 原体概念 0
class GeometrySpace -> getVertexDataForBinding == getRenderVertex
class GeometrySpace -> mHardwarePoseCount == mVertexFusionCount
class GeometrySpace -> mInitialised == mInit
class GeometrySpace -> mDisplaySkeleton == mBoneView
class GeometrySpace -> mVertexAnimationAppliedThisFrame == mAnimationEnable
class GeometrySpace -> getAttachedObjectIterator == getAttachList
class GeometrySpace -> getAllAnimationStates == getAnimationCtrl
class GeometrySpace -> _deinitialise == _destroy
class GeometrySpace -> isInitialised 无用移去
class GeometrySpace -> _getMeshLodFactorTransformed 融入移去
class GeometrySpace -> detachAllObjectsImpl == detachAllImpl
class GeometrySpace -> _markBuffersUsedForAnimation == setAnimation(true
class GeometrySpace -> markBuffersUnusedForAnimation == setAnimation(false
class GeometrySpace -> _getBuffersMarkedForAnimation == isAnimationEnable
class GeometrySpace -> chooseVertexDataForBinding VertexDataBindChoice 融入移去
class GeometrySpace -> cloneVertexDataRemoveBlendInfo == cloneUnit
class GeometrySpace -> prepareTempBlendBuffers == setupAnimationBuffer
class GeometrySpace -> restoreBuffersForUnusedAnimation == prepareAnimationBlend
class GeometrySpace -> calcVertexProcessing == checkHWAniImpl
class GeometrySpace -> reevaluateVertexProcessing == checkHWAnimation
class GeometrySpace -> tempVertexAnimBuffersBound == touchVertAniCopy
class GeometrySpace -> tempSkelAnimBuffersBound == touchSkelAniCopy
class GeometrySpace -> findBlendedVertexData == getSWFusionVertex
class GeometrySpace -> findSubEntityForVertexData 融入移去
class GeometrySpace -> buildSubEntityList == buildComImpl 第二参数融入
class GeometrySpace -> SchemeHardwareAnimMap == HWAnimationList
class GeometrySpace -> mSchemeHardwareAnim == mHWAnimationList
class GeometrySpace -> mLastParentXform == mLastSpace
class GeometrySpace -> mAnimationState == mAnimationCtrl
class GeometrySpace -> mMeshLodFactorTransformed == mMeshLodFactor
class GeometrySpace -> mMeshLodIndex == mMeshLod
class GeometrySpace -> mMinMeshLodIndex == mMinMeshLod
class GeometrySpace -> mMaxMeshLodIndex == mMaxMeshLod
class GeometrySpace -> mMaxMaterialLodIndex == mMaxMaterialLod
class GeometrySpace -> mMinMaterialLodIndex == mMinMaterialLod
class GeometrySpace -> mMaterialLodFactor == mMaterialLodBias
class GeometrySpace -> mMaterialLodFactorTransformed == mMaterialLodFactor
class GeometrySpace -> mMeshStateCount == mMeshResState
class GeometrySpace -> mShadowRenderables == mShadowVolumeList
class GeometrySpace -> mFullBoundingBox == mAABB
class GeometrySpace -> mPreparedForShadowVolumes == mVertexShadowVolume
class GeometrySpace -> mCurrentHWAnimationState == mHWAnimation
class GeometrySpace -> mAnimationTypesDirty == mAnimationCheck
class GeometrySpace -> mVertexProgramInUse == mVPEffect
//--------------------------------------------------------------------------
class GeometryCom -> _getSkelAnimTempBufferInfo 无效移去
class GeometryCom -> _getVertexAnimTempBufferInfo 无效移去
class GeometryCom -> _getSoftwareVertexAnimVertexData 无效移去
class GeometryCom -> _getHardwareVertexAnimVertexData 无效移去
class GeometryCom -> _getSkelAnimVertexData 无效移去
class GeometryCom -> mSoftwareVertexAnimVertexData == mSWAniData
class GeometryCom -> mHardwareVertexAnimVertexData == mHWAniData
class GeometryCom -> mSkelAnimVertexData == mSkelAniData
class GeometryCom -> mSWAniData 1 mHWAniData 2 mSkelAniData 3 -> mAniData (**)
class GeometryCom -> mTempVertexAnimInfo mTempSkelAnimInfo -> mAniPrc (**)
class GeometryCom -> getAnimationType == checkAnimationNormal
class GeometryCom -> mMaterialLodIndex == mLodIndex
class GeometryCom -> getMaterialName == getMaterialID
class GeometryCom -> mMaterialName == mMaterialID
class GeometryCom -> getRenderQueuePriority == getRenderLevel
class GeometryCom -> isRenderQueueGroupSet == getRenderGroup() != RQG_Unknow
class GeometryCom -> isRenderQueuePrioritySet == getRenderLevel() != 0
class GeometryCom -> getSubMesh == getMesh
class GeometryCom -> getVertexDataForBinding == getRenderVertex
class GeometryCom -> _markBuffersUnusedForAnimation == setAnimation(false
    融入移去
class GeometryCom -> _markBuffersUsedForAnimation == setAnimation(true
class GeometryCom -> _getBuffersMarkedForAnimation == getAnimation
class GeometryCom -> mVertexAnimationAppliedThisFrame == mAnimationEnable
class GeometryCom -> mParentEntity == mParent
class GeometryCom -> mHardwarePoseCount == mVertexFusionCount
class GeometryCom -> mCachedCameraDist == mViewDist
class GeometryCom -> mCachedCamera == mLastCamera
class GeometryCom -> mSubMesh == mMesh
class GeometryCom -> _invalidateCameraCache == 融入移去
class GeometryCom -> prepareTempBlendBuffers == setupAnimationBuffer
class GeometryCom -> _restoreBuffersForUnusedAnimation == prepareAnimationBlend
//--------------------------------------------------------------------------
class GBufferManager -> createVertexBuffer == create(VertexBuffer *&)
class GBufferManager -> createIndexBuffer == create(IndexBuffer *&)
class GBufferManager -> createRenderToVertexBuffer == create(RenderToVertexBuffer *&);
class GBufferManager -> createVertexDeclaration == crete(VertexDeclaration *&);
class GBufferManager -> destroyVertexDeclaration == destroy
class GBufferManager -> destroyVertexBufferBinding == destroy
class GBufferManager -> destroyVertexDeclarationImpl == destroyImpl
class GBufferManager -> destroyVertexBufferBindingImpl == destroyImpl
class GBufferManager -> registerVertexBufferSourceAndCopy 无效移去
class GBufferManager -> allocateVertexBufferCopy == allocTemp 加入 BufferType(第一参数) 概念 移去第三个参数
class GBufferManager -> releaseVertexBufferCopy == freeTemp
class GBufferManager -> touchVertexBufferCopy == refillTemp
class GBufferManager -> _freeUnusedBufferCopies == recover
class GBufferManager -> BufferLicenseType 概念加入到 TempBufferCtl 中
    mAutoDestroy(BLT_AUTOMATIC_RELEASE true | BLT_MANUAL_RELEASE false)
class GBufferManager -> TemporaryVertexBufferLicenseMap == TempBuffers
class GBufferManager -> mTempVertexBufferLicenses == mTempBuffers
class GBufferManager -> mUnderUsedFrameCount == mFrameMark
class GBufferManager -> makeBufferCopy 融入移去
class GBufferManager -> FreeTemporaryVertexBufferMap == CopyBuffers
class GBufferManager -> mFreeTempVertexBufferMap == mCopyBuffers
class GBufferManager -> _forceReleaseBufferCopies(const VertexBufferSPtr &) 移去
class GBufferManager -> _forceReleaseBufferCopies == recoverTemp
class GBufferManager -> UNDER_USED_FRAME_THRESHOLD 融入移去
class GBufferManager -> EXPIRED_DELAY_FRAME_THRESHOLD 融入移去
class GBufferManager -> destroyAllBindings 融入移去
class GBufferManager -> destroyAllDeclarations 融入移去
class GBufferManager -> mVertexDeclarations == mVertexDataList
class GBufferManager -> _notifyVertexBufferDestroyed == onDestroy
class GBufferManager -> _notifyIndexBufferDestroyed == onDestroy
class GBufferManager -> _releaseBufferCopies == recoverTemp
//--------------------------------------------------------------------------
class GBufferManager::TempBufferCtlPrc -> originalBufferPtr == mSrc
class GBufferManager::TempBufferCtlPrc -> expiredDelay == mThreshold
class GBufferManager::TempBufferCtlPrc -> buffer == mCopy
class GBufferManager::TempBufferCtlPrc -> licensee == mLic
//--------------------------------------------------------------------------
class VertexBuffer -> getVertexSize == getUnitSize
class VertexBuffer -> getNumVertices == getUnitCount
class VertexBuffer -> mNumVertices == mUnitCount
class VertexBuffer -> mVertexSize == mUnitSize
class VertexBuffer -> mMgr == mMag;
class VertexBuffer -> setInstanceData == setInstancing 融入到 VertexData
class VertexBuffer -> isInstanceData == isInstancing 融入到 VertexData
class VertexBuffer -> getInstanceDataStepRate == getInstancingDivisor 融入到 VertexData
class VertexBuffer -> setInstanceDataStepRate == setInstancingDivisor 融入到 VertexData
class VertexBuffer -> checkIfVertexInstanceDataIsSupported 融入
class VertexBuffer -> mIsInstanceData 概念融入到 mMark 的 M_INSTANCE
class VertexBuffer -> mInstanceDataStepRate == mInstancingDivisor
//--------------------------------------------------------------------------
class IndexBuffer -> IndexType 改为 NCount 类型
class IndexBuffer -> IT_16BIT IT_32BIT mIndexType getType 融入到 mIndexSize
class IndexBuffer -> mNumIndexes == mUnitCount
class IndexBuffer -> mIndexSize == mUnitSize
class IndexBuffer -> getNumIndexes == getUnitCount
class IndexBuffer -> getIndexSize == getUnitSize
class IndexBuffer -> mMgr == mMag;
//--------------------------------------------------------------------------
class InstancedObject -> mNumBoneMatrices == mBoneCount
class InstancedObject -> TransformSpace == SpaceMode
//--------------------------------------------------------------------------
class VertexDisplayBuffer -> getVertexDeclaration == getData
//--------------------------------------------------------------------------
class PixelChain -> setupVertexDeclaration  融入移去
class PixelChain -> updateBoundingBox == 融入移去
class PixelChain -> addChainElement == add
class PixelChain -> removeChainElement 内部重组
class PixelChain -> clearChain == removeAll
class PixelChain -> updateChainElement == modify
class PixelChain -> getChainElement == getPixel
class PixelChain -> getNumChainElements == getCount
class PixelChain -> clearAllChains == removeAll
class PixelChain -> mChainElementList == mPixelList
class PixelChain -> mChainSegmentList == mChainList
class PixelChain -> setupBuffers == genGeoBuffer
class PixelChain -> updateVertexBuffer 融入移去
class PixelChain -> updateIndexBuffer 融入移去
class PixelChain -> setupChainContainers == resizeGeoCount
class PixelChain -> setDynamic getDynamic mDynamic 无用移去
class PixelChain -> setOtherTextureCoordRange == setTextureCoord
class PixelChain -> setUseTextureCoords 融入到 setTextureCoord
class PixelChain -> getUseTextureCoords == isTextureCoord
class PixelChain -> getOtherTextureCoordRange 分离出 getTextureCoordMin getTextureCoordMax
class PixelChain -> setUseVertexColours == setVertexColour
class PixelChain -> getUseVertexColours == isVertexColour
class PixelChain -> mOtherTexCoordRange == mTexCoordMin mTexCoordMax
class PixelChain -> mMaxElementsPerChain == mPixelCount
class PixelChain -> setNumberOfChains == setChainCount
class PixelChain -> getNumberOfChains == getChainCount
class PixelChain -> setTextureCoordDirection == setTexCoordU
class PixelChain -> getTextureCoordDirection == getTexCoordU
class PixelChain -> mBuffersNeedRecreating == mReGenGeoBuffer
class PixelChain -> mUseTexCoords == mTexCoord
class PixelChain -> mUseVertexColour == mTexColour
class PixelChain -> mTexCoordDir == mTexCoordU
class PixelChain -> mVertexDeclDirty == mUnitChange
class PixelChain -> mNormalBase == mOriBase
class PixelChain -> setFaceCamera == setParallelView isParallelView setViewOriBase
class PixelChain -> getMaterialName == getMaterialID
class PixelChain -> mMaterialName == mMaterialID
class PixelChain -> setMaxChainElements == setMaxPixelCount
class PixelChain -> getMaxChainElements == getMaxPixelCount
class PixelChain -> ChainSegment == Chain
class PixelChain -> mIndexContentDirty == mIndexValid 转义
class PixelChain -> mBoundsDirty == mAABBValid 转义
//--------------------------------------------------------------------------
class PixelOrbit -> getChainIndexForNode 融入移去
class PixelOrbit -> mNodeToSegMap == mNodeChainList
class PixelOrbit -> _timeUpdate == update
class PixelOrbit -> getNodeIterator 无用移去
class PixelOrbit -> addNode == attachNode
class PixelOrbit -> removeNode == detachNode
class PixelOrbit -> setTrailLength == setOrbitLength
class PixelOrbit -> getTrailLength == getOrbitLength
class PixelOrbit -> setInitialColour == setColour 移去2参数的
class PixelOrbit -> getInitialColour == getColour
class PixelOrbit -> setColourChange == setColourFade 移去2参数的
class PixelOrbit -> getColourChange == getColourFade
class PixelOrbit -> setInitialWidth == setDim
class PixelOrbit -> getInitialWidth == getDim
class PixelOrbit -> setWidthChange == setDimReduce
class PixelOrbit -> getWidthChange == getDimReduce
class PixelOrbit -> mNodeToChainSegment == mAttachChainList
class PixelOrbit -> mFreeChains == mDetachChainList
class PixelOrbit -> mTrailLength == mOrbitLength
class PixelOrbit -> mElemLength == mPixelLength
class PixelOrbit -> mInitialColour == mColour
clsss PixelOrbit -> mDeltaColour == mColourFade
class PixelOrbit -> mInitialWidth == mDim
class PixelOrbit -> mDeltaWidth == mDimReduce
class PixelOrbit -> mFadeController == mFadeFunctor
class PixelOrbit -> mTimeControllerValue == mTimeFactor
class PixelOrbit -> resetAllTrails 融入移去
class PixelOrbit -> resetTrail == attachOribit
class PixelOrbit -> updateTrail == updateOribit
class PixelOrbit -> manageController == createTimeCtl
//--------------------------------------------------------------------------
class CurvedSurface -> mDeclaration == mData (VertexData概念)
class CurvedSurface -> getBounds == getAABB
class CurvedSurface -> getBoundingSphereRadius == getCenterRange
class CurvedSurface -> VisibleSide == Common FaceSideType
class CurvedSurface -> VS_FRONT == Common FST_Front
class CurvedSurface -> VS_BACK == Common FST_Back
class CurvedSurface -> VS_BOTH == Common FST_Both
class CurvedSurface -> AUTO_LEVEL 融入移去
//--------------------------------------------------------------------------
class PatchMesh -> mDeclaration == mData (VertexData概念)
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
class KeyFrameTrack -> createKeyFrame == create
class KeyFrameTrack -> removeKeyFrame == destroy
class KeyFrameTrack -> removeAllKeyFrames == removeAll
class KeyFrameTrack -> getNumKeyFrames == getCount
class KeyFrameTrack -> getKeyFrame == get
class KeyFrameTrack -> _applyBaseKeyFrame == setOrigin
class KeyFrameTrack -> _collectKeyFrameTimes 融入到 Animation
class KeyFrameTrack -> _buildKeyFrameIndexMap 融入到 Animation
class KeyFrameTrack -> hasNonZeroKeyFrames == isValid
class KeyFrameTrack -> getKeyFramesAtTime == get 第四参数独立转移 到 NodeKeyFrameTrack
class KeyFrameTrack -> createKeyFrameImpl == createImpl
class KeyFrameTrack -> Listener 移去概念
class KeyFrameTrack -> mListener 移去概念
class KeyFrameTrack -> _keyFrameDataChanged == notify
class KeyFrameTrack -> getHandle == getID
class KeyFrameTrack -> mHandle == mID
class KeyFrameTrack -> populateClone == copyImpl 参数概念相反
class KeyFrameTrack -> mKeyFrameIndexMap 无用概念 移去
//--------------------------------------------------------------------------
class Animation -> InterpolationMode == Mode -> NodeFusion
class Animation -> RotationInterpolationMode == RotationMode -> NodeFusion
class Animation -> setDefaultInterpolationMode == setDefaultMode 移去
class Animation -> getDefaultInterpolationMode == getDefaultMode 移去
class Animation -> setDefaultRotationInterpolationMode == setDefaultRotationMode 移去
class Animation -> getDefaultRotationInterpolationMode == getDefaultRotationMode 移去
class Animation -> _keyFrameListChanged 移去
class Animation -> _getTimeIndex == get
class Animation -> destroyAllTracks 融入移去
class Animation -> destroyAllNumericTracks 融入移去
class Animation -> destroyAllNodeTracks 融入移去
class Animation -> destroyAllVertexTracks 融入移去
class Animation -> buildKeyFrameTimeList 移去
class Animation -> createNumericTrack 2个函数 概念重组移去
class Animation -> createNodeTrack 2个函数 概念重组移去
class Animation -> createVertexTrack 2个函数 概念重组移去
class Animation -> getNumericTrack getNodeTrack getVertexTrack == get
class Animation -> hasNodeTrack hasNumericTrack hasVertexTrack == isExist
class Animation -> getNumNodeTracks getNumNumericTracks getNumVertexTracks == getCount
class Animation -> mNodeTrackList mNumericTrackList mVertexTrackList == mTracks
class Animation -> setInterpolationMode == setMode -> NodeFusion
class Animation -> getInterpolationMode == getMode -> NodeFusion
class Animation -> mInterpolationMode == mMode -> NodeFusion
class Animation -> setRotationInterpolationMode == setRotationMode -> NodeFusion
class Animation -> getRotationInterpolationMode == getRotationMode -> NodeFusion
class Animation -> mRotationInterpolationMode == mRotationMode-> NodeFusion
class Animation -> setUseBaseKeyFrame 概念转移到 AnimationFusion
class Animation -> getUseBaseKeyFrame 概念转移到 AnimationFusion
class Animation -> getBaseKeyFrameTime 概念转移到 AnimationFusion
class Animation -> getBaseKeyFrameAnimationName == getBaseKeyFrameID 概念转移到 AnimationFusion
class Animation -> _applyBaseKeyFrame 概念转移到 AnimationFusion
class Animation -> mUseBaseKeyFrame 概念转移到 AnimationFusion
class Animation -> mBaseKeyFrameTime 概念转移到 AnimationFusion
class Animation -> mBaseKeyFrameAnimationName == mBaseKeyFrameID 概念转移到 AnimationFusion
class Animation -> _getNodeTrackList _getNumericTrackList _getVertexTrackList 移去
class Animation -> getNodeTrackIterator getNumericTrackIterator getVertexTrackIterator == getTrackIterator
class Animation -> msDefaultInterpolationMode == mDefaultMode 移去
class Animation -> msDefaultRotationInterpolationMode == mDefaultRotationMode 移去
class Animation -> getLength == getDur
class Animation -> setLength == setDur
class Animation -> mKeyFrameTimesDirty == mTrackValid 转义 无用移去
class Animation -> optimiseNodeTracks 融入移去
class Animation -> optimiseVertexTracks 融入移去
class Animation -> _collectIdentityNodeTracks == 融入到 optimise(TrackHandleList & tracks) 移去
class Animation -> _destroyNodeTracks == 融入到 optimise(TrackHandleList & tracks) 移去
class Animation -> applyToNode 无用概念移去
class Animation -> applyToVertexData 无用概念移去
class Animation -> _applyBaseKeyFrame 融入移去
class Animation -> KeyFrameTimeList == Times
class Animation -> mKeyFrameTimes == mTimes 无用移去
class Animation -> _notifyContainer == set(AnimationObj *)
class Animation -> getContainer == get(AnimationObj *&)
//--------------------------------------------------------------------------
class AnimationFusion -> addTime == skip
class AnimationFusion -> getTimePosition == tell
class AnimationFusion -> setTimePosition == seek
class AnimationFusion -> getLength == getDur
class AnimationFusion -> setLength == setDur
class AnimationFusion -> getEnabled == isEnable
class AnimationFusion -> setEnabled == setEnable
class AnimationFusion -> hasEnded == isEnd
class AnimationFusion -> setUseBaseKeyFrame == setBase
class AnimationFusion -> getBaseKeyFrameTime == getBaseTime
class AnimationFusion -> getBaseKeyFrameID == getBase
class AnimationFusion -> copyStateFrom == setState
class AnimationFusion -> mBaseKeyFrameID == mBaseID
class AnimationFusion -> mBaseKeyFrameTime == mBegin
class AnimationFusion -> mUseBaseKeyFrame == mBaseEnable
class AnimationFusion -> mEnabled == mEnable
class AnimationFusion -> getAnimationID == getAnimation
class AnimationFusion -> mAnimationID == mAnimation 概念重组
class AnimationFusion -> mBaseID == mBaseAnimation 概念重组
//--------------------------------------------------------------------------
class NodeFusion -> hasBlendMask 融入移去
class NodeFusion -> _setBlendMaskData 融入移去
class NodeFusion -> destroyBlendMask 融入移去
class NodeFusion -> createBlendMask 融入移去
class NodeFusion -> setBlendMaskEntry == setFactor
class NodeFusion -> getBlendMaskEntry == getFactor
class NodeFusion -> _setBlendMask == setFactor
class NodeFusion -> getBlendMask == getFactor(const BlendFactor *)
//--------------------------------------------------------------------------
class InstancedGeometry::BatchInstance -> mLodStrategy == mLodScheme
//--------------------------------------------------------------------------
class StaticGeometry::Region -> mLodStrategy == mLodScheme
//--------------------------------------------------------------------------
class HWAniData -> targetBufferIndex == mBufferIndex
class HWAniData -> parametric == mFactor
//--------------------------------------------------------------------------
class IndexData -> optimiseVertexCacheTriList == opt
class IndexData -> indexBuffer == mBuffer
class IndexData -> indexStart == mOft
class IndexData -> indexCount == mCount
//--------------------------------------------------------------------------
class ShaderChShader -> getType 无效移去
class ShaderChShader -> getProgram == mProgram
class ShaderChShader -> getProgramName == mProgram->getName()
class ShaderChShader -> setParameters == mParameters

//--------------------------------------------------------------------------
class ShaderCh -> setIlluminationStage == setShaderStep
class ShaderCh -> getIlluminationStage == getShaderStep
class ShaderCh -> mIlluminationStage == mShaderStep
class ShaderCh -> mVertexProgramUsage == mVSUsage
class ShaderCh -> TextureUnitStates == Textures
class ShaderCh -> mTextureUnitStates == mTextures
class ShaderCh -> mFragmentProgramUsage == mFSUsage
class ShaderCh -> mGeometryProgramUsage == mGSUsage
class ShaderCh -> mShadowCasterVertexProgramUsage == mShadowCasterVSUsage
class ShaderCh -> mShadowCasterFragmentProgramUsage == mShadowCasterFSUsage
class ShaderCh -> mShadowReceiverVertexProgramUsage == mShadowReceiverVSUsage
class ShaderCh -> mShadowReceiverFragmentProgramUsage == mShadowReceiverFSUsage
class ShaderCh -> getFogOverride == isFogValid
class ShaderCh -> mFogOverride mFogMode mFogColour mFogStart mFogEnd mFogDensity
     setFog getFogMode getFogColour getFogStart getFogEnd getFogDensity
        == mFog(ShaderChFog 类) mMode mColour mBegin mEnd mDensity
            getMode getColour getBegin getEnd getDensity
class ShaderCh -> getSelfIllumination 使用 getEmissive 代替
class ShaderCh -> setSelfIllumination 使用 setEmissive 代替

class ShaderCh -> 三色参数 改 单元颜色参数

class ShaderCh -> setVertexColourTracking == setColourTracking
class ShaderCh -> getVertexColourTracking == getColourTracking
class ShaderCh -> setManualCullingMode == setSysCullingMode
class ShaderCh -> getManualCullingMode == getSysCullingMode
class ShaderCh -> setMaxSimultaneousLights == setLightMax
class ShaderCh -> getMaxSimultaneousLights == getLightMax
class ShaderCh -> getLightingEnabled == isLight
class ShaderCh -> mTracking == mMark(部分)
class ShaderCh -> setAmbient setDiffuse setSpecular setEmissive setShininess setColourTracking
    getAmbient getDiffuse getSpecular getEmissive getShininess getColourTracking
    mAmbient mDiffuse mSpecular mEmissive mShininess mMark
        == mColour(ShaderChColour 类)

class ShaderCh -> setPointSize getPointSize setPointMinSize getPointMinSize setPointMaxSize
    getPointMaxSize setPointSpritesEnabled getPointSpritesEnabled setPointAttenuation
    isPointAttenuationEnabled getPointAttenuationConstant getPointAttenuationLinear
    getPointAttenuationQuadratic
        == mPoint(ShaderChPoint 类)
    setSize getSize setMinSize getMinSize setMaxSize getMaxSize setSpritesEnable
    isSpritesEnable setAttenuateEnable isAttenuateEnable setConstant getConstant
    setLinear getLinear setQuadratic getQuadratic mSize mMinSize mMaxSize mConstant
    mLinear  mQuadratic mMark

class ShaderCh -> mMaxSimultaneousLights == mMaxLightCount

class ShaderCh -> setSceneBlending setSeparateSceneBlending hasSeparateSceneBlending
    getSourceBlendFactor getDestBlendFactor getSourceBlendFactorAlpha
    getSourceBlendFactorAlpha getDestBlendFactorAlpha setSceneBlendingOperation
    setSeparateSceneBlendingOperation isTransparent hasSeparateSceneBlendingOperations
    getSceneBlendingOperation getSceneBlendingOperationAlpha mSourceBlendFactor
    mDestBlendFactor mSourceBlendFactorAlpha  mDestBlendFactorAlpha mBlendOperation
    mAlphaBlendOperation mSeparateBlend mSeparateBlendOperation
        == mBlend(ShaderChBlend 类)
    setBlend setBlendMode getBlendMode getAlphaBlendMode getSrcFactor getDstFactor
    getSrcAlphaFactor getDstAlphaFactor isReplace isPartReplace isTransparent
    isPartAlpha isPartAlphaBlendMode mSrcFactor mDstFactor mSrcAlphaFactor
    mDstAlphaFactor mMode mAlphaMode mMark

class ShaderCh -> mDepth(ShaderChDepth 类) setDepthCompareFunc getDepthCompareFunc setDepthEnable isDepthEnable
    setDepthWrite isDepthWrite setBiasConstant getBiasConstant setBiasConstantFactor
    getBiasConstantFactor setBiasSlopeScale getBiasSlopeScale mCmpMode mBias
    mBiasFactor mSlopeScaleBias mMark

class ShaderCh -> createTextureUnitState == createTexture 2函数
class ShaderCh -> addTextureUnitState == addTexture
class ShaderCh -> getTextureUnitState == getTexture 4函数
class ShaderCh -> getTextureUnitStateIndex == 使用 ShaderChTextureUnit 中的 getLocalIndex 代替
class ShaderCh -> removeTextureUnitState == removeTexture
class ShaderCh -> removeAllTextureUnitStates == removeAllTexture
class ShaderCh -> getNumTextureUnitStates == getTextureCount

class ShaderCh -> setColourWriteEnabled == setColourWrite 改 Nmark 参数
class ShaderCh -> getColourWriteEnabled == getColourWrite 改 Nmark 返回
class ShaderCh -> getTextureUnitStateIterator == getTextures
class ShaderCh -> mShadowContentTypeLookup == mShadowTextures 改 ShaderChTextureUnit 类型
class ShaderCh -> _getTextureUnitWithContentTypeIndex == getTexture

class ShaderCh -> setAlphaToCoverageEnabled isAlphaToCoverageEnabled setAlphaRejectSettings
    setAlphaRejectFunction getAlphaRejectFunction setAlphaRejectValue getAlphaRejectValue
    mAlphaRejectFunc mAlphaRejectVal mAlphaToCoverageEnabled

class ShaderCh -> isProgrammable hasVertexProgram hasFragmentProgram hasGeometryProgram
    hasShadowCasterVertexProgram hasShadowCasterFragmentProgram hasShadowReceiverVertexProgram
    hasShadowReceiverFragmentProgram setVertexProgram setVertexProgramParameters
    getVertexProgramName getVertexProgramParameters getVertexProgram setShadowCasterVertexProgram
    setShadowCasterVertexProgramParameters getShadowCasterVertexProgramName
    getShadowCasterVertexProgramParameters getShadowCasterVertexProgram
    setShadowCasterFragmentProgram setShadowCasterFragmentProgramParameters
    getShadowCasterFragmentProgramName getShadowCasterFragmentProgramParameters
    getShadowCasterFragmentProgram setShadowReceiverVertexProgram
    setShadowReceiverVertexProgramParameters setShadowReceiverFragmentProgram
    setShadowReceiverFragmentProgramParameters getShadowReceiverVertexProgramName
    getShadowReceiverVertexProgramParameters getShadowReceiverVertexProgram
    getShadowReceiverFragmentProgramName getShadowReceiverFragmentProgramParameters
    getShadowReceiverFragmentProgram setFragmentProgram setFragmentProgramParameters
    getFragmentProgramName getFragmentProgramParameters getFragmentProgram
    setGeometryProgram setGeometryProgramParameters getGeometryProgramName
    getGeometryProgramParameters getGeometryProgram _updateAutoParams
    mVSUsage mFSUsage mGSUsage mShadowCasterVSUsage mShadowCasterFSUsage
    mShadowReceiverVSUsage mShadowReceiverFSUsage
        ==
class ShaderCh -> mColourWrite 融入到 mMark
class ShaderCh -> _prepare _unprepare _load _unload == plan unplan load unload
class ShaderCh -> plan unplan load unload setTextureFiltering setTextureAnisotropy
    createTexture addTexture getTexture removeTexture removeAllTexture getTextureCount
    getTextures mTextures mShadowTextures mTexUnitChangeMutex
        ==
class ShaderCh -> setTransparentSortingEnabled == setDepthSort
class ShaderCh -> getTransparentSortingEnabled == isDepthSort
class ShaderCh -> setTransparentSortingForced == setForceDepthSort
class ShaderCh -> getTransparentSortingForced == isForceDepthSort
class ShaderCh -> isAmbientOnly 融入移去
class ShaderCh -> setShadingMode == setShadeMode
class ShaderCh -> getShadingMode == getShaderMode
class ShaderCh -> getIteratePerLight == isEachLight
class ShaderCh -> getRunOnlyForOneLightType == getLightTypeLimit
class ShaderCh -> setLightCountPerIteration == setLightRenderLimit
class ShaderCh -> getLightCountPerIteration == getLightRenderLimit
class ShaderCh -> setPassIterationCount == setRenderCount
class ShaderCh -> getPassIterationCount == getRenderCount
class ShaderCh -> setLightScissoringEnabled == setLightClip
class ShaderCh -> getLightScissoringEnabled == isLightClip
class ShaderCh -> setLightClipPlanesEnabled == setLightClipPlane
class ShaderCh -> getLightClipPlanesEnabled == isLightClipPlane
class ShaderCh -> _notifyIndex 融入移去
class ShaderCh -> mContentTypeLookupBuilt 移去
class ShaderCh -> mTransparentSorting == mDepthSort
class ShaderCh -> mTransparentSortingForced == mForceDepthSort
class ShaderCh -> mPolygonModeOverrideable == mAutoReduce
class ShaderCh -> mShadeOptions == mShaderMode
class ShaderCh -> setIteratePerLight 分解成3个函数 setEachLight setLightTypeLimit
    setLightType
class ShaderCh -> setLightType getOnlyLightType mRunOnlyForOneLightType 合并到 setLightTypeLimit
class ShaderCh -> mLightsPerIteration == mLightCountLimit
class ShaderCh -> mIteratePerLight == mEachLight
class ShaderCh -> mNormaliseNormals == mUnitNormals --> mMark
class ShaderCh -> mLightingEnabled == mLight --> mMark
class ShaderCh -> mLightScissoring == mLightClip --> mMark
class ShaderCh -> mLightClipPlanes == mLightClipPlane
class ShaderCh -> mPassIterationCount == mRenderCount
class ShaderCh -> mQueuedForDeletion 移去
class ShaderCh -> msHashFunc msDirtyHashList mHashDirtyQueued getHash mHash _dirtyHash
    _recalculateHash getDirtyHashList msDirtyHashListMutex setHashFunction
    getHashFunction getBuiltinHashFunction BuiltinHashFunction mQueuedForDeletion
    clearDirtyHashList msPassGraveyardMutex getPassGraveyard HashFunc MinTextureStateChangeHashFunc
    MinGpuProgramChangeHashFunc sMinTextureStateChangeHashFunc sMinGpuProgramChangeHashFunc移去概念
class ShaderCh -> processPendingPassUpdates 移到 MaterialManager 的 recover

class ShaderCh -> msPassGraveyard queueForDeletion 移到 MaterialManager 的 recover(ShaderCh *
class ShaderCh -> _split 融入移去
class ShaderCh -> _notifyNeedsRecompile == notify
class ShaderCh -> mUserBindings -> public ExtData
class ShaderCh -> mManualCullMode == mSysCullMode
class ShaderCh -> applyTextureAliases 无用概念
class ShaderCh -> setLightMask == setLightMark
class ShaderCh -> getLightMask == getLightMark
//--------------------------------------------------------------------------
class Light -> LT_SPOTLIGHT == LT_SPOT
class Light -> getShadowFarDistance == getShadowExtent
class Light -> getShadowFarDistanceSquared == getShadowExtent * getShadowExtent
class Light -> _calcTempSquareDist == setSortBase
class Light -> tempSquareDist == mSortValue
class Light -> setPos 移去三个参数的
class Light -> setDirection 三参数的移去
class Light -> setDiffuseColour == setDiffuse
class Light -> getDiffuseColour == getDiffuse
class Light -> setSpecularColour == setSpecular
class Light -> getSpecularColour == getSpecular
class Light -> setSpotlightInnerAngle == setSpotlightInner
class Light -> getSpotlightInnerAngle == getSpotlightInner
class Light -> setSpotlightOuterAngle == setSpotlightOuter
class Light -> getSpotlightOuterAngle == getSpotlightOuter
class Light -> setSpotlightNearClipDistance == setStart
class Light -> getSpotlightNearClipDistance == getStart
class Light -> getAttenuationRange == getEnd
class Light -> setAttenuation 分离出 setRange setAttenuationConstant
    setAttenuationLinear setAttenuationQuadric
class Light -> mSpotNearClip == mStart
class Light -> mRange == mEnd
class Light -> setPowerScale == setBrightFactor
class Light -> getPowerScale == getBrightFactor
class Light -> _setCameraRelative == setRel (参数改 SpaceObj) 移至 SpaceObj
class Light ->
class Light -> getDerivedPosition == getSpacePos (true 函数分离出 getRelSpacePos 移至 SpaceObj)
class Light -> getAs4DVector 分离出 getRelSpace4 getSpace4
class Light -> mDerivedCamRelativeDirty 移去概念
class Light -> mCameraToBeRelativeTo == mRelation 移至 SpaceObj
class Light -> mDerivedPosition == mSpacePos
class Light -> mDerivedCamRelativePosition == mRelSpacePos
class Light -> mDerivedDirection == mSpaceDirection
class Light -> mPowerScale == mBrightFactor
class Light -> mShadowFarDistSquared 融入移去
class Light -> resetShadowFarDistance mOwnShadowFarDist 无效移去
class Light -> mShadowFarDist == mShadowExtent
class Light -> setShadowFarDistance == setShadowExtent
class Light -> msMovableType 无效移去
class Light -> _notifyIndexInFrame == setIndex
class Light -> _getIndexInFrame == getIndex
class Light -> setCustonParam getCustomParam _updateCustomParam (最后参数放第一) GParamValueList
    mCGPUParamList 使用 CustomGpuParam 类
class Light -> mDerivedTransformDirty == 使用 mMove 概念
class Light -> setShadowNearClipDistance == setShadowNearClip
class Light -> getShadowNearClipDistance _deriveShadowNearClipDistance ==
    getShadowNearClip 参数改 NIIf
class Light -> setShadowFarClipDistance == setShadowFarClip
class Light -> getShadowFarClipDistance _deriveShadowFarClipDistance ==
    getShadowFarClip 参数改 NIIf
class Light -> resetCustomShadowCameraSetup 融入移去
class Light -> setCustomShadowGenCamera == setCameraSetup
class Light -> getCustomShadowGenCamera == getCameraSetup
class Light -> mCustomShadowGenCamera == mShadowCamera
class Light -> mNearClipVolume _getNearClipVolume 移动到 StencilRenderPattern 类
class Light -> mFrustumClipVolumes _getFrustumClipVolumes 移动到 StencilRenderPattern 类
class Light -> mShadowNearClipDist == mShadowNearClip
class Light -> mShadowFarClipDist == mShadowFarClip
class Light -> mIndexInFrame == mRSIndex
//--------------------------------------------------------------------------
class Sky 由 SceneManager 来 拆分成
class Sky -> mSkyPlaneRenderQueue mSkyBoxRenderQueue mSkyDomeRenderQueue
    = mRenderGroup
class Sky -> mSkyPlaneEnabled mSkyBoxEnabled mSkyDomeEnabled setSkyBoxEnabled
    isSkyBoxEnabled setSkyPlaneEnabled isSkyPlaneEnabled setSkyDomeEnabled isSkyDomeEnabled
    = mEnable setEnable issetEnable
class Sky -> mSkyDomeOrientation 无用移去
class Sky -> _queueSkies(RenderQueue *, Camera *) == render(Camera *)
class Sky -> mSkyPlaneNode mSkyBoxNode mSkyDomeNode getSkyPlaneNode
    getSkyBoxNode getSkyDomeNode = mNode
class Sky -> mSkyPlane mSkyPlaneEntity mSkyPlaneParams -> PlaneSky
class Sky -> BP_FRONT == PT_Front
class Sky -> BP_BACK == PT_Back
class Sky -> BP_LEFT == PT_Left
class Sky -> BP_RIGHT == PT_Right
class Sky -> BP_UP == PT_Up
class Sky -> BP_DOWN == PT_Down
//--------------------------------------------------------------------------
class PlaneSky -> SkyPlaneGenParameters getSkyPlaneGenParameters mSkyPlaneParams 展开
class PlaneSky -> mSkyPlane == mPlane
class PlaneSky -> mSkyPlaneEntity == mGeo
class PlaneSky -> skyPlaneScale = mScale
class PlaneSky -> skyPlaneTiling = mXTiling mYTiling
class PlaneSky -> skyPlaneBow = mBow
class PlaneSky -> skyPlaneXSegments = mXSegment
class PlaneSky -> skyPlaneYSegments = mYSegment
class PlaneSky -> _setSkyPlane 融入到 setSkyPlane 改名 buildGeo
//--------------------------------------------------------------------------
class BoxSky -> SkyBoxGenParameters mSkyBoxParams 展开
class BoxSky -> mSkyBoxObj == mGeo
class BoxSky -> mSkyBoxOrientation == mOriOft
class BoxSky -> skyBoxDistance == mRange
class BoxSky -> createSkyboxPlane 无用移去
class BoxSky -> setSkyBox == buildGeo
//--------------------------------------------------------------------------
class DemoSky -> SkyDomeGenParameters mSkyDomeParams 展开
class DemoSky -> skyDomeCurvature == mCurveFactor
class DemoSky -> skyDomeTiling == mXTiling mYTiling
class DemoSky -> skyDomeDistance == mRange
class DemoSky -> skyDomeXSegments == mXSegment
class DemoSky -> skyDomeYSegments == mYSegment
class DemoSky -> mSkyDomeEntity == mGeo
class DemoSky -> createSkydomePlane == createPlaneImpl
class DemoSky -> setSkyDome == buildGeo
class DemoSky -> skyDomeYSegments_keep 使用 -1代替
//--------------------------------------------------------------------------
class Frustum -> msMovableType 无效移去
class Frustum -> setFrustumOffset 移去两参数的
class Frustum -> mFarDist == mFarExtent
class Frustum -> mNearDist == mNearExtent
class Frustum -> mFocalLength == mUnit
class Frustum -> mFrustumOffset == mOffset
class Frustum -> setFocalLength == setAspectUnit
class Frustum -> getFocalLength == getAspectUnit
class Frustum -> setFrustumOffset == setAspectOffset
class Frustum -> getFrustumOffset == getAspectOffset
class Frustum -> setFOVy == setFOV
class Frustum -> getFOVy == getFOV
class Frustum -> resetFrustumExtents == setCustomAspect(bool) 概念
class Frustum -> mFrustumExtentsManuallySet == mCustomAspect
class Frustum -> setFrustumExtents == setCustomAspect
class Frustum -> getFrustumExtents 无效移去
class Frustum -> setProjectionType == setProjType
class Frustum -> getProjectionType == getProjType
class Frustum -> ProjectionType 外 == Frustum::Type
class Frustum -> PT_PERSPECTIVE == Frustum::T_Perspective
class Frustum -> PT_ORTHOGRAPHIC == Frustum::T_Orthogonal
class Frustum -> getFrustumPlanes 无效移去
class Frustum -> getFrustumPlane == getClipPlane
class Frustum -> FrustumPlane 外 == Frustum::PlaneType
class Frustum -> FRUSTUM_PLANE_NEAR == PT_Near
class Frustum -> FRUSTUM_PLANE_FAR == PT_Far
class Frustum -> FRUSTUM_PLANE_LEFT == PT_Left
class Frustum -> FRUSTUM_PLANE_RIGHT == PT_Right
class Frustum -> FRUSTUM_PLANE_TOP == PT_Top
class Frustum ->  FRUSTUM_PLANE_BOTTOM == PT_Bottom
class Frustum -> mFOVy == mFOV
class Frustum -> getWorldSpaceCorners == getClipPlaneIntersect
class Frustum -> setCustomProjectionMatrix == setCustomProjMatrix 分离出 2函数
class Frustum -> isCustomProjectionMatrixEnabled == isCustomProjMatrix
class Frustum -> getProjectionMatrix == getProjMatrix
class Frustum -> setCustomViewMatrix == 分离出 2函数
class Frustum -> isCustomViewMatrixEnabled == isCustomViewMatrix
class Frustum -> getProjectionMatrixRS == getSysProjMatrix
class Frustum -> getProjectionMatrixWithRSDepth mProjMatrixRSDepth 使用 内部
class Frustum -> calcViewMatrixRelative 融入移去
class Frustum -> mProjMatrixRS == mSysProjMatrix
class Frustum -> isVisible == 3个函数 isIntersect 第二参数无用
class Frustum -> setOrthoWindow == setOrthoAspect
class Frustum -> setOrthoWindowWidth setOrthoWindowHeight 融入移去
class Frustum -> getOrthoWindowHeight == getOrthoAspectHeight 加入 mOrthoWidht 概念
class Frustum -> getOrthoWindowWidth == getOrthoAspectWidth
class Frustum -> getPlaneBoundedVolume 融入移去
class Frustum -> isReflected == isReflection
class Frustum -> enableReflection == setReflection 融入移去
class Frustum -> getReflectionPlane == getReflection
class Frustum -> disableReflection == setReflection(false) 融入移去
class Frustum -> enableCustomNearClipPlane == setCustomNearClip 融入移去
class Frustum -> disableCustomNearClipPlane == setCustomNearClip(false) 融入移去
class Frustum -> setReflection(const PlaneSpaceObj  mLinkedReflectPlane
    setCustomNearClip(const PlaneSpaceObj mLinkedObliqueProjPlane
    概念移去
class Frustum -> isCustomNearClipPlaneEnabled == isCustomNearClip
class Frustum -> mLastLinkedReflectionPlane == mLastReflectPlane
class Frustum -> mLastLinkedObliqueProjPlane == mLastObliqueProjPlane
class Frustum -> mLastParentPosition == mLastNodePos
class Frustum -> mLastParentOrientation == mLastNodeDir
class Frustum -> mObliqueDepthProjection == mObliqueProj
class Frustum -> mWorldSpaceCorners == mPlaneIntersect
class Frustum -> mOrientationMode == mDirection
class Frustum -> setOrientationMode == setDirection
class Frustum -> getOrientationMode == getDirection
class Frustum -> getPositionForViewUpdate == getNodePos
class Frustum -> getOrientationForViewUpdate == getNodeOri
class Frustum -> INFINITE_FAR_PLANE_ADJUST 内部定义
class Frustum -> mRecalcWorldSpaceCorners == mPlaneIntersectValid 反义
class Frustum -> mRecalcFrustum == mProjValid 反义
class Frustum -> isFrustumOutOfDate == isProjValid 反义
class Frustum -> mRecalcFrustumPlanes == mPlaneValid 反义
class Frustum -> mRecalcView == mViewValid 反义
class Frustum -> isViewOutOfDate == isViewValid 反义
class Frustum -> mRecalcVertexData == mDebugVertexValid 反义
class Frustum -> calcProjectionParameters == updateAspect
class Frustum -> updateFrustum == updateProj
class Frustum -> updateFrustumImpl == updateProjImpl
class Frustum -> updateFrustumPlanesImpl 融入移去
class Frustum -> updateWorldSpaceCorners updateWorldSpaceCornersImpl 融入移去
class Frustum -> updateVertexData 融入移去
class Frustum -> invalidateFrustum == notifyProj
class Frustum -> invalidateView == notifyView
class Frustum -> projectSphere == project 后 4 参数改 Rectf
//--------------------------------------------------------------------------
SceneType == SpaceType
SceneType ST_EXTERIOR_CLOSE == 移去
SceneType ST_EXTERIOR_FAR == 移去
SceneType ST_EXTERIOR_REAL_FAR == 移去
SceneType ST_GENERIC == ST_Normal
SceneType ST_INTERIOR == ST_Intersect
//--------------------------------------------------------------------------
SpaceTypeVerbose -> typeName == mTypeID
SpaceTypeVerbose -> description == mVerbose
SpaceTypeVerbose -> sceneTypeMask == mMark
SpaceTypeVerbose -> worldGeometrySupported 融入到 ST_World
//--------------------------------------------------------------------------
class OverlayManager -> getViewportOrientationMode == getViewportDirection
class OverlayManager -> hasViewportChanged == isViewportChange
class OverlayManager -> createOverlayGeo == createGeo
class OverlayManager -> hasOverlayGeo == isGeoExist
class OverlayManager -> getOverlayGeo == getGeo
class OverlayManager -> destroyOverlayGeo == destroyGeo
class OverlayManager -> destroyAllOverlayGeos == destroyAllGeo
class OverlayManager -> addOverlayGeoFactory == add
class OverlayManager -> getOverlayGeoFactoryMap == getFactoryList
class OverlayManager -> _queueOverlaysForRendering == render 第三参数移到第一
class OverlayManager -> getTemplateIterator 无用移去
class OverlayManager -> getOverlayIterator == getList
class OverlayManager -> createOverlayGeoFromFactory == createGeoImpl
class OverlayManager -> createOverlayGeoFromTemplate == createGeo
class OverlayManager -> cloneOverlayGeoFromTemplate == createGeo
class OverlayManager ->
class OverlayManager -> 加入 Viewport 概念
class OverlayManager -> hasOverlayGeoImpl 融入移去
class OverlayManager -> destroyOverlayGeoImpl 融入移去
class OverlayManager -> getOverlayGeoImpl 融入移去
class OverlayManager -> createOverlayGeoImpl 融入移去
class OverlayManager -> getElementMap 融入移去
class OverlayManager -> skipToNextCloseBrace == skipCloseBrace
class OverlayManager -> skipToNextOpenBrace == skipOpenBrace
class OverlayManager -> parseAttrib 融入移去
class OverlayManager -> parseElementAttrib 融入移去
class OverlayManager -> mLastViewportWidth == 融入到 ViewportOverlay
class OverlayManager -> mLastViewportHeight == 融入到 ViewportOverlay
class OverlayManager -> mLastViewportOrientationMode == 融入到 ViewportOverlay
class OverlayManager -> mOverlayMap == 融入到 ViewportOverlay
class OverlayManager -> mViewportDimensionsChanged == 融入到 ViewportOverlay
class OverlayManager -> getViewportAspectRatio 无用移去
class OverlayManager -> getViewportWidth 移入到 Viewport -> getViewWidth
class OverlayManager -> getViewportHeight 移入到 Viewport -> getViewHeight
class OverlayManager -> parseNewElement == parseGeo
class OverlayManager -> parseChildren == parseGeoProperty
//--------------------------------------------------------------------------
class OverlayGeoFactory -> createOverlayGeo == createGeo
class OverlayGeoFactory -> destroyOverlayGeo== destroyGeo
//--------------------------------------------------------------------------
class Viewport -> Viewport::Listener == ViewportListener
class Viewport -> getTarget == getBuffer
class Viewport -> mOrientationMode == mDirection
class Viewport -> setOrientationMode == setDirection
class Viewport -> getOrientationMode == getDirection
class Viewport -> setDimensions == setArea
class Viewport -> getActualDimensions == getPixelArea
class Viewport -> _updateDimensions == sync
class Viewport -> setAutoUpdated == setAutoUpdate
class Viewport -> isAutoUpdated == isAutoUpdate
class Viewport -> mRelLeft == mLeft
class Viewport -> mRelTop == mTop
class Viewport -> mRelWidth == mWidth
class Viewport -> mRelHeight == mHeight
class Viewport -> mActLeft == mPixelLeft
class Viewport -> mActTop == mPixelTop
class Viewport -> mActWidth == mPixelWidth
class Viewport -> mActHeight == mPixelHeight
class Viewport -> setBackgroundColour == setBgColour
class Viewport -> getBackgroundColour == getBgColour
class Viewport -> getActualLeft == getPixelLeft
class Viewport -> getActualTop == getPixelTop
class Viewport -> getActualWidth == getPixelWidth
class Viewport -> getActualHeight == getPixelHeight
class Viewport -> setDirection (第二参数)分离出 setDefaultOrientationMode
class Viewport -> setDefaultOrientationMode == setDefaultDirection
class Viewport -> getDefaultOrientationMode == getDefaultDirection
class Viewport -> setOverlaysEnabled == setOverlayEnable
class Viewport -> getOverlaysEnabled == isOverlayEnable
class Viewport -> setSkiesEnabled == setSkyEnable
class Viewport -> getSkiesEnabled == isSkyEnable
class Viewport -> setShadowsEnabled == setShadowEnable
class Viewport -> getShadowsEnabled == isShadowEnable
class Viewport -> setClearEveryFrame == setAutoClear
class Viewport -> getClearEveryFrame == isAutoClear
class Viewport -> getClearBuffers == getClearMark
class Viewport -> setVisibilityMask == setVisableMark
class Viewport -> getVisibilityMask == getVisableMark
class Viewport -> setMaterialScheme == setMaterial
class Viewport -> getMaterialScheme == getMaterial
class Viewport -> _isUpdated == isSyncRender 反义
class Viewport -> _clearUpdatedFlag == syncRenderImpl 反义
class Viewport -> mUpdated == mSync 反义
class Viewport -> mBackColour == mBgColour
class Viewport -> mClearEveryFrame == mAutoClear
class Viewport -> mIsAutoUpdated == mAutoUpdate
class Viewport -> mShowOverlays == mOverlayEnable
class Viewport -> mShowSkies == mSkyEnable
class Viewport -> mShowShadows == mShadowEnable
class Viewport -> mDefaultOrientationMode == mDefaultDirection
class Viewport -> mRQSequenceName 融入移去
class Viewport -> mRQSequence == mQueueFusion
class Viewport -> mMaterialSchemeName == mMaterial
class Viewport -> mVisibilityMask == mVisableMark
class Viewport -> mClearBuffers == mClearMark
class Viewport -> setRenderQueueInvocationSequenceName == setCustomRender update(X, RenderQueueFusion)
class Viewport -> getRenderQueueInvocationSequenceName 无用移去
class Viewport -> _getRenderQueueInvocationSequence == getQueueFusion update(X, RenderQueueFusion)
//--------------------------------------------------------------------------
class StencilRenderPattern -> setShowDebugShadows == setDebugShadow
class StencilRenderPattern -> getShowDebugShadows == isDebugShadow
class StencilRenderPattern -> _getNearClipVolume == getNearClip
class StencilRenderPattern -> _getFrustumClipVolumes == getFrustumClip
class StencilRenderPattern -> mNearClipVolume == mNearClipSpace
class StencilRenderPattern -> mFrustumClipVolumes == mFrustumClipSpace
class StencilRenderPattern ->
//--------------------------------------------------------------------------
class RenderQueue -> QueueGroupIterator ConstQueueGroupIterator
    _getQueueGroupIterator == getGroupList
class RenderQueue -> RenderableListener setRenderableListener mRenderableListener
    getRenderableListener 融入移去
class RenderQueue -> setDefaultQueueGroup == setDefaultGroup
class RenderQueue -> getDefaultQueueGroup == getDefaultGroup
class RenderQueue -> setDefaultRenderablePriority == setDefaultLevel
class RenderQueue -> getDefaultRenderablePriority == getDefaultLevel
class RenderQueue -> mDefaultQueueGroup == mDefaultGroup
class RenderQueue -> mDefaultRenderablePriority == mDefaultLevel
class RenderQueue -> setSplitNoShadow isSplitNoShadow
    setSplitLightingType isSplitLightingType
    setCastersNotBeReceivers isCastersNotReceivers
    mSplitLightingType mSplitNoShadow mCastersNotReceivers
        == ShadowRenderQueue
class RenderQueue -> processVisibleObject 移动到 SpaceObj
    移去 SpaceObj 第一参数 放 RenderQueue 第一参数  概念  第五参数 提前到第四
class RenderQueue -> RenderQueueGroupMap == GroupList 概念改变
class RenderQueue -> getRemoveRenderQueueStructuresOnClear == isDestroyAllOnClear
class RenderQueue -> setRemoveRenderQueueStructuresOnClear == setDestroyAllOnClear
class RenderQueue -> mRemoveQueueStructuresOnClear == mRemoveGroupOnClear
//--------------------------------------------------------------------------
class ViewportListener -> viewportDestroyed == onDestroy
class ViewportListener -> viewportCameraChanged == onCameraChange
class ViewportListener -> viewportDimensionsChanged == onSize
//--------------------------------------------------------------------------
OrientationMode 改变为 NIIf 类型 OR_DEGREE_0 0 OR_DEGREE_90 90 OR_DEGREE_180 180
    OR_DEGREE_270 270 OR_PORTRAIT 0 OR_LANDSCAPERIGHT 90 OR_LANDSCAPELEFT 270
//--------------------------------------------------------------------------
class TRect -> left == mLeft
class TRect -> top == mTop
class TRect -> right == mRight
class TRect -> bottom == mBottom
class TRect -> inside == intersects
//--------------------------------------------------------------------------
class ResourceManager -> 不使用 ResourcePtr 概念
class ResourceManager -> AUTODETECT_RESOURCE_GROUP_NAME == GroupUnknow
class ResourceManager -> DEFAULT_RESOURCE_GROUP_NAME == GroupDefault
class ResourceManager -> INTERNAL_RESOURCE_GROUP_NAME == GroupInner
class ResourceManager -> getByHandle == get
class ResourceManager -> ResourceMap == Resources
class ResourceManager -> ResourceWithGroupMap == Groups
class ResourceManager -> mResourcesWithGroup == mGroups
class ResourceManager -> mResourcesByHandle == mPID
class ResourceManager -> resourceExists 2函数 == isExist
class ResourceManager -> ResourcePool 移去概念
class ResourceManager -> unloadUnreferencedResources == unloadUnused
class ResourceManager -> reloadUnreferencedResources == reloadUnused
class ResourceManager -> removeUnreferencedResources == removeUnused 移去参数概念
class ResourceManager -> prepare == plan
class ResourceManager -> _notifyResourceTouched == onTouch
class ResourceManager -> _notifyResourceLoaded == onLoad
class ResourceManager -> _notifyResourceUnloaded == onUnload
class ResourceManager -> getNextHandle == genValidID 移动到 ResourceSchemeManager
class ResourceManager -> mNextHandle == mValidPID 移动到 ResourceSchemeManager
class ResourceManager -> getResourceType == getType
class ResourceManager -> mResourceType == mType
class ResourceManager -> mResources 融并 到 mGroups
class ResourceManager -> setMemoryBudget == setMemMax
class ResourceManager -> getMemoryBudget == getMemMax
class ResourceManager -> mMemoryBudget == mMemMax
class ResourceManager -> getMemoryUsage == getMemUsage
class ResourceManager -> checkUsage 无效移去
class ResourceManager -> mMemoryUsage == mMemUsage
class ResourceManager -> mVerbose == mVMode
class ResourceManager -> N_mutex1 NII_LOCK_AUTO_MUTEX 移去概念
class ResourceManager -> getResourceIterator == getPrcResList
class ResourceManager -> getScriptPatterns getLoadingOrder mScriptPatterns -> PropertyScriptSys 中
class ResourceManager -> estimateWorldGeometry 无用概念移去
//--------------------------------------------------------------------------
class ProcessResourceNameScriptCompilerEvent -> ResourceType 改使用NiiCommon.h中的
//--------------------------------------------------------------------------
class ResourceSchemeManager -> resourceExists 2函数 == isExist
class ResourceSchemeManager -> resourceExistsInAnyGroup == isExist
class ResourceSchemeManager -> createResourceGroup == create
class ResourceSchemeManager -> initialiseResourceGroup == setup
class ResourceSchemeManager -> initialiseAllResourceGroups ==  setupAll
class ResourceSchemeManager -> prepareResourceGroup ==  plan
class ResourceSchemeManager -> loadResourceGroup == load
class ResourceSchemeManager -> unloadResourceGroup == unload
class ResourceSchemeManager -> unloadUnreferencedResourcesInGroup == unloadUnused
class ResourceSchemeManager -> clearResourceGroup == clear
class ResourceSchemeManager -> destroyResourceGroup == destroy
class ResourceSchemeManager -> isResourceGroupInitialised == isSetup
class ResourceSchemeManager -> isResourceGroupLoaded == isLoad
class ResourceSchemeManager -> resourceGroupExists == isExist
class ResourceSchemeManager -> addResourceLocation == add
class ResourceSchemeManager -> removeResourceLocation == remove
class ResourceSchemeManager -> resourceLocationExists == isVFSExist
class ResourceSchemeManager -> isResourceGroupInGlobalPool == isGlobal
class ResourceSchemeManager -> _registerResourceManager == add
class ResourceSchemeManager -> _unregisterResourceManager == remove
class ResourceSchemeManager -> _getResourceManager == get
class ResourceSchemeManager -> _registerScriptLoader == add
class ResourceSchemeManager -> _unregisterScriptLoader == remove
class ResourceSchemeManager -> _findScriptLoader == get(const String & pattern, ScriptLoader *)
class ResourceSchemeManager -> openResource == open
class ResourceSchemeManager -> openResources == opens
class ResourceSchemeManager -> addResourceGroupListener == add 移去
class ResourceSchemeManager -> removeResourceGroupListener == remove 移去
class ResourceSchemeManager -> setWorldResourceGroupName == setEngineGroup
class ResourceSchemeManager -> getWorldResourceGroupName == getEngineGroup
class ResourceSchemeManager -> ResourceLoadingListener mListener 移去概念
class ResourceSchemeManager -> setLoadingListener == 移去概念
class ResourceSchemeManager -> getLoadingListener == 移去概念
class ResourceSchemeManager -> getResourceGroup == get
class ResourceSchemeManager -> resourceModifiedTime == getModifyTime 2个函数
class ResourceSchemeManager -> findResourceFileInfo == find 返回值变函数参数(第二个)
class ResourceSchemeManager -> findGroupContainingResourceImpl == find
class ResourceSchemeManager -> findGroupContainingResource == find
class ResourceSchemeManager -> fireResourceGroupScriptingStarted 融入移去
class ResourceSchemeManager -> fireScriptStarted 融入移去
class ResourceSchemeManager -> fireScriptEnded 融入移去
class ResourceSchemeManager -> fireResourceGroupScriptingEnded 融入移去
class ResourceSchemeManager -> fireResourceGroupLoadStarted 融入移去
class ResourceSchemeManager -> fireResourceLoadStarted 融入移去
class ResourceSchemeManager -> fireResourceLoadEnded 融入移去
class ResourceSchemeManager -> fireResourceGroupLoadEnded 融入移去
class ResourceSchemeManager -> fireResourceGroupPrepareStarted 融入移去
class ResourceSchemeManager -> fireResourcePrepareStarted 融入移去
class ResourceSchemeManager -> fireResourceGroupPrepareEnded 融入移去
class ResourceSchemeManager -> findResourceLocation 无效移去
class ResourceSchemeManager -> listResourceLocations 无效移去
class ResourceSchemeManager -> listResourceFileInfo == list 返回值变函数参数(第二个)
class ResourceSchemeManager -> listResourceNames == list 返回值变函数参数(第二个)
class ResourceSchemeManager -> findResourceNames == find 返回值变函数参数(第二个)
class ResourceSchemeManager -> _notifyWorldGeometryStageStarted 无效移去
class ResourceSchemeManager -> _notifyWorldGeometryStageEnded 无效移去
class ResourceSchemeManager -> createDeclaredResources == setup
class ResourceSchemeManager -> createResource == createSrc
class ResourceSchemeManager -> deleteResource == deleteSrc
class ResourceSchemeManager -> deleteMatchingResources == deleteMatch
class ResourceSchemeManager -> getResourceLocationList 意义不大
class ResourceSchemeManager -> shutdownAll 融入到Engine移去
class ResourceSchemeManager -> addCreatedResource == add 2个函数换位
class ResourceSchemeManager -> declareResource == create
class ResourceSchemeManager -> undeclareResource == destroy
class ResourceSchemeManager -> mWorldGroupName == mEngineGroup
class ResourceSchemeManager -> getResourceDeclarationList == getResources 返回 ResourceIDs
class ResourceSchemeManager -> mResourceGroupListenerList == mListeners 融入到 GroupLoadScheme
class ResourceSchemeManager -> mLoadingListener == mListener
class ResourceSchemeManager -> mResourceManagerMap == mManagers
class ResourceSchemeManager -> getResourceGroups == getGroups
class ResourceSchemeManager -> ScriptLoaderOrderMap == ScriptLevels
class ResourceSchemeManager -> ResourceGroupMap == GroupList
class ResourceSchemeManager -> mScriptLoaderOrderMap == mScriptSysList
class ResourceSchemeManager -> mResourceGroupMap == mGroups
class ResourceSchemeManager -> ResourceDeclaration == ResDefine
class ResourceSchemeManager -> ResourceDeclarationList == DefineList
class ResourceSchemeManager -> RESOURCE_SYSTEM_NUM_REFERENCE_COUNTS 无用移去
class ResourceSchemeManager -> getResourceManagerIterator == getManagerList
class ResourceSchemeManager -> unlinkWorldGeometryFromResourceGroup 无用移去
class ResourceSchemeManager -> deleteGroup == destroy
class ResourceSchemeManager -> _notifyResourceCreated == onCreate
class ResourceSchemeManager -> _notifyResourceRemoved == onRemove
class ResourceSchemeManager -> _notifyResourceGroupChanged == onGroupChange
class ResourceSchemeManager -> _notifyAllResourcesRemoved == onAllRemove
class ResourceSchemeManager -> mCurrentGroup == mTemp
class ResourceSchemeManager -> parseResourceGroupScripts == parse
class ResourceSchemeManager -> linkWorldGeometryToResourceGroup 无用概念移去
class ResourceSchemeManager -> N_mutex1 无用移去
//--------------------------------------------------------------------------
class PixelCountQuery -> beginOcclusionQuery == beginRender
class PixelCountQuery -> endOcclusionQuery == endRender
class PixelCountQuery -> getLastQuerysPixelcount 无效移去
class PixelCountQuery -> isStillOutstanding == isRun
class PixelCountQuery -> pullOcclusionQuery == query
class PixelCountQuery -> mIsQueryResultStillOutstanding == mRun
class PixelCountQuery -> mPixelCount == mLast 分化到子类中
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
struct ResDefine -> resourceName == mID
struct ResDefine -> resourceType == mType
struct ResDefine -> loader == mLoadScheme
struct ResDefine -> parameters == mParams
//--------------------------------------------------------------------------
LoadUnloadResourceList == GroupResources
//--------------------------------------------------------------------------
struct ResourceGroup -> Status 改用 LoadingState
struct ResourceGroup -> Status -> UNINITIALSED == LS_UNSETUP
struct ResourceGroup -> Status -> INITIALISING == LS_SETUPING
struct ResourceGroup -> Status -> INITIALISED == LS_SETUPED
struct ResourceGroup -> Status -> LOADING == LS_LOADING
struct ResourceGroup -> Status -> LOADED == LS_LOADED
struct ResourceGroup -> name = mID
struct ResourceGroup -> groupStatus == mState
struct ResourceGroup -> locationList == mVFSList
struct ResourceGroup -> resourceIndexCaseSensitive == mCSFileList
struct ResourceGroup -> resourceIndexCaseInsensitive == mFileList
struct ResourceGroup -> resourceDeclarations == mDefines
struct ResourceGroup -> loadResourceOrderMap == mLoadList
struct ResourceGroup -> worldGeometry == mSpaceBody 无用概念
struct ResourceGroup -> worldGeometrySceneManager == mSpaceSM 无用概念
struct ResourceGroup -> inGlobalPool == mGlobal
struct ResourceGroup -> addToIndex == add
struct ResourceGroup -> removeFromIndex == remove 2个函数
struct ResourceGroup -> LoadResourceOrderMap == LoadLevel
//--------------------------------------------------------------------------
struct ResourceLocation 转成 list<std::pair<bool, VFS *>>::type
//--------------------------------------------------------------------------
class TimeIndex -> hasKeyIndex == isValid
//--------------------------------------------------------------------------

//--------------------------------------------------------------------------
class LoadSchemeManager -> initialiseResourceGroup == setup
class LoadSchemeManager -> initialiseAllResourceGroups == setupAll
class LoadSchemeManager -> prepareResourceGroup == plan
class LoadSchemeManager -> loadResourceGroup == load
class LoadSchemeManager -> unloadResourceGroup == unload
class LoadSchemeManager -> Listener 移去整个概念
class LoadSchemeManager -> prepare == plan
//--------------------------------------------------------------------------
class ArchiveManager -> addArchiveFactory == add
//--------------------------------------------------------------------------
struct FileInfo -> basename == mFileName
struct FileInfo -> path == mPath
struct FileInfo -> filename == mFullName
struct FileInfo -> compressedSize == mCompressSize
struct FileInfo -> uncompressedSize == mSize
struct FileInfo -> 加入 mMatchCase
//--------------------------------------------------------------------------
class VFS -> load -> 改 peek 概念
class VFS -> unload 移去
class VFS -> list 返回值放到函数参数一中
class VFS -> find 返回值放到函数参数一中
class VFS -> listFileInfo == list 返回值放到函数参数一中
class VFS -> findFileInfo == find 返回值放到函数参数一中
class VFS -> isCaseSensitive == isMatchCase
class VFS -> exists == isExist
//--------------------------------------------------------------------------
class VFSManager -> getArchiveIterator 融入移去
class VFSManager -> mArchFactories == mVFSList
class VFSManager -> mArchives == mVFSInsList
//--------------------------------------------------------------------------
class Vector2 -> squaredLength == lengthSquared
class Vector2 -> squaredDistance == distanceSquared
class Vector2 -> midPoint == middle
class Vector2 -> makeFloor == floor 体系改变
class Vector2 -> makeCeil == ceil 体系改变
class Vector2 -> normalisedCopy == normalise 体系改变
class Vector2 -> angleTo 无效移去
class Vector2 -> angleBetween == angle
class Vector2 -> perpendicular == vertical
class Vector2 -> isZeroLength 融入移去
class Vector2 -> isNaN 无用移去
class Vector2 -> randomDeviant == random
//--------------------------------------------------------------------------
class Vector3 -> squaredLength == lengthSquared
class Vector3 -> squaredDistance == distanceSquared
class Vector3 -> makeFloor == floor 体系改变
class Vector3 -> makeCeil == ceil 体系改变
class Vector3 -> normalisedCopy == normalise 体系改变
class Vector3 -> angleBetween == angle
class Vector3 -> perpendicular == vertical
class Vector3 -> isZeroLength 融入移去
class Vector3 -> isNaN 无用移去
class Vector3 -> randomDeviant == random 分化融入
class Vector3 -> primaryAxis 融入移去
class Vector3 -> absDotProduct 融入移去
class Vector3 -> positionCloses 融入移去
class Vector3 -> positionEquals == equal
class Vector3 -> getRotationTo == getRotation
----------------------------------------------------------------------------
class Vector4 -> isNaN 无用移去
//--------------------------------------------------------------------------
class PixelBlock -> data == mData
class PixelBlock -> format == mFormat
class PixelBlock -> rowPitch == mRowSize
class PixelBlock -> slicePitch == mSliceSize
class PixelBlock -> setConsecutive 融入移去
class PixelBlock -> getRowSkip == getRowOft
class PixelBlock -> getSubVolume == getSub
class PixelBlock -> getSliceSkip == getSliceOft
class PixelBlock -> setColourAt == setColour
class PixelBlock -> getColourAt == getColour 返回值放第一参数
class PixelBlock -> FILTER_NEAREST == F_Nearest
class PixelBlock -> FILTER_LINEAR == F_Linear
class PixelBlock -> FILTER_BILINEAR == F_Bilinear
----------------------------------------------------------------------------
class StrConvert -> toString == to 包含多个函数
class StrConvert -> parseReal == conv 返回值变参值
class StrConvert -> parseAngle == conv 返回值变参值
class StrConvert -> parseInt == conv 返回值变参值
class StrConvert -> parseUnsignedInt == conv 返回值变参值
class StrConvert -> parseLong == conv 返回值变参值
class StrConvert -> parseUnsignedLong == conv 返回值变参值
class StrConvert -> parseBool == conv 返回值变参值
class StrConvert -> parseVector2 == conv 返回值变参值
class StrConvert -> parseVector3 == conv 返回值变参值
class StrConvert -> parseVector4 == conv 返回值变参值
class StrConvert -> parseMatrix3 == conv 返回值变参值
class StrConvert -> parseMatrix4 == conv 返回值变参值
class StrConvert -> parseQuaternion == conv 返回值变参值
class StrConvert -> parseColourValue == conv 返回值变参值
class StrConvert -> parseStringVector == conv 返回值变参值
//--------------------------------------------------------------------------
class PlaneSpaceQuery -> setVolumes == setSpaceList
class PlaneSpaceQuery -> getVolumes == getSpaceList
class PlaneSpaceQuery -> mVolumes == mSpaceList
//--------------------------------------------------------------------------
class DefaultAABSpaceQuery -> AABSpaceQuery 融合
class DefaultSphereSpaceQuery -> SphereSpaceQuery 融合
class DefaultRaySpaceQuery -> RaySpaceQuery 融合
class DefaultPlaneSpaceQuery -> PlaneSpaceQuery 融合
class DefaultIntersectionSpaceQuery -> AreaSpaceQuery 融合
//--------------------------------------------------------------------------
class Buffer -> mShadowBuffer == mShadow
class Buffer -> _updateFromShadow == syncImpl
class Buffer -> readData == read 最后参数放到第一
class Buffer -> writeData == write 第三参数放到第一,移去最后参数
class Buffer -> getSizeInBytes == getSize
class Buffer -> suppressHardwareUpdate == setSync 反义
class Buffer -> mSizeInBytes == mSize
class Buffer -> mLockStart == mMuteOft
class Buffer -> mLockSize == mMuteSize
class Buffer -> mSuppressHardwareUpdate == mSync 反义 --> mMark 中的 M_SYN
class Buffer -> mUsage 概念转换为 mMark
class Buffer -> M_SHADOW == M_HOST 同行概念
class Buffer -> HBU_STATIC == Buffer::M_DEV
class Buffer -> HBU_DYNAMIC == M_READ | M_WRITE
class Buffer -> HBU_WRITE_ONLY == M_WRITE & ~M_READ
class Buffer -> HBU_DISCARDABLE == M_WHOLE
class Buffer -> HBU_STATIC_WRITE_ONLY == Buffer::M_DEVWRITE
class Buffer -> HBU_DYNAMIC_WRITE_ONLY == M_WRITE
class Buffer -> HBU_DYNAMIC_WRITE_ONLY_DISCARDABLE == M_WRITE | M_WHOLE
class Buffer -> Usage == Mode
class Buffer -> getUsage == getModeMark
class Buffer -> copyData == write 2个函数 移去最后参数 第一参数改指针(原来是引用)
class Buffer -> isSystemMemory mSystemMemory 概念转为 isSupport mMark
class Buffer -> hasShadowBuffer mUseShadowBuffer 概念转为 isSupport mMark
class Buffer -> mIsLocked 概念转为 isSupport mMark
class Buffer -> Buffer() 移去最后2个参数 概念转为 mMark
class Buffer -> isLocked == isMapping
class Buffer -> LockOptions == MuteMode
class Buffer -> lock == 第三参数提前
class Buffer -> lockImpl == 第三参数提前
class Buffer -> mCurrentLock == mMutexData
class Buffer -> mLockedBox == mMutexArea
class Buffer -> mShadowUpdated 融入到 mMark 中
class Buffer -> HBL_NORMAL == MM_READ | MM_WRITE
class Buffer -> HBL_DISCARD == MM_WHOLE | MM_WRITE
class Buffer -> HBL_READ_ONLY == MM_READ
class Buffer -> HBL_NO_OVERWRITE == MM_WRITE
//--------------------------------------------------------------------------
class Quaternion -> Slerp == slerp
class Quaternion -> Norm == Slength
class Quaternion -> Dot == dot
class Quaternion -> FromRotationMatrix == from
class Quaternion -> ToRotationMatrix == to
class Quaternion -> FromAngleAxis == from
class Quaternion -> ToAngleAxis == to
class Quaternion -> FromAxes == from 2个函数
class Quaternion -> ToAxes == to 2个函数
class Quaternion -> to(Angle &, Vector3<> &) const 使用 to(Radian &, Vector3<> &) const 代替
class Quaternion -> from(const Angle &, const Angle &, const Angle &) 使用
    from(const Radian &, const Radian &, const Radian &) 代替
class Quaternion -> Quaternion(const Vector3<> &, const Vector3<> &, const Vector3<> &) 移去 from
class Quaternion -> Quaternion(const Radian &, const Radian &, const Radian &) 移去 from
class Quaternion -> Quaternion(const Matrix3<> &) 移去 from
class Quaternion -> Quaternion(const Radian &, const Vector3<> &) 移去 from
class Quaternion -> Quaternion(const Vector3<> *) 移去 from
class Quaternion -> Quaternion(NIIf * obj) 移去
class Quaternion -> xAxis == getXAxis
class Quaternion -> yAxis == getYAxis
class Quaternion -> zAxis == getZAxis
class Quaternion -> Log == Ln
class Quaternion -> SlerpExtraSpins == slerp
class Quaternion -> Squad == squad
class Quaternion -> Intermediate 无效移去
class Quaternion -> UnitInverse  == inverseUnit
//--------------------------------------------------------------------------
class Matrix3 -> Transpose == T
class Matrix3 -> SetColumn == set
class Matrix3 -> GetColumn == get
class Matrix3 -> ProjectVector == project
class Matrix3 -> Determinant == det
class Matrix3 -> SingularValueDecomposition == SVD
class Matrix3 -> SingularValueComposition == SVC
class Matrix3 -> EigenSolveSymmetric Tridiagonal QLAlgorithm 无用移去
class Matrix3 -> SpectralNorm MaxCubicRoot 无用移去
class Matrix3 -> msSvdEpsilon == #define SvdEpsilon
class Matrix3 -> msSvdMaxIterations == #define SvdMaxIterations
class Matrix3 -> QDUDecomposition == getQDU
class Matrix3 -> TensorProduct 无效移去
class Matrix3 -> ToAngleAxis == to 保留一个函数
class Matrix3 -> FromAngleAxis == from
//--------------------------------------------------------------------------
class Matrix4 -> transpose == T
class Matrix4 -> determinant == det
class Matrix4 -> makeTrans == TranslationMatrix4
class Matrix4 -> static getTrans == TranslationMatrix4
class Matrix4 -> static getScale == ScaleMatrix4
class Matrix4 -> extract3x3Matrix == class Matrix3 operator =(class Matrix4 &)
class Matrix4 -> hasScale == isScale
class Matrix4 -> hasNegativeScale == isNegativeScale
class Matrix4 -> extractQuaternion 无效移去
class Matrix4 -> decomposition == get
class Matrix4 -> concatenateAffine == affine
class Matrix4 -> transformAffine 2函数 == affine
class Matrix4 -> makeTransform == 构造函数
//--------------------------------------------------------------------------
class DataStream 加入 cloneData 概念
class DataStream -> eof == end
class DataStream -> operator >> 移去
class DataStream -> getLine == readLine
class DataStream -> mAccess == mMode
class DataStream -> getAsString 使用 cloneData 代替
//--------------------------------------------------------------------------
class MemStream -> getPtr == getData
class MemStream -> getCurrentPtr == getPos
class MemStream -> setFreeOnClose == setAutoFree
class MemStream -> mFreeOnClose == AM_CLOSE
//--------------------------------------------------------------------------
class FileDataStream -> determineAccess 融入移去
class FileDataStream -> mInStream == mIStream
class FileDataStream -> mFStream == mStream
class FileDataStream -> mAutoFree == AM_CLOSE
class FileDataStream -> mFStreamRO 使用 mIStream代替
//--------------------------------------------------------------------------
class DynamicModule -> dynlibError == getLastError
//--------------------------------------------------------------------------
class FileHandleStream -> mFileHandle == mHandle
//--------------------------------------------------------------------------
class Serializer -> 移去 flipToLittleEndian 概念化到 flip 3 4个参数
class Serializer -> 移去 flipFromLittleEndian 概念化到 flip 3 4个参数
class Serializer -> flipEndian 2个参数 == mirror
class Serializer -> writeFloats == write 2个函数
class Serializer -> writeShorts == write
class Serializer -> writeInts == write
class Serializer -> writeBools == write
class Serializer -> writeBytes == write
class Serializer -> writeObject == write
class Serializer -> writeString == write
class Serializer -> writeData == write
class Serializer -> readBools == read 改为2个参数
class Serializer -> readBytes == read 改为2个参数
class Serializer -> readFloats == read 2个函数 改为2个参数
class Serializer -> readShorts == read 改为2个参数
class Serializer -> readInts == read 改为2个参数
class Serializer -> readObject == read 改为2个参数
class Serializer -> readString == read 2个函数 改为2个参数
class Serializer -> ENDIAN_NATIVE == E_Native
class Serializer -> ENDIAN_BIG == E_B
class Serializer -> ENDIAN_LITTLE == E_L
//--------------------------------------------------------------------------
class MaterialCameraLodScheme -> setReferenceView == setOriArea
class MaterialCameraLodScheme -> setReferenceViewEnabled == setRefArea
class MaterialCameraLodScheme -> getReferenceViewEnabled == isRefArea
class MaterialCameraLodScheme -> mReferenceViewEnabled == mRelation
class MaterialCameraLodScheme -> mReferenceViewValue == mRefArea
//--------------------------------------------------------------------------
class MeshCameraLodScheme -> setReferenceView == setOriArea
class MeshCameraLodScheme -> setReferenceViewEnabled == setRefArea
class MeshCameraLodScheme -> getReferenceViewEnabled == isRefArea
class MeshCameraLodScheme -> mReferenceViewEnabled == mRelation
class MeshCameraLodScheme -> mReferenceViewValue == mRefArea
//--------------------------------------------------------------------------
N_PLAT == N_PLAT
NII_PLATFORM_WIN32 == N_PLAT_WIN32
NII_PLATFORM_WINRT == N_PLAT_WINRT
NII_PLATFORM_LINUX == N_PLAT_LINUX
NII_PLATFORM_LINUX_X == N_PLAT_LINUX_X
NII_PLATFORM_OSX == N_PLAT_OSX
NII_PLATFORM_SYMBIAN == N_PLAT_SYMBIAN
NII_PLATFORM_IOS == N_PLAT_IOS
NII_PLATFORM_ANDROID == N_PLAT_ANDROID
//--------------------------------------------------------------------------
class PlatformInformation::CPU_FEATURE_SSE == CF_SSE
class PlatformInformation::CPU_FEATURE_SSE2 == CF_SSE2
class PlatformInformation::CPU_FEATURE_SSE3 == CF_SSE3
class PlatformInformation::CPU_FEATURE_SSSE3 == CF_SSSE3
class PlatformInformation::CPU_FEATURE_SSE4 == CF_SSE4
class PlatformInformation::CPU_FEATURE_SSE42 == CF_SSE42
class PlatformInformation::CPU_FEATURE_MMX == CF_MMX
class PlatformInformation::CPU_FEATURE_MMX2 == CF_MMX2
class PlatformInformation::CPU_FEATURE_3DNOW == CF_3DNOW
class PlatformInformation::CPU_FEATURE_3DNOWEXT == CF_3DNOWEXT
class PlatformInformation::CPU_FEATURE_CMOV == CF_CMOV
class PlatformInformation::CPU_FEATURE_TSC == CF_TSC
class PlatformInformation::CPU_FEATURE_FPU == CF_FPU
class PlatformInformation::CPU_FEATURE_PRO == CF_PRO
class PlatformInformation::CPU_FEATURE_HTT == CF_HTT
class PlatformInformation::CPU_FEATURE_ALTIVEC == CF_ALTIVEC
class PlatformInformation::CPU_FEATURE_VFP == CF_VFP
class PlatformInformation::CPU_FEATURE_NEON == CF_NEON
class PlatformInformation::CPU_FEATURE_NONE == CF_NONE
class PlatformInformation -> getCpuIdentifier == getIdentifier
class PlatformInformation -> getCpuFeatures 移去
class PlatformInformation -> hasCpuFeature == isSupport
//--------------------------------------------------------------------------
class MemoryTracker -> setReportFileName == setFile
class MemoryTracker -> getReportFileName == getFile
class MemoryTracker -> setReportToStdOut == setStdOut
class MemoryTracker -> getReportToStdOut == getStdOut
class MemoryTracker -> getTotalMemoryAllocated == getTotal
class MemoryTracker -> getMemoryAllocatedForPool == getTotal
class MemoryTracker -> setRecordEnable == setEnable
class MemoryTracker -> getRecordEnable == getEnable
class MemoryTracker -> reportLeaks == report
//--------------------------------------------------------------------------
class ExtData -> Attributes -> mKeylessAny == mData
class ExtData -> Attributes -> mUserObjectsMap == mDatas
class ExtData -> Attributes getEmptyUserAny 移去
class ExtData -> setUserAny == setExtData
class ExtData -> getUserAny == getExtData
class ExtData -> mAttributes == mDataList
//--------------------------------------------------------------------------
class Singleton -> getSingleton == getOnly
class Singleton -> getSingletonPtr == getOnlyPtr
//--------------------------------------------------------------------------
class GeometrySpaceShadowVolume -> mCurrentVertexData == mVertexData
class GeometrySpaceShadowVolume -> mOriginalPosBufferBinding == mPBufferSrc
class GeometrySpaceShadowVolume -> mPositionBuffer == mPBuffer
class GeometrySpaceShadowVolume -> _createSeparateLightCap == createLightCap
class GeometrySpaceShadowVolume -> rebindPositionBuffer == rebindPosBuffer
//--------------------------------------------------------------------------
class AnimationStateControllerValue -> mTargetAnimationState == mTargetFusion
//--------------------------------------------------------------------------
class InstancedEntity -> mSkeletonInstance == mSkeleton
//--------------------------------------------------------------------------
class InstancedObject -> mSkeletonInstance == mSkeleton
//--------------------------------------------------------------------------
class InstancedGeometry -> mSkeletonInstance == mSkeleton
//--------------------------------------------------------------------------
class NedAllocPolicy 改名 class NedAlloc
class NedAlignedAllocPolicy 改名 class NedAlignAlloc
class NedPoolingPolicy 改名 class NedPoolAlloc
class NedPoolingAlignedPolicy 改名 class NedPoolAlignAlloc
class StdAllocPolicy 改名 class StdAlloc
class StdAlignedAllocPolicy 改名 class StdAlignAlloc
//--------------------------------------------------------------------------
enum MemoryCategory MEMCATEGORY_GENERAL == MC_GENERAL
enum MemoryCategory MEMCATEGORY_GEOMETRY == MC_GEOMETRY
enum MemoryCategory MEMCATEGORY_ANIMATION == MC_ANIMATION
enum MemoryCategory MEMCATEGORY_SCENE_CONTROL == MC_SCENE_CONTROL
enum MemoryCategory MEMCATEGORY_SCENE_OBJECTS == MC_SCENE_OBJECTS
enum MemoryCategory MEMCATEGORY_RESOURCE == MC_RESOURCE
enum MemoryCategory MEMCATEGORY_SCRIPTING == MC_SCRIPTING
enum MemoryCategory MEMCATEGORY_RENDERSYS == MC_RENDERSYS
enum MemoryCategory MEMCATEGORY_COUNT == MC_COUNT

GeneralAllocPolicy == GeneralAlloc
GeometryAllocPolicy == GeometryAlloc
AnimationAllocPolicy == AnimationAlloc
SceneCtlAllocPolicy == SceneCtlAlloc
SceneObjAllocPolicy == SceneObjAlloc
ResourceAllocPolicy == ResourceAlloc
ScriptingAllocPolicy == ScriptingAlloc
RenderSysAllocPolicy == RenderSysAlloc
AllocatedObject == AllocObj
GeneralAllocatedObject == GeneralAllocObj
GeometryAllocatedObject == GeometryAllocObj
AnimationAllocatedObject == AnimationAllocObj
SceneCtlAllocatedObject == SceneCtlAllocObj
SceneObjAllocatedObject == SceneObjAllocObj
ResourceAllocatedObject == ResourceAllocObj
ScriptingAllocatedObject == ScriptingAllocObj
RenderSysAllocatedObject == RenderSysAllocObj
GeneralAlignAllocPolicy == GeneralAlignAlloc
GeometryAlignAllocPolicy == GeometryAlignAlloc 移去
AnimationAlignAllocPolicy == AnimationAlignAlloc
SceneCtlAlignAllocPolicy == SceneCtlAlignAlloc
SceneObjAlignAllocPolicy == SceneObjAlignAlloc 移去
ResourceAlignAllocPolicy == ResourceAlignAlloc 移去
ScriptingAlignAllocPolicy == ScriptingAlignAlloc
RenderSysAlignAllocPolicy == RenderSysAlignAlloc 移去
GeneralAlignAllocatedObject == GeneralAlignAllocObj
GeometryAlignAllocatedObject == GeometryAlignAllocObj
AnimationAlignAllocatedObject == AnimationAlignAllocObj
SceneCtlAlignAllocatedObject == SceneCtlAlignAllocObj
SceneObjAlignAllocatedObject == SceneObjAlignAllocObj
ResourceAlignAllocatedObject == ResourceAlignAllocObj
ScriptingAlignAllocatedObject == ScriptingAlignAllocObj
RenderSysAlignAllocatedObject == RenderSysAlignAllocObj
constructN == NewArray

NII_MALLOC == N_alloc
NII_REALLOC == N_realloc
NII_ALLOC_T == N_alloc_t
NII_FREE == N_free
NII_NEW_T == N_new_t
NII_NEW_ARRAY_T == N_new_array_t
NII_DELETE_T == N_delete_t
NII_DELETE_ARRAY_T == N_delete_array_t
NII_MALLOC_SIMD == N_alloc_simd
NII_MALLOC_ALIGN == N_alloc_align
NII_REALLOC_ALIGN == N_realloc_align
NII_ALLOC_T_SIMD == N_alloc_t_simd
NII_ALLOC_T_ALIGN == N_alloc_t_align
NII_FREE_SIMD == N_free_simd
NII_FREE_ALIGN == N_free_align
NII_NEW_T_SIMD == N_new_t_simd
NII_NEW_ARRAY_T_SIMD == N_new_array_t_simd
NII_DELETE_T_SIMD == N_delete_t_simd
NII_DELETE_ARRAY_T_SIMD == N_delete_array_t_simd
NII_NEW_T_ALIGN == N_new_t_align
NII_NEW_ARRAY_T_ALIGN == N_new_array_t_align
NII_DELETE_T_ALIGN == N_delete_t_align
NII_DELETE_ARRAY_T_ALIGN == N_delete_array_t_align
NII_NEW == N_new
NII_DELETE == N_delete
NII_THREAD_PROVIDER == N_THREAD
//--------------------------------------------------------------------------
class Colour -> getAsRGBA == getRGBA OK
class Colour -> getAsARGB == getARGB OK
class Colour -> getAsBGRA == getBGRA OK
class Colour -> getAsABGR == getABGR OK
class Colour -> setAsRGBA == setRGBA OK
class Colour -> setAsARGB == setARGB OK
class Colour -> setAsBGRA == setBGRA OK
class Colour -> setAsABGR == setABGR OK
class Colour -> setHSB == setHSL OK
class Colour -> getHSB == getHSL OK
class Colour -> saturate == clamp OK
class Colour -> saturateCopy 融入移去 OK
//--------------------------------------------------------------------------
class ParticleEffectFactory -> getName == getID
class ParticleEffectFactory -> createAffector == create
class ParticleEffectFactory -> destroyAffector == destroy
class ParticleEffectFactory -> mAffectors == mList
//--------------------------------------------------------------------------
class SpreadParticleFactory -> getName == getID
class SpreadParticleFactory -> createEmitter == create
class SpreadParticleFactory -> destroyEmitter == destroy
class SpreadParticleFactory -> mEmitters == mList
//--------------------------------------------------------------------------
class Exception 移去 getNumber
class Exception 移去 number
class Exception -> getFullDescription == getErrorVerbose
class Exception -> line == mLine
class Exception -> typeName == mType
class Exception -> description == mDescrip
class Exception -> source == mSrc
class Exception -> file == mFile
class Exception -> fullDesc == mFullDescrip
//--------------------------------------------------------------------------
class TextureBlend -> blendType == mColourType
class TextureBlend -> operation == mOP
class TextureBlend -> source1 == mColourSrc1
class TextureBlend -> source2 == mColourSrc2
class TextureBlend -> colourArg1 == mConstant1
class TextureBlend -> colourArg2 == mConstant2
class TextureBlend -> alphaArg1 融入到 mConstant1.a
class TextureBlend -> alphaArg2 融入到 mConstant2.a
class TextureBlend -> factor == mConstantFactor
class TextureBlend -> setColourOperation == setColourBlend
class TextureBlend -> setColourOperationEx == 分解成各种 setBlend
class TextureBlend -> setAlphaOperation == 分解成各种 setBlend
//--------------------------------------------------------------------------
class AlignedMemory -> allocate == alloc
calss AlignedMemory -> deallocate == dealloc
//--------------------------------------------------------------------------
class SpaceTypeFactory -> createInstance == create
class SpaceTypeFactory -> destroyInstance == destroy
class SpaceTypeFactory -> getMetaData == getVerbose
class SpaceTypeFactory -> initMetaData == getVerboseImpl
class SpaceTypeFactory -> mMetaDataInit == mVerboseValid 反义
class SpaceTypeFactory -> mMetaData == mVerbose
//--------------------------------------------------------------------------
class SpaceTypeManager -> getMetaData == getVerbose
class SpaceTypeManager -> setRenderSystem == setRender
class SpaceTypeManager -> getMetaDataIterator 无用移去
class SpaceTypeManager -> createSceneManager == createSpace
class SpaceTypeManager -> getSceneManager == getSpace
class SpaceTypeManager -> hasSceneManager == isSpaceExist
class SpaceTypeManager -> shutdownAll == destroyAll
class SpaceTypeManager -> getSceneManagerIterator == getSpaceList
class SpaceTypeManager -> mFactories == mFactoryList
class SpaceTypeManager -> mInstances == mSpaceList
class SpaceTypeManager -> mMetaDataList == mSpaceTypeList
class SpaceTypeManager -> mInstanceCreateCount == mCount
class SpaceTypeManager -> mCurrentRenderSystem == mRenderSys
class SpaceTypeManager -> mDefaultFactory 融入移去
//--------------------------------------------------------------------------
class ShaderChProgram -> _updateAutoParams == _update
class ShaderChProgram -> mGpuProgramChangeMutex 移去概念
//--------------------------------------------------------------------------
class Radian -> valueRadians == getValue
class Radian -> mRad == mValue
class Radian -> valueDegrees == getDegree
class Radian -> valueAngleUnits 无效移去
//--------------------------------------------------------------------------
class Angle -> valueDegrees == getValue
class Angle -> mDeg == mValue
class Angle -> valueRadians == getRadian
class Angle -> valueAngleUnits 无效移去
//--------------------------------------------------------------------------
class Math -> setAngleUnit 无效移去
class Math -> getAngleUnit 无效移去
class Math -> AngleUnitsToRadians 无效移去
class Math -> RadiansToAngleUnits 无效移去
class Math -> AngleUnitsToDegrees 无效移去
class Math -> DegreesToAngleUnits 无效移去
class Math -> DegreesToRadians -> Angle
class Math -> RadiansToDegrees -> Radian
class Math -> UnitRandom == randomf
class Math -> 加入 randomi
class Math -> Sqrt == sqrt
class Math -> InvSqrt == invSqrt
class Math -> mTrigTableSize == mTriMapSize
class Math -> mTrigTableFactor == mTriMapFactor
class Math -> buildTrigTables == setupTriTable
class Math -> buildSqrtTables == setupSqrtTable
class Math -> AngleUnit AU_DEGREE AU_RADIAN msAngleUnit 移去概念
class Math -> RangeRandom == random
class Math -> FloatEqual == isEqual
class Math -> SymmetricRandom == randomNegPos
class Math -> IsPowerOfTwo == isPowOfTwo
class Math -> SinTable == sinTable
class Math -> TanTable == tanTable
class Math -> calculateTangentSpaceVector == calcTangent 移动到 Mesh
class Math -> buildReflectionMatrix == getReflect 移动到 Plane
class Math -> boundingRadiusFromAABB == calcRadius 移动到 AABox
class Math -> calculateBasicFaceNormal 融入移去
class Math -> calculateBasicFaceNormalWithoutNormalize 融入移去
class Math -> makeViewMatrix == calcView 融入移动到 Frustum
class Math -> calculateFaceNormal == calcNormals 移动到 Mesh
class Math -> calculateFaceNormalWithoutNormalize 融入移去
class Math -> gaussianDistribution == normalDistribution 移去
class Math -> Clamp 函数移出外部
class Math -> pointInTri2D == isInTriangle 移动到 Vector2
class Math -> pointInTri3D == isInTriangle 移动到 Vector3
class Math -> intersects == 所有第一参数为 const Ray & 的移到 Ray 类
class Math -> intersects == 第一参数为 const Sphere & 的移到 Sphere 类
class Math -> intersects == 第一参数为 const Plane & 的移到 Plane 类
//--------------------------------------------------------------------------
class NedAllocImpl NedPoolAlloc -> allocBytes == alloc
class NedAllocImpl NedPoolAlloc -> deallocateBytes == dealloc
class NedAllocImpl NedPoolAlloc -> allocBytesAligned == allocAligned
class NedAllocImpl NedPoolAlloc -> deallocBytesAligned == deallocAligned

//--------------------------------------------------------------------------
class Resource -> class Listener -> backgroundLoadingComplete == onSchemeLoadEnd 移去概念
class Resource -> class Listener -> backgroundPreparingComplete == onSchemePlanEnd 移去概念
class Resource -> class Listener -> loadingComplete == onLoadEnd
class Resource -> class Listener -> preparingComplete == onPlanEnd
class Resource -> class Listener -> unloadingComplete == unLoaded
class Resource -> changeGroupOwnership = setGroup
class Resource -> enum LoadingState -> LOADSTATE_ == LS_
class Resource -> ResourceCreateOrRetrieveResult == TouchResult
class Resource -> getName == getOriginID
class Resource -> mIsBackgroundLoaded 融入到 mLoader 中
class Resource -> mIsManual 移去 mLoader 已经含概
class Resource -> mGroup 原 String 改成 GroupID 类型
class Resource -> 加入 OriginSize 概念 用于描述原始资源大小
class Resource -> 概念迁移, 涉及下面的所有子类,从前的 Resource 的 mName 一般描述的是
    文件名字,现在文件都应该是从.niiengine文件中加载的,移去 mName,再添加一个 mOriginID
    ,mSrc 则保存文件的来源(如xx.png xx.jpeg普通文件名字或脚本文件)[[[[大迁移]]]]]
class Resource -> mLoadingState == mState
class Resource::Listener == ResourceListener
class Resource::构造函数并不需要Manager 参数 因为 Manager 必定是惟独的
class Resource -> prepare == plan
class Resource -> isLoaded == isLoad
class Resource -> prepareImpl == planImpl
class Resource -> unprepareImpl == unplanImpl
class Resource -> mHandle = mPrc
class Resource -> getHandle == getPrc
class Resource -> _notifyOrigin == setSrc
class Resource -> getOrigin == getSrc
class Resource -> isBackgroundLoaded == isSchemeLoad 概念移去 get(ResLoadScheme
class Resource -> setBackgroundLoaded == setSchemeLoad 概念移去 set(ResLoadScheme
class Resource -> escalateLoading 无效移去
class Resource -> _fireUnloadingComplete 融入移去
class Resource -> getStateCount == getNotifyCount
class Resource -> mStateCount == mNotifyCount
class Resource -> _dirtyState == notify
class Resource -> mListenerListMutex 移去概念
class Resource -> preLoadImpl preUnloadImpl 概念移去
class Resource -> postLoadImpl == loadEndImpl
class Resource -> postUnloadImpl == unloadEndImpl
class Resource -> isPrepared isLoad 移去概念
class Resource -> getLoadingState == getState
class Resource -> isManuallyLoaded 融入移去
//--------------------------------------------------------------------------
class ResLoadScheme -> prepareResource == plan
class ResLoadScheme -> loadResource == load
//--------------------------------------------------------------------------
struct UVWAddressingMode -> u == mS_U
struct UVWAddressingMode -> v == mT_V
struct UVWAddressingMode -> w == mR_W
//--------------------------------------------------------------------------
class FactoryObj 类改成 非模版 并具有创建功能
//--------------------------------------------------------------------------
class RenderSys ->initConfigOptions == setupConfig
class RenderSys -> createHardwareOcclusionQuery == create(PixelCountQuery *&)
class RenderSys -> destroyHardwareOcclusionQuery == destroy
class RenderSys -> validateConfigOptions == checkConfig
class RenderSys -> reinitialise == reinit
class RenderSys -> setWBufferEnabled == setWBuffer
class RenderSys -> getWBufferEnabled == getWBuffer
class RenderSys -> _createRenderWindow == createWindow
class RenderSys -> _createRenderWindows  == createWindow
class RenderSys -> destroyRenderTarget == destroyFrame
class RenderSys -> destroyRenderWindow destroyRenderTexture 使用 destroyFrame
class RenderSys -> attachRenderTarget == add(FrameObj & 改 add(FrameObj *
class RenderSys -> detachRenderTarget == remove(const String & 改 remove(const FrameObj *
class RenderSys -> getGlobalInstanceVertexBuffer == getInstanceBuffer
class RenderSys -> setGlobalInstanceVertexBuffer == setInstanceData
class RenderSys -> getGlobalInstanceVertexBufferVertexDeclaration == getInstanceData
class RenderSys -> setGlobalInstanceVertexBufferVertexDeclaration == setInstanceData
class RenderSys -> getGlobalNumberOfInstances == getInstanceCount
class RenderSys -> setGlobalNumberOfInstances == setInstanceCount
class RenderSys -> setFixedPipelineEnabled == setFixedPipelineMode
class RenderSys -> getFixedPipelineEnabled == isFixedPipelineMode
class RenderSys -> areFixedFunctionLightsInViewSpace == isFixedLightsView 概念移去
class RenderSys -> _setPointSpritesEnabled 融入移去
class RenderSys -> _setSceneBlending 融入移去
class RenderSys -> _setTextureCoordCalculation == _setTextureCoordPrc
class RenderSys -> _setDepthBufferCheckEnabled == _setDepthCheck(true) 移去
class RenderSys -> _setDepthBufferWriteEnabled == _setDepthWrite(true) 移去
class RenderSys -> setStencilCheckEnabled == setStencilTest
class RenderSys -> bindGpuProgramParameters == on
class RenderSys -> updatePassIterationRenderState == updateParam 虚化
class RenderSys -> bindGpuProgramPassIterationParameters 融入到 updateParam
class RenderSys -> _setRenderTarget == _setFrame
class RenderSys -> setVertexDeclaration == set 融入移去
class RenderSys -> setVertexBufferBinding == set 融入移去
class RenderSys -> mActiveVertexGpuProgramParameters == mActiveVGPP
class RenderSys -> mActiveGeometryGpuProgramParameters == mActiveGGPP
class RenderSys -> mActiveFragmentGpuProgramParameters == mActiveFGPP
class RenderSys -> mPrioritisedRenderTargets == mFrameObjList
class RenderSys -> mManualBlendColours == mTextureBlend
class RenderSys -> bindGpuProgram == on
class RenderSys -> unbindGpuProgram == off
class RenderSys -> isGpuProgramBound == isOn
class RenderSys -> _setSurfaceParams _setSurfaceTracking == setColour(const ShaderChColour & c)
class RenderSys -> _setFog == setFog(const ShaderChFog & f)
class RenderSys -> _setPointParameters == setPoint(const ShaderChPoint & p)
class RenderSys -> _setSeparateSceneBlending == setBlend(const ShaderChBlend & b)
class RenderSys -> _setDepthBufferParams == setDepth(const ShaderChDepth & b);
class RenderSys -> _setColourBufferWriteEnabled == setColourWrite(Nmark mark)
class RenderSys -> setWaitForVerticalBlank == setVSync
class RenderSys -> getWaitForVerticalBlank == isVSync
class RenderSys -> createRenderSystemCapabilities == setupFeature 与 mFeature; 挂钩
class RenderSys -> useCustomRenderSystemCapabilities == setCustomFeature
class RenderSys -> getMutableCapabilities == getCustomFeature {return mFeature; } 无用移去
class RenderSys -> getCapabilities == getFeature
class RenderSys -> setAmbientLight == setAmbient 改 const Colour & 参数
class RenderSys -> _setProjectionMatrix == _setProj
class RenderSys -> _setViewMatrix == _setView
class RenderSys -> _setWorldMatrix == _setModel
class RenderSys -> _setWorldMatrices == _setSpace
class RenderSys -> getRenderTarget 无用移去
class RenderSys -> _initialise == init
class RenderSys -> createMultiRenderTarget == createMultiFrame
class RenderSys -> RenderTargetIterator getRenderTargetIterator 无用移去
class RenderSys -> setDepthBufferFor == createExtBuffer
class RenderSys -> _useLights == _setLight
class RenderSys -> _setAlphaRejectSettings == setAlpha
class RenderSys -> _setTextureUnitSettings == _enableTexture
class RenderSys -> _disableTextureUnitsFrom == _enableTexture
class RenderSys -> _disableTextureUnit == _disableTexture
class RenderSys -> _setTexture == _bindTexture 2函数
    const TexturePtr & 改 const TexturePtr * 第二参数和第三数位置交换
class RenderSys -> _setVertexTexture == _bindVertexTexture
    const TexturePtr & 改 const TexturePtr *
class RenderSys -> _setTextureUnitFiltering == _setTextureFilter
class RenderSys -> _setTextureBlendMode == _setTextureBlend
class RenderSys -> _setTextureAddressingMode == _setTextureAddressing
class RenderSys -> _setTextureProjectionRelativeTo == _setTextureProjRel
class RenderSys -> _beginGeometryCount == _resetGeoCount
class RenderSys -> _createDepthBufferFor == createExtFrameImpl
class RenderSys -> _cleanupDepthBuffers == destroyAllExtBuffer
class RenderSys -> _setTextureLayerAnisotropy == _setTextureAniso
class RenderSys -> _getVertexCount == getVertexCount
class RenderSys -> _getFaceCount == getTriangleCount
class RenderSys -> _getBatchCount == getBatchCount
class RenderSys -> _setDepthBufferFunction == _setDepthOpFunc
class RenderSys -> setDeriveDepthBias == _setDepthBias
class RenderSys -> convertColourValue == convertType
class RenderSys -> setStencilBufferParams == setStencil 分离出 ShaderChStencil
    第七参数 放第一 and 第四参数 放第二
class RenderSys -> clearFrameBuffer == clearBuffer
class RenderSys -> _convertProjectionMatrix == getSysProj
class RenderSys -> _makeProjectionMatrix == getSysProj 2函数
class RenderSys -> _makeOrthoMatrix == getSysOrtho
class RenderSys -> _applyObliqueDepthProjection == getObliqueDepthProj 第二参数放第一
class RenderSys -> _initRenderTargets == _initAllFrame
class RenderSys -> _updateAllRenderTargets == _updateAllFrame
class RenderSys -> _swapAllRenderTargetBuffers == _swapAllFrame
class RenderSys -> _getDefaultViewportMaterialScheme == getMaterialScheme
class RenderSys -> mDepthBufferPool == mExtFrameList
class RenderSys -> mDriverVersion == mVersion
class RenderSys -> mActiveRenderTarget == mActiveFrame
class RenderSys -> mFaceCount == mTriangleCount
class RenderSys -> mGlobalInstanceVertexBuffer == mInstanceBuffer
class RenderSys -> mGlobalInstanceVertexBufferVertexDeclaration == mInstanceData
class RenderSys -> mGlobalNumberOfInstances == mInstanceCount
class RenderSys -> add(Listener remove(Listener Listener Listeners mEventNames
    fireEvent mEventListeners getRenderSystemEvents   ==  mEventListenerList
class RenderSys -> mCurrentPassIterationCount == mRenderCount
class RenderSys -> mHwOcclusionQueries == mPixelQueryList
class RenderSys -> setCurrentPassIterationCount == setRenderCount
class RenderSys -> mCurrentPassIterationNum == mCurrentRender
class RenderSys -> mRealCapabilities == mVendorFeature
class RenderSys -> mCurrentCapabilities == mFeature
class RenderSys -> initialiseFromRenderSystemCapabilities == initImpl 第一参数直接用
    mFeature 代替 第二参数改成 const ViewWindow *
class RenderSys -> RenderSystemContext 移去概念 改 FrameObj 概念
class RenderSys -> _pauseFrame 返回 改 FrameObj 对象
class RenderSys -> _resumeFrame 参数 改 FrameObj 对象
class RenderSys -> _notifyCameraRemoved == _notifyDestroy
class RenderSys -> getInvertVertexWinding == isInvertVertexWinding
class RenderSys -> getVerticalTexelOffset == getTexelYOffset
class RenderSys -> getHorizontalTexelOffset == getTexelXOffset
class RenderSys -> getMinimumDepthInputValue == getMinDepth
class RenderSys -> getMaximumDepthInputValue == getMaxDepth
class RenderSys -> mDisabledTexUnitsFrom == mEnableTexCount
class RenderSys -> preExtraThreadsStarted postExtraThreadsStarted
    registerThread unregisterThread 无效移去
class RenderSys -> CLIPSPACE2DTOIMAGESPACE == ProjClipSpace2DToImageSpace
class RenderSys -> mTexProjRelativeOrigin == mTextureProjRel
class RenderSys -> mDerivedDepthBias == mAutoDepthBias
class RenderSys -> mDerivedDepthBiasBase == mDepthBiasBase
class RenderSys -> mDerivedDepthBiasMultiplier == mDepthBiasFactor
class RenderSys -> mDerivedDepthBiasSlopeScale == mDepthBiasSlopeScale

class RenderSys -> mVertexProgramBound == mVPMode
class RenderSys -> mGeometryProgramBound == mGPMode
class RenderSys -> mFragmentProgramBound == mFPMode
class RenderSys -> mUseCustomCapabilities == mSysFeatureValid 反义
class RenderSys -> mClipPlanesDirty == mClipValid 反义

class RenderSys -> _setTextureMipmapBias _setTextureFilter _setTextureAniso
    _setTextureAddressing _setTextureBorderColour (到TextureSample)
    
class RenderSys -> initFixedFunctionParams getFixedFunctionParams mFixedFunctionParams == setupFFPParam getFFPParam mFFGPP
class RenderSys -> applyFixedFunctionParams == setFFPParam
class RenderSys -> setDrawBuffer == getBufferType
//--------------------------------------------------------------------------
class RenderSysManager -> _addRenderSystemCapabilities == add
class RenderSysManager -> getCapabilities == getFeatureList
class RenderSysManager -> loadParsedCapabilities== getFeature
class RenderSysManager -> parseCapabilitiesFromArchive == load
class RenderSysManager -> mCapabilitiesMap == mFeatureList
class RenderSysManager -> mScriptPattern 融入移去
//--------------------------------------------------------------------------
class Log -> logMessage == log
class LogManager -> logMessage == log 2个函数
//--------------------------------------------------------------------------
class SpaceObj::Listener -> objectDestroyed == destroy
class SpaceObj::Listener -> objectAttached == attach
class SpaceObj::Listener -> objectDetached == detach
class SpaceObj::Listener -> objectMoved == moved
class SpaceObj::Listener -> objectRendering == render
class SpaceObj::Listener -> objectQueryLights == query
class SpaceObj -> getMovableType == getTypeID
class SpaceObj -> _update == queue (RenderBound 融入到 Camera)
class SpaceObj -> _notifyCreator == setFactory
class SpaceObj -> _notifyManager == setManager
class SpaceObj -> _notifyMoved == _notify
class SpaceObj -> _notifyCurrentCamera == _notify
class SpaceObj -> setRenderingMinPixelSize == setVisiblePixelLimit
class SpaceObj -> getRenderingMinPixelSize == getVisiblePixelLimit
class SpaceObj -> _getLightList 无效移去
class SpaceObj -> isDebugDisplayEnabled == isDebugMode
class SpaceObj -> _getParentNodeFullTransform == getEnvMatrix
class SpaceObj -> detachFromParent == detach
class SpaceObj -> getTypeFlags == getTypeMark
class SpaceObj -> msDefaultQueryFlags setDefaultQueryFlags getDefaultQueryFlags
    msDefaultVisibilityFlags setDefaultVisibilityFlags getDefaultVisibilityFlags
    无效移去
class SpaceObj -> addQueryFlags removeQueryFlags
    addVisibilityFlags removeVisibilityFlags 无效移去
class SpaceObj 分离出 ShadowObj 概念
class SpaceObj -> getParentNode == getSpaceNode
class SpaceObj -> getParentSceneNode == getSceneNode
class SpaceObj -> mParentNode == mSpaceNode
class SpaceObj -> queryLights == query(LightList &)
class SpaceObj -> mName getName = mID getID
class SpaceObj -> isInScene == isActive
class SpaceObj -> isAttached == isAttach
class SpaceObj -> getReceivesShadows == isReceiveShadow
class SpaceObj -> isParentTagPoint 无效移去
class SpaceObj -> _notify 无参数 == attach
class SpaceObj -> mParentIsTagPoint == mTagNode
class SpaceObj -> mRenderingDisabled == mListenerCtl
class SpaceObj -> mWorldAABB == mSpaceAABB
class SpaceObj -> mWorldBoundingSphere == mSpaceBS
class SpaceObj -> mUpperDistance == mDisLimit
class SpaceObj -> mMinPixelSize == mPixelLimit
class SpaceObj -> mSquaredUpperDistance 融入移去
class SpaceObj -> setQueryFlags == setIntersectMark
class SpaceObj -> getQueryFlags == getIntersectMark
class SpaceObj -> setVisibilityFlags == setVisibleMark
class SpaceObj -> getVisibilityFlags == getVisibleMark
class SpaceObj -> setLightMask == setLightMark
class SpaceObj -> getLightMask == getLightMark
class SpaceObj -> mQueryFlags == mIntersectMark
class SpaceObj -> mVisibilityFlags == mVisibleMark
class SpaceObj -> visitRenderables == query 第二参数分离到 GeometryQuery 的 mDebug 中
class SpaceObj -> _getManager == getManager
class SpaceObj -> _getCreator == getFactory
class SpaceObj -> mCreator == mFactory
class SpaceObj -> mLightListUpdated == mLightDirtyMark
class SpaceObj -> mDebugDisplay == mDebugMode
class SpaceObj -> mBeyondFarDistance == mInvisible
class SpaceObj -> getEnvMatrix == getSpaceMatrix
//--------------------------------------------------------------------------
class MovableObjectFactory -> getTypeFlags == getTypeMark
class MovableObjectFactory ->
class MovableObjectFactory ->
//--------------------------------------------------------------------------
class Time -> getMilliseconds == getMS
class Time -> getMicroseconds == getUS
class Time -> getMillisecondsCPU == getCostMS
//--------------------------------------------------------------------------
class ThreadManager -> Request -> abort
class ThreadManager -> Response -> abort
class ThreadManager -> RequestHandler -> canHandleRequest == check
class ThreadManager -> RequestHandler -> handleRequest == handle
class ThreadManager -> ResponseHandler -> canHandleResponse == check
class ThreadManager -> ResponseHandler -> handleResponse == handle
class ThreadManager -> RequestHandlerHolder -> handleRequest == handle
class ThreadManager -> addRequestHandler == add
class ThreadManager -> removeRequestHandler == remove
class ThreadManager -> addResponseHandler == add
class ThreadManager -> removeResponseHandler == remove
class ThreadManager -> addRequest == add
class ThreadManager -> abortRequest == abort
class ThreadManager -> abortRequestsByChannel == abort
class ThreadManager -> abortAllRequests == abort
class ThreadManager -> isShuttingDown 移去
class ThreadManager -> mAcceptRequests == mAccept
class ThreadManager -> mRequestCount == mCurrentRequest
class ThreadManager -> mIsRunning == mRun
class ThreadManager -> mResposeTimeLimitMS == mTimeLimitMS
class ThreadManager -> setWorkerThreadCount == setFireCount
class ThreadManager -> getWorkerThreadCount == getFireCount
class ThreadManager -> setWorkersCanAccessRenderSystem getWorkersCanAccessRenderSystem
    mWorkerRenderSystemAccess 无用移去
class ThreadManager -> mWorkerThreadCount == mFireCount
class ThreadManager -> notifyWorkers == notifyFire
class ThreadManager -> addRequestWithRID 融入移去
class ThreadManager -> mRequestHandlerMutex RequestHandlerHolder mResponseHandlers mRequestHandlers 无用移去
class ThreadManager -> setPaused == setPause
class ThreadManager -> isPaused == isPause
class ThreadManager -> setRequestsAccepted == setAcceptJob
class ThreadManager -> getRequestsAccepted == isAcceptJob
class ThreadManager -> setResponseProcessingTimeLimit == setMainThreadPrcTimeOut
class ThreadManager -> getResponseProcessingTimeLimit == getMainThreadPrcTimeOut
class ThreadManager -> mChannelMap mNextChannel getChannel mChannelMapMutex 无用移去
class ThreadManager -> processRequest 融入移去
class ThreadManager -> mPaused == mPause
class ThreadManager -> mShuttingDown == mShutDown
class ThreadManager -> _processNextRequest == FireThreadPrc
class ThreadManager -> processResponses == MainThreadPrc
class ThreadManager -> _threadMain == main
class ThreadManager -> processRequestResponse == process
class ThreadManager -> processResponse == process
class ThreadManager -> mRequestQueue == mRequestList
class ThreadManager -> mProcessQueue == mProcessList
class ThreadManager -> mResponseQueue == mResponseList
class ThreadManager -> mCurrentRequest == mValidJobID
//--------------------------------------------------------------------------
class DualQuaternion -> fromRotationTranslation == from
class DualQuaternion -> toRotationTranslation == to
class DualQuaternion -> fromTransformationMatrix == from
class DualQuaternion -> toTransformationMatrix == to
//--------------------------------------------------------------------------
struct WorkerFunc 改用 class Thread
//--------------------------------------------------------------------------
class FusionShaderOp -> setStencilTwoSidedOperation == setStencilTwoSided
class FusionShaderOp -> getStencilTwoSidedOperation == getStencilTwoSided
class FusionShaderOp -> getParent == getCh
class FusionShaderOp -> _isSupported == isValid
class FusionShaderOp -> mQuadCornerModified == mQuadCorner
class FusionShaderOp -> mStencilTwoSidedOperation == mStencilTwoSided
class FusionShaderOp -> mParent == mCh
class FusionShaderOp -> mIdentifier == mID
class FusionShaderOp -> setIdentifier == setID
class FusionShaderOp -> getIdentifier == getID
class FusionShaderOp -> setStencilRefValue == setStencilValue
class FusionShaderOp -> getStencilRefValue == getStencilValue
class FusionShaderOp -> mStencilRefValue == mStencilValue
class FusionShaderOp -> InputTex == pair 融入
class FusionShaderOp -> PassType == OpType
class FusionShaderOp -> PT_CLEAR == OT_Clear
class FusionShaderOp -> PT_STENCIL == OT_StencilTest
class FusionShaderOp -> PT_RENDERSCENE == OT_RenderScene
class FusionShaderOp -> PT_RENDERQUAD == OT_RenderQuad
class FusionShaderOp -> PT_RENDERCUSTOM == OT_RenderCustom
class FusionShaderOp -> getNumInputs == getInputCount
class FusionShaderOp -> clearAllInputs == clearAllInput
//--------------------------------------------------------------------------
class Codec -> registerCodec == add
class Codec -> unRegisterCodec == remove
class Codec -> isCodecRegistered == isExist
class Codec -> getCodecIterator 无效移去
class Codec -> magicNumberMatch == match 改变输入函数
class Codec -> magicNumberToFileExt == match
改Codec::CodecData为 RequestData
移去 class Codec -> getDataType
Codec -> msMapCodecs == mCodecs
//--------------------------------------------------------------------------
class Freeimage -> encode == _encode
//--------------------------------------------------------------------------
class ShaderFusion -> mIlluminationPassesCompilationPhase == mPhase
class ShaderFusion -> mIlluminationPasses == mFusionChList
class ShaderFusion -> setSelfIllumination 使用 setEmissive 代替
class ShaderFusion -> getSelfIllumination 使用 getEmissive 代替
class ShaderFusion -> 三色参数 改 单元颜色参数
class ShaderFusion -> getPass == get 2函数
class ShaderFusion -> getNumPasses == getCount
class ShaderFusion -> createPass == create(ShaderCh *& out)
class ShaderFusion -> checkHardwareSupport 融入移去
class ShaderFusion -> checkGPURules 融入移去
class ShaderFusion -> removeAllPasses == removeAll
class ShaderFusion -> removePass == remove
class ShaderFusion -> hasColourWriteDisabled == 反义 getColourWrite
class ShaderFusion -> isTransparentSortingEnabled == isDepthSort
class ShaderFusion -> isTransparentSortingForced == isForceDepthSort
class ShaderFusion -> getGPUVendorRuleIterator == getSupportVendor
class ShaderFusion ->
class ShaderFusion -> clearIlluminationPasses 融入移去
class ShaderFusion -> addGPUDeviceNameRule removeGPUDeviceNameRule
    GPUDeviceNameRuleIterator getGPUDeviceNameRuleIterator mGPUDeviceNameRules
        GPUDeviceNameRuleList GPUDeviceNameRule 融入到 mGPUVendorRules
class ShaderFusion -> mIsSupported == mValid
class ShaderFusion -> mPasses == mChList
class ShaderFusion -> isSupported == isValid
class ShaderFusion -> GPUVendorRule == VendorMatch
class ShaderFusion -> IncludeOrExclude 概念移去
class ShaderFusion -> mGPUVendorRules == mVendorList
class ShaderFusion -> checkManuallyOrganisedIlluminationPasses 融入移去
class ShaderFusion -> getIlluminationPassIterator == getFusionShaderList
class ShaderFusion -> addGPUVendorRule == add
class ShaderFusion -> removeGPUVendorRule == remove
class ShaderFusion -> IlluminationPassesState mPhase mValid == 融入到 mMark
class ShaderFusion -> _compileIlluminationPasses == fusion
class ShaderFusion -> _compile == check
class ShaderFusion ->_prepare _unprepare _load _unload == plan unplan load unload
class ShaderFusion -> movePass 无效移去
class ShaderFusion -> setPointSize == setPoint 概念
class ShaderFusion -> _notifyNeedsRecompile == notify
class ShaderFusion -> applyTextureAliases 无用概念
class ShaderFusion -> setShadowCasterMaterial == String 参数的移去 == setShadowCaster
class ShaderFusion -> getShadowCasterMaterial == getShadowCaster
class ShaderFusion -> setShadowReceiverMaterial == String 参数的移去 == setShadowReceiver
class ShaderFusion -> getShadowReceiverMaterial == getShadowReceiver
class ShaderFusion -> setDepthCheck setDepthWrite == 移到 MaterialManager 中
class ShaderFusion -> isDepthWriteEnabled == isDepthWrite
class ShaderFusion -> isDepthCheckEnabled == isDepthEnable
class ShaderFusion -> mShadowCasterMaterialName mShadowReceiverMaterialName 融入移去
class ShaderFusion -> mShadowCasterMaterial == mShadowCaster
class ShaderFusion -> mShadowReceiverMaterial == mShadowReceiver
class ShaderFusion -> setSchemeName == setSchemeID
class ShaderFusion -> getSchemeName == getSchemeID
class ShaderFusion -> _getSchemeIndex 使用 getSchemeID 代替
class ShaderFusion -> mSchemeIndex == mSchemeID
//--------------------------------------------------------------------------
class FrameShader -> TextureDefinition == FrameDefine
class FrameShader -> setSchemeName == setSchemeID
class FrameShader -> getSchemeName == getSchemeID
class FrameShader -> setCompositorLogicName == setName
class FrameShader -> getCompositorLogicName == getName
class FrameShader -> mCompositorLogicName == mName
class FrameShader -> isSupported == isSupport
class FrameShader -> createTextureDefinition == createDefine
class FrameShader -> removeTextureDefinition == removeDefine
class FrameShader -> getTextureDefinition == getDefine
class FrameShader -> getNumTextureDefinitions == getDefineCount
class FrameShader -> removeAllTextureDefinitions == removeAllDefine
class FrameShader -> createTargetPass == createCh
class FrameShader -> removeTargetPass == removeCh
class FrameShader -> getTargetPass == getCh
class FrameShader -> getNumTargetPasses == getChCount
class FrameShader -> removeAllTargetPasses == removeAllCh
class FrameShader -> getOutputTargetPass == getOutputCh
class FrameShader -> mTextureDefinitions == mDefineList
class FrameShader -> mTargetPasses == mTargetList
class FrameShader -> mSchemeName == mSchemeID
class FrameShader -> mOutputTarget == mOutputCh
class FrameShader -> TextureScope == SourceType
class FrameShader ->TextureScope TS_LOCAL -> ST_Temp
class FrameShader ->TextureScope TS_CHAIN -> ST_Fusion
class FrameShader ->TextureScope TS_GLOBAL -> ST_Pool
class FrameShader::FrameDefine -> refCompName == mFusionSource
class FrameShader::FrameDefine -> refTexName == mTextureSource
class FrameShader::FrameDefine -> scope == mSourceType
class FrameShader::FrameDefine -> depthBufferId == mRasterGroup
class FrameShader::FrameDefine -> pooled == mPool
class FrameShader::FrameDefine -> fsaa == mFSAA
class FrameShader::FrameDefine -> hwGammaWrite == mHWGamma
//--------------------------------------------------------------------------
class ParticleSpaceManager -> addEmitterFactory == add
class ParticleSpaceManager -> addAffectorFactory == add
class ParticleSpaceManager -> addRendererFactory == add
class ParticleSpaceManager -> removeAllTemplates == removeAllTemplate
class ParticleSpaceManager -> removeTemplatesByResourceGroup == removeAllTemplate
class ParticleSpaceManager -> setDefaultIterationInterval == setTimeInterval
class ParticleSpaceManager -> getDefaultIterationInterval == getTimeInterval
class ParticleSpaceManager -> msDefaultIterationInterval == mTimeInterval
class ParticleSpaceManager -> setDefaultNonVisibleUpdateTimeout == setTimeThreshold
class ParticleSpaceManager -> getDefaultNonVisibleUpdateTimeout == getTimeThreshold
class ParticleSpaceManager -> msDefaultNonvisibleTimeout == mTimeThreshold
class ParticleSpaceManager -> getAffectorFactoryIterator == getEffectFactoryList
class ParticleSpaceManager -> getEmitterFactoryIterator == getSpreadFactoryList
class ParticleSpaceManager -> getRendererFactoryIterator == getGeoFactoryList
class ParticleSpaceManager -> getTemplateIterator == getSpaceList
class ParticleSpaceManager -> mRendererFactories == mGeoFactoryList
class ParticleSpaceManager -> mSystemTemplates == mSpaceList
class ParticleSpaceManager -> _createEmitter == createSpread
class ParticleSpaceManager -> _destroyEmitter == destroySpread
class ParticleSpaceManager -> _createAffector == createEffect
class ParticleSpaceManager -> _destroyAffector == destroyEffect
class ParticleSpaceManager -> _createRenderer == createGeo
class ParticleSpaceManager -> _destroyRenderer == destroyGeo
class ParticleSpaceManager -> _init == init
class ParticleSpaceManager -> parseAttrib parseEmitterAttrib parseAffectorAttrib 
skipToNextCloseBrace skipToNextOpenBrace 移入到内部
class ParticleSpaceManager -> _getFactory == getFactory
class ParticleSpaceManager -> parseNewEmitter == parse
class ParticleSpaceManager -> createSystemImpl == createImpl
class ParticleSpaceManager -> destroySystemImpl == destroyImpl
//--------------------------------------------------------------------------
class Fusion -> stage == mStep
class Fusion -> pass == mDest
class Fusion -> destroyOnShutdown == mAuto
class Fusion -> originalPass == mSrc
//--------------------------------------------------------------------------
class FusionShader -> getParent == getFusion
class FusionShader -> mParent == mFusion
class FusionShader -> _isSupported == isValid
class FusionShader -> getPass == get
class FusionShader -> getNumPasses == getCount
class FusionShader -> removeAllPasses == destroyAll
class FusionShader -> removePass == destroy
class FusionShader -> setShadowsEnabled == setShadowEnable
class FusionShader -> getShadowsEnabled == isShadowEnable
class FusionShader -> setOnlyInitial == setOnce
class FusionShader -> getOnlyInitial == isOnce
class FusionShader -> getPassIterator == getList
class FusionShader -> mOnlyInitial == mOnce
class FusionShader -> setInputMode getInputMode InputMode == isUsePreResult setUsePreResult
class FusionShader -> mVisibilityMask == mVisibleMask
class FusionShader -> mShadowsEnabled == mShadowsEnabledCompositor
//--------------------------------------------------------------------------
class ShadowVolume -> getRenderOperationForUpdate 使用 mRenderOp 代替
class ShadowVolume -> rebindIndexBuffer == setIndex
class ShadowVolume -> isLightCapSeparate 使用 getLightCapRenderable
//--------------------------------------------------------------------------
struct RenderItem -> pass == mCh
struct RenderItem -> renderable == mGeometryObj
//--------------------------------------------------------------------------
class Image -> loadDynamicImage == load 5-8
class Image -> loadDynamicImage == load 4
class Image -> loadRawData == load 5-7
class Image -> loadRawData == load 4
class Image -> loadTwoImagesAsRGBA == combine 3-4
class Image -> loadTwoImagesAsRGBA == combine 2-5
class Image -> combineTwoImagesAsRGBA == combine 2-3
class Image -> flipAroundY == horizontalFlip
class Image -> flipAroundX == verticalFlip
class Image -> getNumMipmaps == getMipmapCount
class Image -> getNumFaces == getArray
class Image -> getHasAlpha == isAlpha
class Image -> hasFlag == isMode
class Image -> ImageFlags == Mode
class Image -> IF_COMPRESSED == M_Compress
class Image -> IF_CUBEMAP == M_Cube
class Image -> IF_3D_TEXTURE == M_3D
class Image -> IF_Animation == M_Animation
class Image -> mNumMipmaps == mMipmapCount
class Image -> mBufSize == mSize
class Image -> free 融入
class Image -> FILTER_BOX 无效移去
class Image -> FILTER_TRIANGLE 无效移去
class Image -> FILTER_BICUBIC 无效移去
class Image -> scale == 移动到 PixelBlock 类中
class Image -> Filter 移动到 PixelBlock 类中
class Image -> getBPP 无效移去 (mPixelSize * 8)
class Image -> getRowSpan == getWidth * getUnitSize
class Image -> applyGamma 移动到 PixelBox类中
class Image -> calcSize 使用 PixelUtil 类中
class Image -> getFileExtFromMagic 使用 Codec::getCodec 代替
class Image -> getColourAt == getColour 返回改第一参数
class Image -> setColourAt == setColour
class Image -> getPixelBox == getPixel
ImagePtrList == Images OK
ConstImagePtrList 改用 Images OK
//--------------------------------------------------------------------------
enum TextureMipmap 移去
enum TextureMipmap -> MIP_UNLIMITED == N_TEX_MIPMAP
enum TextureMipmap -> MIP_DEFAULT == 融入移去
//--------------------------------------------------------------------------
enum TextureType -> TEX_TYPE_1D == T_1D
enum TextureType -> TEX_TYPE_2D == T_2D
enum TextureType -> TEX_TYPE_3D == T_3D
enum TextureType -> TEX_TYPE_2D_ARRAY == T_2DArray
enum TextureType -> TEX_TYPE_CUBE_MAP == T_CUBE
enum TextureType -> Texture::Type
//--------------------------------------------------------------------------
class Box -> left == mLeft
class Box -> top == mTop
class Box -> right == mRight
class Box -> bottom == mBottom
class Box -> front == mFront
class Box -> back == mBack
//--------------------------------------------------------------------------
class Texture -> createInternalResources == createInternal 融入移去
class Texture -> freeInternalResources == freeInternal 融入移去
class Texture -> copyToTexture == load
class Texture -> loadImage == load
class Texture -> loadRawData == load
class Texture -> _loadImages == load
class Texture -> convertToImage == convert 移动到 TextureManager 第三参数无效移去
class Texture -> getSrcWidth == getOriginWidth
class Texture -> getSrcHeight == getOriginHeight
class Texture -> getSrcDepth == getOriginDepth
class Texture -> createInternalResourcesImpl == createInternalImpl
class Texture -> freeInternalResourcesImpl == freeInternalImpl
class Texture -> getBuffer 分解出 getCubeBuffer 概念
class Texture -> setUsage == setModeMark
class Texture -> getUsage == getModeMark
class Texture -> mUsage == mMark
class Texture 移去 mDesiredFormat 体系
class Texture -> mNumMipmaps == mSrcMipmapCount
class Texture -> mNumRequestedMipmaps == mMipmapCount
class Texture -> getNumMipmaps == getMipmapCount
class Texture -> setNumMipmaps == setMipmapCount
class Texture -> getNumFaces == getUnitCount
class Texture -> getAutoName 使用 genValidID 代替
class Texture -> getTextureType == getType
class Texture -> setTextureType == setType
class Texture -> setHardwareGammaEnabled == setHardwareSRGB
class Texture -> isHardwareGammaEnabled == isHardwareSRGB
class Texture -> hasAlpha 融入移去
class Texture -> mHwGamma 融入到 mMark MM_SRGB
class Texture -> mMipmapsHardwareGenerated 融入到 mMark
class Texture -> getMipmapsHardwareGenerated 融入移去
class Texture -> setDesiredIntegerBitDepth getDesiredIntegerBitDepth
    setDesiredFloatBitDepth getDesiredFloatBitDepth setDesiredBitDepths
    mDesiredIntegerBitDepth mDesiredFloatBitDepth 融入到 mMark
class Texture -> mTreatLuminanceAsAlpha setTreatLuminanceAsAlpha
    getTreatLuminanceAsAlpha 融入到 mMark [(mMark & MM_COLOUR_ALPHA) && !(mMark & MM_COLOUR_RGB)]
class Texture -> mInternalResourcesCreated == mInnerValid
class Texture -> setFSAA 分解成 setFSAA setFSAAExt
class Texture -> getFSAAHint == getFSAAExt
class Texture -> getCustomAttribute == getPlatformData
class Texture -> getSourceFileType == getRawType 改 CodecID 类型
class Texture -> mFSAAHint == mFSAAExt
class Texture -> TextureCubeFace == CubeFace
class Texture -> CUBE_FRONT == CF_FRONT
class Texture -> CUBE_BACK == CF_BACK
class Texture -> CUBE_LEFT == CF_LEFT
class Texture -> CUBE_RIGHT == CF_RIGHT
class Texture -> CUBE_UP == CF_UP
class Texture -> CUBE_DOWN == CF_DOWN
class Texture -> setLayerNames == setUnitResource
class Texture -> mLayerNames == mOriginList
//--------------------------------------------------------------------------
class RenderListener -> preRenderQueues == renderBegin
class RenderListener -> postRenderQueues == renderEnd
class RenderListener -> renderQueueStarted == renderBegin 保留返回第三参数(转义) 删除第二参数
class RenderListener -> renderQueueEnded == renderEnd 保留返回第三参数 删除第二参数
//--------------------------------------------------------------------------
class TextureManager -> isHardwareFilteringSupported == isSupport 基类中移去
class TextureManager -> mDefaultNumMipmaps == mMipMapCount
class TextureManager -> setDefaultNumMipmaps == setMipMapCount
class TextureManager -> getDefaultNumMipmaps == getMipMapCount
class TextureManager -> setPreferredIntegerBitDepth getPreferredIntegerBitDepth
    setPreferredFloatBitDepth getPreferredFloatBitDepth mPreferredFloatBitDepth
    setPreferredBitDepths == setBitDepth getBitDepth
class TextureManager -> mPreferredIntegerBitDepth == mBitDepth
class TextureManager -> loadImage == load 参数 PixelFormat 放到 Texture::Type 后
    参数 isAlpha hwSRGB 融入到 Nmark ext 概念
class TextureManager -> prepare == plan 参数 PixelFormat 放到 Texture::Type 后
    参数 isAlpha hwSRGB 融入到 Nmark ext 概念
class TextureManager -> loadRawData == load 参数 PixelFormat 放到 Texture::Type 后
    参数 isAlpha hwSRGB 融入到 Nmark ext 概念
class TextureManager -> load 参数 PixelFormat 放到 Texture::Type 后
    参数 hwSRGB 融入到 Nmark ext 概念
class TextureManager -> ref 融入移去
class TextureManager -> createManual == createTexture 参数 PixelFormat 放到 Texture::Type 后
class TextureManager -> isFormatSupported 无效移去
class TextureManager -> isEquivalentFormatSupported 融入移去
class TextureManager -> getNativeFormat == getFormat
class TextureManager -> mWarningTexture _getWarningTexture = mWarning getWarning

class TextureManager -> createSampler getSampler mNamedSamplers ==
    
//--------------------------------------------------------------------------
class WindowListener -> windowMoved == onMove
class WindowListener -> windowResized == onResize
class WindowListener -> windowClosing == onClosing
class WindowListener -> windowClosed == onClose
class WindowListener -> windowFocusChange = onFocusChange
//--------------------------------------------------------------------------
class WindowUtil -> messagePump == messageProcess
class WindowUtil -> addWindowEventListener == addListener
class WindowUtil -> removeWindowEventListener == removeListener
class WindowUtil -> _addRenderWindow == add
class WindowUtil -> _removeRenderWindow == remove
class WindowUtil -> _msListeners == mListenerList
class WindowUtil -> _msWindows == mWindowList
class WindowUtil -> _WndProc == proc
class WindowUtil -> _CarbonWindowHandler == proc
//--------------------------------------------------------------------------
class DataFunc -> getAdjustedInput 融入移去
class DataFunc -> calculate == func
class DataFunc -> mDeltaInput 分散
class DataFunc -> mDeltaCount == mTemp
//--------------------------------------------------------------------------
class FrameBuffer -> blit == write
class FrameBuffer -> blitFromMemory == write 2个函数(只有一个参数的移去)
class FrameBuffer -> blitToMemory == read 2个函数(只有一个参数的移去)
class FrameBuffer -> lockImpl 第二参数提前
class FrameBuffer -> getRenderTarget == getBuffer
class FrameBuffer -> _clearSliceRTT == destroyImpl
class FrameBuffer -> getCurrentLock == getMutexData
//--------------------------------------------------------------------------
class ConfigFile -> loadFromResourceSystem == loadFrom
class ConfigFile -> 移动去2个load(const String & filename
class ConfigFile -> loadDirect == load
class ConfigFile -> loadFrom == load
class ConfigFile -> getSetting == getValue
class ConfigFile -> getMultiSetting == getValues
class ConfigFile -> getSectionIterator == getSectionList
//--------------------------------------------------------------------------
class CustomSpaceObj -> setUseIdentityProjection == setIdentityProj
class CustomSpaceObj -> getUseIdentityProjection == isIdentityProj
class CustomSpaceObj -> setUseIdentityView == setIdentityView
class CustomSpaceObj -> getUseIdentityView == isIdentityView
class CustomSpaceObj -> position(const Vector3f &
                        normal(const Vector3f &
                        tangent(const Vector3f &
                        colour(const Colour &
                        textureCoord(const Vector2f &
                        textureCoord(const Vector3f &
                        textureCoord(const Vector4f & 移去
class CustomSpaceObj -> estimateVertexCount == reserveVertexCount
class CustomSpaceObj -> estimateIndexCount == reserveIndexCount
class CustomSpaceObj -> getCurrentVertexCount == getVertexCount
class CustomSpaceObj -> getCurrentIndexCount == getIndexCount
class CustomSpaceObj -> begin 第二参数 放第一(GeometryRaw::OT_TRIANGLE_LIST 默认)
class CustomSpaceObj -> getSection == getGeo
class CustomSpaceObj -> getNumSections == getGeoCount
class CustomSpaceObj -> mShadowRenderables == mShadowVolumeList
class CustomSpaceObj -> beginUpdate == beginModify
class CustomSpaceObj -> setKeepDeclarationOrder == setIndexOrderRender
class CustomSpaceObj -> getKeepDeclarationOrder == isIndexOrderRender
class CustomSpaceObj -> mKeepDeclarationOrder == mIndexOrderRender
class CustomSpaceObj -> mUseIdentityProjection == mIdentityProj
class CustomSpaceObj -> mUseIdentityView == mIdentityView
class CustomSpaceObj -> convertToMesh == createMesh
class CustomSpaceObj -> mSectionList == mGeoList
class CustomSpaceObj -> mCurrentSection == mOpGeo
class CustomSpaceObj -> setDynamic == setOnlyWrite
class CustomSpaceObj -> getDynamic == isOnlyWrite
class CustomSpaceObj -> mDynamic == mOnlyWrite
class CustomSpaceObj -> mTempVertexBuffer == mOpVertexData
class CustomSpaceObj -> mTempIndexBuffer == mOpIndexData
class CustomSpaceObj -> mTempVertexSize == mOpVertexSize
class CustomSpaceObj -> mTempIndexSize == mOpIndexSize
class CustomSpaceObj -> mEstVertexCount == mVertexCount
class CustomSpaceObj -> mEstIndexCount == mIndexCount
class CustomSpaceObj -> mIndexOrderRender ==
class CustomSpaceObj -> resizeTempVertexBufferIfNeeded == cacheVertexCount
class CustomSpaceObj -> resizeTempIndexBufferIfNeeded == cacheIndexCount
class CustomSpaceObj -> copyTempVertexToBuffer == updateVertexData
class CustomSpaceObj -> mDeclSize == mUnitSize
class CustomSpaceObj -> mAnyIndexed == mVertexIndex
class CustomSpaceObj -> mFirstVertex == mUnitInput
class CustomSpaceObj -> mCurrentUpdating == mOpUpdate
class CustomSpaceObj -> resetTempAreas == resetCacheData
class CustomSpaceObj -> mTempVertexPending == mCacheUpload
class CustomSpaceObj -> mTempVertex == mOpVertex
class CustomSpaceObj -> mTexCoordIndex == mTexCoordCount
//--------------------------------------------------------------------------
class WindowEventListener->
class WindowEventListener->
//--------------------------------------------------------------------------
class Bone -> getHandle 使用 getID 代替
class Bone -> createChild == create
class Bone -> setBindingPose == origin
class Bone -> setManuallyControlled == setManual
class Bone -> isManuallyControlled == isManual
class Bone -> mManuallyControlled == mManual
class Bone -> _getBindingPoseInverseScale 无效移去
class Bone -> _getBindingPoseInversePosition 无效移去
class Bone -> _getBindingPoseInverseOrientation 无效移去
class Bone -> mBindDerivedInverseScale == mSrcScaleOrg
class Bone -> mBindDerivedInverseOrientation == mSrcOriOrg
class Bone -> mBindDerivedInversePosition == mSrcPosOrg
class Bone -> _getOffsetTransform == getFusion
//--------------------------------------------------------------------------
class StaticSpace InstanceSpace -> OptimisedSubMeshGeometry == OptMeshGeoList
class StaticSpace InstanceSpace -> SubMeshLodGeometryLink == OptMeshGeoRef
class StaticSpace InstanceSpace -> QueuedGeometry == Geometry
class StaticSpace InstanceSpace -> QueuedSubMesh == MeshRef
class StaticSpace InstanceSpace -> GeometryBucket == GeometryBatch
class StaticSpace InstanceSpace -> GeometryBatch->assign == add
class StaticSpace InstanceSpace -> GeometryBatch->mFormatString getFormatString dump 移去
class StaticSpace InstanceSpace -> GeometryBatch->mQueuedGeometry == mGeometryList
class StaticSpace InstanceSpace -> GeometryBatch->getParent mParent== getMaterialBatch mMaterialBatch
class StaticSpace InstanceSpace -> GeometryBatch -> mIndexType 融入到 mMaxVertexIndex
class StaticSpace InstanceSpace -> GeometryBatch -> mMaxVertexIndex == mIdx32
class StaticSpace InstanceSpace -> GeometryBatch -> _initGeometryBucket == setupData
class StaticSpace InstanceSpace -> MaterialBucket == MaterialBatch
class StaticSpace InstanceSpace -> MaterialBatch -> assign == add
class StaticSpace InstanceSpace -> MaterialBatch -> getParent mParent == getLODBatch mLODBatch
class StaticSpace InstanceSpace -> MaterialBatch -> getMaterialName == getMaterialID
class StaticSpace InstanceSpace -> MaterialBatch -> getCurrentTechnique == getShaderFusion
class StaticSpace InstanceSpace -> MaterialBatch -> getGeometryIterator == getGeometryList
class StaticSpace InstanceSpace -> MaterialBatch -> getGeometryFormatString 内部化
class StaticSpace InstanceSpace -> MaterialBatch -> addRenderables == queue
class StaticSpace InstanceSpace -> MaterialBatch -> mMaterialName == mMaterialID
class StaticSpace InstanceSpace -> MaterialBatch -> mTechnique == mShaderFusion
class StaticSpace InstanceSpace -> MaterialBatch -> mCurrentGeometryMap == mGeoBatchMarkList
class StaticSpace InstanceSpace -> MaterialBatch -> mGeometryBucketList == mGeometryBatchList
class StaticSpace InstanceSpace -> MaterialBatch -> dump 移去
class StaticSpace InstanceSpace -> LODBucket == LODBatch
class StaticSpace InstanceSpace -> LODBatch -> assign == add
class StaticSpace InstanceSpace -> LODBatch -> getParent mParent == getBatchObj mBatchObj
class StaticSpace InstanceSpace -> LODBatch -> getMaterialIterator == getMaterialList
class StaticSpace InstanceSpace -> LODBatch -> getLodValue mLodValue 融入移去
class StaticSpace InstanceSpace -> LODBatch -> addRenderables == queue
class StaticSpace -> LODBatch -> getEdgeList 融入移去
class StaticSpace -> LODBatch -> getShadowRenderableList 融入移去
class StaticSpace -> LODBatch -> isVertexProgramInUse 融入移去
class StaticSpace -> LODBatch -> updateShadowRenderables == updateShadowVolume
class StaticSpace -> LODBatch -> mEdgeList -> mShadowVolume
class StaticSpace -> LODBatch -> updateShadowVolume -> mShadowVolume
class StaticSpace -> LODBatch -> mVertexProgramInUse == mVertexProgram -> mShadowVolume
class StaticSpace -> LODBatch -> mShadowRenderables == mShadowVolumeList -> mShadowVolume
class StaticSpace InstanceSpace -> LODBatch -> mMaterialBucketMap == mMaterialBatchList
class StaticSpace InstanceSpace -> LODBatch -> mQueuedGeometryList == mGeometryList
class StaticSpace InstanceSpace -> BatchInstance Region == BatchObj
class StaticSpace InstanceSpace -> BatchObj -> assign == add
class StaticSpace InstanceSpace -> BatchObj -> getLODIterator == getLODList
class StaticSpace InstanceSpace -> BatchObj -> mLodBucketList == mLODBatchList
class StaticSpace InstanceSpace -> BatchObj -> mBatchInstanceID mRegionID == mBatchID
class StaticSpace InstanceSpace -> BatchObj -> mSceneMgr == mManager
class StaticSpace InstanceSpace -> BatchObj -> mLodValues 无用移去
class StaticSpace InstanceSpace -> BatchObj -> mBoundingRadius == mBoundRange
class StaticSpace InstanceSpace -> BatchObj -> mCurrentLod == mLodIdx
class StaticSpace InstanceSpace -> getName mName == getID mID
class StaticSpace InstanceSpace -> addEntity == add
class StaticSpace InstanceSpace -> addSceneNode == add
class StaticSpace InstanceSpace -> mSquaredUpperDistance getSquaredRenderingDistance 无用移去
class StaticSpace InstanceSpace -> setVisibleDistanceLimit getVisibleDistanceLimit == setVisibleDistance getVisibleDistance
class StaticSpace -> setVisibilityFlags == setVisibleMark
class StaticSpace -> getVisibilityFlags == getVisibleMark
class StaticSpace -> setRegionDimensions == setBatchSize
class StaticSpace -> getRegionDimensions == getBatchSize
class StaticSpace -> getRegionIterator == getBatchList
class StaticSpace -> getRegion == getBatchObj (autoCreate=true)
class StaticSpace -> getRegion == getBatchObj(Nui32 index) 融入移去
class StaticSpace -> getRegionIndexes == getBatchIndex
class StaticSpace InstanceSpace -> packIndex 内部化
class StaticSpace InstanceSpace-> determineGeometry == createRefList
class StaticSpace -> getRegionBounds == getBatchAABB
class StaticSpace -> getRegionCentre == getBatchCentre
class StaticSpace -> getVolumeIntersection == getVolume
class StaticSpace InstanceSpace -> splitGeometry == createRef
class StaticSpace InstanceSpace -> calculateBounds == calcAABB 移动到 VertexData
class StaticSpace InstanceSpace -> reset == removeAll
class StaticSpace InstanceSpace -> mOwner == mManager
class StaticSpace InstanceSpace -> mCastShadows == mCastShadow
class StaticSpace InstanceSpace -> mHalfRegionDimensions 融入移去
class StaticSpace -> mRegionMap == mBatchList
class StaticSpace -> mRegionDimensions == mBatchSize
class StaticSpace InstanceSpace -> mUpperDistance == mVisibleDistance
class StaticSpace -> mVisibilityFlags == mVisibleMark
class StaticSpace InstanceSpace -> mQueuedSubMeshes == mMeshRefList
class StaticSpace InstanceSpace -> mOptimisedSubMeshGeometryList == mOptMeshGeoList
class StaticSpace InstanceSpace -> mSubMeshGeometryLookup == mMeshGeoRefList
//--------------------------------------------------------------------------
class InstanceSpace -> GeometryBatch -> mBatch == mManager
class InstanceSpace -> setMaterial 无用移去
class InstanceSpace -> MaterialBatch -> updateContainers 融入移去
class InstanceSpace -> MaterialBatch -> setLastIndex getLastIndex 融入移去
class InstanceSpace -> MaterialBatch ->
class InstanceSpace -> InstancedObject -> getSkeletonInstance 融入移去
class InstanceSpace -> InstancedObject -> mAnimationState getFusion 概念融入移去
class InstanceSpace -> InstancedObject -> needUpdate 融入移去
class InstanceSpace -> InstancedObject -> getGeometryBucketList == getGeometryBatchList
class InstanceSpace -> InstancedObject -> getLocalAxes setPositionAndOrientation 无用移去
class InstanceSpace -> InstancedObject -> mFrameAnimationLastUpdated 融入移去
class InstanceSpace -> InstancedObject -> mTransformation == mMatrix
class InstanceSpace -> InstancedObject -> mBoneWorldMatrices == mBoneMatrix
class InstanceSpace -> InstancedObject -> addBucketToList getGeometryBatchList 融入移去
class InstanceSpace -> LODBatch -> updateContainers 融入移去
class InstanceSpace -> BatchObj -> addInstancedObject == addObject
class InstanceSpace -> BatchObj -> isInstancedObjectPresent == isObjectExist
class InstanceSpace -> BatchObj -> getLight 融入移去
class InstanceSpace -> BatchObj -> updateContainers 融入移去
class InstanceSpace -> BatchObj -> updateBoundingBox == updateAABB
class InstanceSpace -> BatchObj -> getInstancesMap == getObjectList
class InstanceSpace -> BatchObj -> mInstancesMap == mObjectList
class InstanceSpace -> BatchObj -> attachToScene 融入移去
class InstanceSpace -> getObjectIterator 融入到 getObjectList
class InstanceSpace -> getBatchInstance == getBatchObj (autoCreate=true)
class InstanceSpace -> getBatchObj(Nui32 index) 融入移去
class InstanceSpace -> getBatchInstanceIndexes == getBatchIndex
class InstanceSpace -> getVolumeIntersection == getVolume
class InstanceSpace -> getBatchInstanceBounds == getBatchAABB
class InstanceSpace -> getBatchInstanceCentre == getBatchCentre
class InstanceSpace -> getRenderOperationVector == add(GeometryRaw *) == 融入移去
class InstanceSpace -> mBatchInstanceMap == mBatchObjectList;
class InstanceSpace -> getObjectCount 融入移去
class InstanceSpace -> mHalfBatchInstanceDimensions 融入移去
class InstanceSpace -> setBatchInstanceDimensions == setBatchSize
class InstanceSpace -> getBatchInstanceDimensions == getBatchSize
class InstanceSpace -> mBatchInstanceDimensions == mBatchSize
class InstanceSpace -> mRenderOps == mGeometryRawList
class InstanceSpace -> getBaseAnimationState 融入移去
class InstanceSpace -> getInstanceSpaceInstance 融入移去
class InstanceSpace -> getBaseSkeletonInstance 融入移去
class InstanceSpace -> getBaseSkeleton 融入移去
class InstanceSpace -> getBatchInstanceIterator == getBatchObjList
class InstanceSpace -> mSkeleton == mSkeletonFusion
class InstanceSpace -> mBaseSkeleton == mSkeleton
class InstanceSpace -> setProvideWorldInverses getProvideWorldInverses mProvideWorldInverses 移去
class InstanceSpace -> mInstanceSpaceInstance == mBatchObj
class InstanceSpace -> mAnimationState == mAnimationCtrl
class InstanceSpace -> addBatchInstance 融入移去

//--------------------------------------------------------------------------
class OptimisedSubMeshGeometry -> vertexData == mVertex
class OptimisedSubMeshGeometry -> indexData == mIndex
//--------------------------------------------------------------------------
class TagBone -> setParentEntity == setOwner
class TagBone -> getParentEntity == getOwner
class TagBone -> setChildObject == setAttach
class TagBone -> getChildObject == getAttach
class TagBone -> mFullLocalTransform 使用 mSpaceMatrix 代替
class TagBone -> _getFullLocalTransform 使用 getSpaceMatrix 代替
class TagBone -> getParentEntityTransform 融入移去
class TagBone -> setInheritParentEntityOrientation == setUseOwnerSpaceOri
class TagBone -> getInheritParentEntityOrientation == isUseOwnerSpaceOri
class TagBone -> setInheritParentEntityScale == setUseOwnerSpaceScale
class TagBone -> getInheritParentEntityScale == isUseOwnerSpaceScale
class TagBone -> mParentEntity == mOwner
class TagBone -> mChildObject == mAttach
class TagBone -> mInheritParentEntityScale == mUseOwnerSpaceScale
class TagBone -> mInheritParentEntityOrientation == mUseOwnerSpaceOri
//--------------------------------------------------------------------------
class GeometryObj -> setCustomParameter == setCustonParam -> CustomGpuParam
class GeometryObj -> removeCustomParameter == removeCustomParam -> CustomGpuParam
class GeometryObj -> hasCustomParameter == hasCustomParam == isCustomParamExist -> CustomGpuParam
class GeometryObj -> getCustomParameter == getCustomParam -> CustomGpuParam
class GeometryObj -> mCGPUParamList -> CustomGpuParam
class GeometryObj -> _updateCustomParam -> CustomGpuParam (最后参数放第一参数)
class GeometryObj -> getCastsShadows == isCastShadow
class GeometryObj -> 加入 isReceiveShadow
class GeometryObj -> getWorldMatrix == getMatrix 加入第二参数
class GeometryObj -> setUseIdentityProjection getUseIdentityProjection
    mUseIdentityProjection == M_IdentityProj
class GeometryObj -> setUseIdentityView getUseIdentityView
    mUseIdentityView == M_IdentityView
class GeometryObj -> getTechnique == getShaderFusion
class GeometryObj -> 类 RenderSystemData 直接使用 void 类型 概念移去
class GeometryObj -> setAutoReduce getAutoReduce mPolygonModeOverrideable 概念移去
class GeometryObj -> preRender postRender 无效概念 移去
class GeometryObj -> getRenderSystemData == getRenderData 无效概念 移去
class GeometryObj -> setRenderSystemData 无效概念 移去
class GeometryObj -> mRenderSystemData 无效移去
class GeometryObj -> Visitor 类移出( 改变 GeometryQuery visit == query)
class GeometryObj -> getLights == getLight(LightList &)
//--------------------------------------------------------------------------
class Camera -> lookAt 三参数的移去
class Camera -> setPos 三参数的移去
class Camera -> setDirection 三参数的移去
class Camera -> move == movePos
class Camera -> _getNumRenderedFaces == getTriangleCount
class Camera -> _getNumRenderedBatches == getBatchCount
class Camera -> Listener == CameraListener 外移
class Camera -> mUseRenderingDistance == mDisLimit
class Camera -> getUseRenderingDistance == getDisLimit
class Camera -> setUseRenderingDistance == setVisibleDistanceLimit
class Camera -> getDerivedPosition == getSpacePos
class Camera -> mDerivedPosition == mSpacePos
class Camera -> msMovableType 无效移去
class Camera -> mSceneMgr getSceneManager 使用基类的 mManager setManager
class Camera -> _notifyRenderedFaces == setTriangle
class Camera -> _notifyRenderedBatches == setBatch
class Camera -> _renderScene == render 移去第二参数 bool includeOverlays
class Camera -> moveRelative == moveRel
class Camera -> getDerivedOrientation == getSpaceOri
class Camera -> mDerivedOrientation == mSpaceOrientation
class Camera -> getDerivedUp == getSpaceUp
class Camera -> getDerivedRight == getSpaceRight
class Camera -> mRealOrientation == mLocalOri
class Camera -> mRealPosition == mLocalPos
class Camera -> getRealUp == getLocalUp
class Camera -> getRealRight == getLocalRight
class Camera -> getRealDirection == getLocalDirection
class Camera -> getRealPosition == getLocalPos
class Camera -> getRealOrientation == getLocalOri
class Camera -> setUseMinPixelSize == setVisiblePixelLimit
class Camera -> getUseMinPixelSize == isVisiblePixelLimit
class Camera -> setAutoTracking 分离成2个函数 setAutoFocus
class Camera -> getAutoTrackTarget == getAutoFocus
class Camera -> getAutoTrackOffset == getFocusOffset
class Camera -> isWindowSet == isSubMode
class Camera -> resetWindow == setSubMode(false
class Camera -> _getLodBiasInverse mSceneLodFactorInv 使用 1 / getLodBias() 代替
class Camera -> setLodCamera == setExtLod
class Camera -> getLodCamera == getExtLod
class Camera -> setCullingFrustum == setExtCulling
class Camera -> getCullingFrustum == getExtCulling
class Camera -> _notifyViewport == setViewport
class Camera -> synchroniseBaseSettingsWith 融入移去
class Camera -> setWindowImpl 融入移去
class Camera -> setWindow == setSubView
class Camera -> getWindowPlanes == getSubClip
class Camera -> getPixelDisplayRatio == getPixelRatio
class Camera -> _autoTrack == updateFocus
class Camera -> getCameraToViewportRay 三参数无效移去
class Camera -> getCameraToViewportRay == getRay
class Camera -> getCameraToViewportBoxVolume 三参数无效移去
class Camera -> getCameraToViewportBoxVolume == getVolume
class Camera -> getViewMatrix == 1个参数的 参数反义
class Camera -> forwardIntersect getRayForwardIntersect 移动到 PlaneOptimalShadowGenCamera 中
class Camera -> mCullFrustum == mLod
class Camera -> mLodCamera == mLod
class Camera -> setFixedYawAxis == setCustomYaw
class Camera -> mAutoTrackTarget == mFocusNode
class Camera -> mAutoTrackOffset == mFocusOffset
class Camera -> mPixelDisplayRatio == mPixelRatio
class Camera -> mSceneDetail == mPolygonMode
class Camera -> mUseMinPixelSize == mPixelLimit
class Camera -> mVisFacesLastRender == mTriCount
class Camera -> mVisBatchesLastRender == mBatchCount
class Camera -> mWLeft == mSubLeft
class Camera -> mWTop == mSubTop
class Camera -> mWRight == mSubRight
class Camera -> mWBottom == mSubBottom
class Camera -> mSceneLodFactor == mLodFactor
class Camera -> mWindowClipPlanes == mSubClips
class Camera -> mYawFixed == mCustomYaw
class Camera -> mYawFixedAxis == mCustomYawAxis
class Camera -> mLastViewport == mViewport
class Camera -> mWindowSet == mSubMode
class Camera -> mRecalcWindow == mSubClipDirty
//--------------------------------------------------------------------------
class CameraListener -> 加入 onCreate
class CameraListener -> cameraPreRenderScene == onCull
class CameraListener -> cameraPostRenderScene == onRender
class CameraListener -> cameraDestroyed == onDestroy
//--------------------------------------------------------------------------
class ScriptAnalyze -> getBoolean == getValue
class ScriptAnalyze -> getInt == getValue
class ScriptAnalyze -> getUInt == getValue
class ScriptAnalyze -> getString == getValue
class ScriptAnalyze -> getFloat == getValue
class ScriptAnalyze -> getDouble == getValue
class ScriptAnalyze -> getSceneBlendFactor == getValue
class ScriptAnalyze -> getCompareFunction == getValue
class ScriptAnalyze -> getNodeAt == getIterator
class ScriptAnalyze -> 加入 getNode
class ScriptAnalyze -> translate == analyze
class ScriptAnalyze -> processNode 使用 analyze 代替
class ScriptAnalyze ->
//--------------------------------------------------------------------------
class ObjectScriptNode -> getVariables 融入移去
class ObjectScriptNode ->
class ObjectScriptNode ->
class ObjectScriptNode ->
//--------------------------------------------------------------------------
无用移去 PreApplyTextureAliasesScriptCompilerEvent
//--------------------------------------------------------------------------
class ScriptAnalyzeManager 融入到 ScriptCompilerManager 概念分离出 ScriptAnalyzeFactory
class ScriptAnalyzeManager -> getNumTranslators 无用移去
class ScriptAnalyzeManager -> getTranslator == create
ScriptCompilerManager 改名 ScriptAnalyzeManager
ScriptAnalyzeManager -> clearTranslatorManagers 移去
//--------------------------------------------------------------------------
class ScriptCompilerManager -> addTranslatorManager == addFactory
class ScriptCompilerManager -> removeTranslatorManager == removeFactory
class ScriptCompilerManager -> 加入 getFactory
class ScriptCompilerManager -> mManagers == mFactory
class ScriptCompilerManager -> mBuiltinTranslatorManager 无用移去
class ScriptCompilerManager ->
//--------------------------------------------------------------------------
class ScriptCompiler -> convertToAST 融入移去
class ScriptCompiler -> addError == error
class ScriptCompiler ->
class ScriptCompiler ->
class ScriptCompiler ->
class ScriptCompiler ->
class ScriptCompiler ->
class ScriptCompiler ->
class ScriptCompiler ->
//--------------------------------------------------------------------------
class PosNode -> TransformSpace == SpaceMode
class PosNode -> TS_LOCAL == SM_Local
class PosNode -> TS_PARENT == SM_Env
class PosNode -> TS_WORLD == SM_Space
class PosNode -> 分离出 Listener 改名 PosListener
class PosNode -> setPos 三参数的移去
class PosNode -> setOri 四参数的移去
class PosNode -> setScale 三参数的移去
class PosNode -> removeAllChildren == removeAll
class PosNode -> createChild == create 2个函数
class PosNode -> removeChild == remove 3个函数
class PosNode -> resetOrientation 无用移去
class PosNode -> numChildren == getCount
class PosNode -> _getFullTransform == getSpaceMatrix
class PosNode -> convertWorldToLocalPosition == toLocal
class PosNode -> convertLocalToWorldPosition == toSpace
class PosNode -> convertWorldToLocalOrientation == toLocal
class PosNode -> convertLocalToWorldOrientation == toSpace
class PosNode -> getInitialPosition == getOriginPos 概念移到 Bone
class PosNode -> getInitialOrientation == getOriginOri 概念移到 Bone
class PosNode -> getInitialScale == getOriginScale 概念移到 Bone
class PosNode -> setInitialState == initState 概念移到 Bone 重叠
class PosNode -> resetToInitialState == resetState 概念移到 Bone 重叠
class PosNode -> setInheritOrientation == setEnvOri
class PosNode -> getInheritOrientation == isEnvtOri
class PosNode -> setInheritScale == setEnvScale
class PosNode -> getInheritScale == isEnvScale
class PosNode -> mParentNotified == mParentValid
class PosNode -> mChildrenToUpdate == mNeedUpdate
class PosNode -> _updateFromParent == 融入移去
class PosNode -> updateFromParentImpl == updateImpl
class PosNode -> createChildImpl == createImpl
class PosNode -> mInitialPosition == mSrcPos 概念移到 Bone
class PosNode -> mInitialOrientation == mSrcOri 概念移到 Bone
class PosNode -> mInitialScale == mSrcScale 概念移到 Bone
class PosNode -> mPosition == mPos
class PosNode -> mOrientation == mOri
class PosNode -> mDerivedPosition == mSpacePos
class PosNode -> mDerivedOrientation == mSpaceOri
class PosNode -> mDerivedScale == mSpaceScale
class PosNode -> mCachedTransformDirty == mDestMatrixValid 反意思
class PosNode -> mInheritOrientation == mEvnOri
class PosNode -> mInheritScale == mEvnScale
class PosNode -> mCachedTransform == mSpaceMatrix
class PosNode -> _getDerivedPosition == getSpacePos
class PosNode -> _getDerivedOrientation == getSpaceOri
class PosNode -> _getDerivedScale == getSpaceScale
class PosNode -> getChildIterator == getChildList
class PosNode -> translate 保留 Vector3f 参数的
class PosNode -> getLocalAxes 融入移去
class PosNode -> queueNeedUpdate processQueuedUpdates ==
    移去到 Engine addUpdate removeUpdate updateNode
class PosNode -> needUpdate == notify
class PosNode -> requestUpdate == addUpdateImpl
class PosNode -> cancelUpdate == removeUpdateImpl
class PosNode -> mNeedUpdate == mUpdateList
class PosNode -> mNeedParentUpdate == mPosUnvalid
class PosNode -> mNeedChildUpdate == mChildUnvalid
class PosNode -> mQueuedForUpdate == mRootUpdate
class PosNode -> _update == update 第一 和第二参数 调位
class PosNode -> mChildren == mChildList
class PosNode -> getDebugRenderable == getGeometry 改 GeometryObj 返回
//--------------------------------------------------------------------------
class PosNode::Listener -> nodeUpdated == updated
class PosNode::Listener -> nodeDestroyed == destroyed
class PosNode::Listener -> nodeAttached == attached
class PosNode::Listener -> nodeDetached == detached
class PosListener -> destroyed == destroy
class PosListener -> attached == attach
class PosListener -> detached == detach
class PosListener -> updated == update
//--------------------------------------------------------------------------
RenderTargetEvent 改名 FrameObjArgs mFrame
RenderTargetViewportEvent 继承 FrameObjArgs 改名 FrameViewArgs  mView
class FrameObjListener -> viewportAdded viewportRemoved 无效概念移去
class FrameObjListener -> preRenderTargetUpdate == onPreFlush
class FrameObjListener -> postRenderTargetUpdate == onEndFlush
class FrameObjListener -> preViewportUpdate == onPreViewFlush
class FrameObjListener -> postViewportUpdate == onEndViewFlush
//--------------------------------------------------------------------------
ShadowRenderableFlags == VolumeType
SRF_EXTRUDE_TO_INFINITY == VT_Infinity
SRF_INCLUDE_LIGHT_CAP == VT_FrontCap
SRF_INCLUDE_DARK_CAP == VT_BackCap
SRF_SOFTWARE == VT_Software
//--------------------------------------------------------------------------
class ShadowObj -> getShadowVolumeRenderableIterator == getVolumeList
class ShadowObj -> hasEdgeList == isEdgeExist
class ShadowObj -> getLightCapBounds == getFrontCapAABB
class ShadowObj -> getDarkCapBounds == getBackCapAABB
class ShadowObj -> getPointExtrusionDistance == getExtrudeDistance
class ShadowObj -> extrudeVertices == extrude
class ShadowObj -> generateShadowVolume == generate
class ShadowObj -> extrudeBounds 融入移去
class ShadowObj -> updateEdgeListLightFacing 融入移去
class ShadowObj -> getExtrusionDistance 融入移去
class ShadowObj -> getCastShadows 移去流下 SpaceObj 中
class ShadowObj -> mWorldDarkCapBounds == mDarkCapAABB
//--------------------------------------------------------------------------
class VertexData -> VertexData 构造函数 在 BufferManager 中加入 create 概念
class VertexData -> vertexDeclaration == mDefine 融入体系
class VertexData -> vertexBufferBinding == mIndex 融入体系
class VertexData -> hasGaps 融入移去
class VertexData -> closeGapsInBindings == opt
class VertexData -> hwAnimationDataList == mFusionData
class VertexData -> VertexBufferBindingMap == BindingList
class VertexData -> VertexElementList == VertexUnitList
class VertexData -> closeGaps(NewMap &) 融入移去 加入 optAttach 概念
class VertexData -> getVertexSize == getUnitSize
class VertexData -> mMgr == mMag
class VertexData -> getOrganised reorganiseBuffers 2函数 == build 2函数
class VertexData -> getNextIndex == getFreeAttachIndex
class VertexData -> getMaxSource == mBufferCount
class VertexData -> vertexStart == mOffset
class VertexData -> vertexCount == mCount -> setCount getCount
class VertexData -> mDeleteDclBinding 移去
class VertexData -> VertexDeclaration * clone == copy(VertexData *)
class VertexData -> mElementList == mUnits --> getUnits
class VertexData -> mBindingMap == mBindingList --> getAttachs
class VertexData -> prepareForShadowVolume == rebuild
class VertexData -> hardwareShadowVolWBuffer == mExtData setExt getExt
class VertexData -> HardwareAnimationData == Fusion
class VertexData -> HardwareAnimationDataList == FusionList
class VertexData -> hwAnimDataItemsUsed == mFusionIndex;
class VertexData -> HWAniData HWAniList
    mFusionData mFusionIndex -> mHWAni HardwareAnimation
class VertexData -> allocateHardwareAnimationElements -> HardwareAnimation ==
    setCount 加入 VertexData 第一参数
class VertexData -> vertexElementLess 融入 __VertexDataLess
class VertexData -> getLastBoundIndex 融入移去
class VertexData -> getHasInstanceData （hasInstanceData）== isInstanceValid 无用移去
class VertexData -> getNextFreeTextureCoordinate == getCount(VertexType) VT_Tex_Coord
class VertexData -> removeUnusedBuffers == optValidAttach
class VertexData -> convertPackedColour 移到 VertexUnit 加入 VertexData * 第一参数
class VertexData ->
class VertexData -> add(DataType, VertexType) 参数提前2位
class VertexData -> insert(DataType, VertexType) 参数提前2位
class VertexData -> modify(DataType, VertexType) 参数提前2位
class VertexData ->
class VertexData ->
//--------------------------------------------------------------------------
class GeometryRaw -> useGlobalInstancingVertexBufferIsAvailable == mGeometryMark
class GeometryRaw -> useIndexes == mGeometryMark
class GeometryRaw -> operationType == mType
class GeometryRaw -> vertexData == mVertex
class GeometryRaw -> indexData == mIndex
class GeometryRaw -> srcRenderable 无用移去
class GeometryRaw -> numberOfInstances == mInstanceCount
//--------------------------------------------------------------------------
class SubMeshLodGeometryLink -> vertexData == mVertex
class SubMeshLodGeometryLink -> indexData == mIndex
//--------------------------------------------------------------------------
//--------------------------------------------------------------------------
EdgeListBuilder::Geometry -> indexData == mIndex
//--------------------------------------------------------------------------
class GeoEdget -> addVertexData == addVertex
class GeoEdget -> addIndexData == addIndex
class GeoEdget -> EdgeGroup::vertexSet == mVertexDataIndex
class GeoEdget -> EdgeGroup::triStart == mOffset
class GeoEdget -> EdgeGroup::triCount == mCount
class GeoEdget -> EdgeGroup::edges == mEdgeList
class GeoEdget -> EdgeGroup -> vertexData == mVertex
class GeoEdget -> Edge::triIndex == mTriIndex
class GeoEdget -> Edge::vertIndex == mVertIndex
class GeoEdget -> Edge::sharedVertIndex == mLocalVertIndex
class GeoEdget -> Edge::degenerate == mAlone
class GeoEdget -> Triangle::sharedVertIndex == mLocalVertIndex
class GeoEdget -> Triangle::indexSet == mIndexDataIndex
class GeoEdget -> Triangle::vertexSet == mVertexDataIndex
class GeoEdget -> Triangle::vertIndex == mVertIndex
class GeoEdget -> edgeGroups == mGeoList
class GeoEdget -> triangles == mTriangleList
class GeoEdget -> triangleFaceNormals == mNormalsList
class GeoEdget -> triangleLightFacings == mViewPosList
class GeoEdget -> isClosed == mCloseUp
class GeoEdget -> log 无用移去
class GeoEdget -> updateTriangleLightFacing == updateView
class GeoEdget -> updateFaceNormals == updateNormals
class GeoEdget ->
//--------------------------------------------------------------------------
class ShaderChTextureUnit -> getNumMipmaps == getMipmapCount
class ShaderChTextureUnit -> setNumMipmaps == setMipmapCount
class ShaderChTextureUnit ->  _prepare _unprepare _load _unload == plan unplan load unload
class ShaderChTextureUnit -> _notifyNeedsRecompile == notify
class ShaderChTextureUnit -> getTextureType == getType
class ShaderChTextureUnit -> setHardwareGammaEnabled == setHardwareSRGB
class ShaderChTextureUnit -> isHardwareGammaEnabled == isHardwareSRGB
class ShaderChTextureUnit -> TextureAddressingMode 移到 ShaderChTexture
class ShaderChTextureUnit -> TextureCubeFace 移到 Texture
class ShaderChTextureUnit -> setTextureBorderColour == setBorderColour
class ShaderChTextureUnit -> getTextureBorderColour == getBorderColour
class ShaderChTextureUnit -> hasViewRelativeTextureCoordinateGeneration == isCameraRelation
class ShaderChTextureUnit -> applyTextureAliases 无用概念
class ShaderChTextureUnit -> setTextureMipmapBias == setMipmapBias
class ShaderChTextureUnit -> getTextureMipmapBias == getMipmapBias
class ShaderChTextureUnit -> setTextureAnisotropy == setAnisotropy
class ShaderChTextureUnit -> getTextureAnisotropy == getAnisotropy
class ShaderChTextureUnit -> setTextureScroll 2参数 使用 setTextureUScroll setTextureVScroll代替
class ShaderChTextureUnit -> setTextureScale 2参数 使用 setTextureUScale setTextureVScale
class ShaderChTextureUnit -> mTextureNameAlias setTextureNameAlias getTextureNameAlias
class ShaderChTextureUnit -> mUMod == mUOft
class ShaderChTextureUnit -> mVMod == mVOft
class ShaderChTextureUnit -> TextureEffectType 分离出 ET_ENVIRONMENT_MAP ET_PROJECTIVE_TEXTURE
    == getEnvMapType mEnvMapType isEnvMap isProjTexture getProjFrustum mProjFrustum
class ShaderChTextureUnit -> setTextureUScroll == setUOft
class ShaderChTextureUnit -> getTextureUScroll == getUOft
class ShaderChTextureUnit -> setTextureVScroll == setVOft
class ShaderChTextureUnit -> getTextureVScroll == getVOft
class ShaderChTextureUnit -> setTextureUScale == setUScale
class ShaderChTextureUnit -> getTextureUScale == getUScale
class ShaderChTextureUnit -> setTextureVScale == setVScale
class ShaderChTextureUnit -> getTextureVScale == getVScale
class ShaderChTextureUnit -> setTextureRotate == setRotate
class ShaderChTextureUnit -> getTextureRotate == getRotate
class ShaderChTextureUnit -> setTextureFiltering == setFilter 移去2 3参数的加上三个函数
class ShaderChTextureUnit -> getTextureFiltering == getFilter 分解成三个函数
class ShaderChTextureUnit -> setTextureAddressingMode == setAddressingMode 只有一个参数的移去 / 分离出 3函数
class ShaderChTextureUnit -> getTextureAddressingMode == getAddressingMode
class ShaderChTextureUnit -> setTextureTransform == setMatrix
class ShaderChTextureUnit -> getTextureTransform == getMatrix
class ShaderChTextureUnit -> is3D 融入移去
class ShaderChTextureUnit -> setDesiredFormat == setFormat
class ShaderChTextureUnit -> getDesiredFormat == getFormat
class ShaderChTextureUnit -> getFrameTextureName == getFrame
class ShaderChTextureUnit -> setFrameTextureName == setFrame
class ShaderChTextureUnit -> addFrameTextureName == addFrame
class ShaderChTextureUnit -> deleteFrameTextureName == removeFrame
class ShaderChTextureUnit -> getNumFrames == getFrameCount
class ShaderChTextureUnit -> setTextureCoordSet == setCoordSet
class ShaderChTextureUnit -> getTextureCoordSet == getCoordSet
class ShaderChTextureUnit -> mDesiredFormat == mFormat
class ShaderChTextureUnit -> mTextureCoordSetIndex == mCoordSet
class ShaderChTextureUnit -> mTextureSrcMipmaps == mMipmapCount
class ShaderChTextureUnit -> setProjectiveTexturing 分解成 2个函数 setProjTexture setProjFrustum
class ShaderChTextureUnit -> TextureEffect -> frustum 移去
class ShaderChTextureUnit -> setEnvironmentMap 分解成 2个函数 setEnvMap setEnvMapType
class ShaderChTextureUnit -> setIsAlpha ==
class ShaderChTextureUnit -> getIsAlpha ==
class ShaderChTextureUnit -> mCubic 融入到 mMark
class ShaderChTextureUnit -> mIsAlpha 融入到 mMark
class ShaderChTextureUnit -> mIsDefaultAniso 融入移去
class ShaderChTextureUnit -> mIsDefaultFiltering 融入移去
class ShaderChTextureUnit -> mHwGamma 融入到 mMark __ShaderChTexture_HWSRGB
class ShaderChTextureUnit -> mTextureLoadFailed 融入到 mMark __ShaderChTexture_LoadFailed
class ShaderChTextureUnit -> mTexModMatrix == mMatrix
class ShaderChTextureUnit -> recalcTextureMatrix 融入移去
class ShaderChTextureUnit -> retryTextureLoad 无效移去
class ShaderChTextureUnit -> createAnimController 融入移去
class ShaderChTextureUnit -> createEffectController 融入移去
class ShaderChTextureUnit -> BindingType == TextureDataFetch
class ShaderChTextureUnit -> BT_FRAGMENT == VDF_FS
class ShaderChTextureUnit -> BT_VERTEX == VDF_VS
class ShaderChTextureUnit -> mBindingType == mFetchType
class ShaderChTextureUnit -> setBindingType == setFetchType
class ShaderChTextureUnit -> getBindingType == getFetchType
class ShaderChTextureUnit -> getTextureName == getResourceID
class ShaderChTextureUnit -> setBlank 无效移去
class ShaderChTextureUnit -> isBlank 无效移去
class ShaderChTextureUnit -> getTextureDimensions 融入移去
class ShaderChTextureUnit -> TextureTransformType 独立移出
class ShaderChTextureUnit -> setLayerArrayNames == setSrc(const StringList &
TextureTransformType -> TT_TRANSLATE_U == TTT_U_OFT
TextureTransformType -> TT_TRANSLATE_V == TTT_V_OFT
TextureTransformType 加入 TTT_UV_OFT
TextureTransformType -> TT_SCALE_U == TTT_U_SCALE
TextureTransformType -> TT_SCALE_V == TTT_V_SCALE
TextureTransformType 加入 TTT_UV_SCALE
TextureTransformType -> TT_ROTATE == TTT_ROTATE
class ShaderChTextureUnit -> TextureEffectType WaveformType TextureEffect
    EffectMap
class ShaderChTextureUnit -> isTextureLoadFailing 无效移去
class ShaderChTextureUnit -> getAnimationDuration == getAniTime
class ShaderChTextureUnit -> setTextureName == setSrc
class ShaderChTextureUnit -> setTexture == setSrc
class ShaderChTextureUnit -> setCubicTextureName 使用 setSrc 加入 T_CUBIC_6 概念 (uvw 使用 T_CUBIC)
class ShaderChTextureUnit -> setCubicTexture == 使用 setSrc 加入 T_CUBIC_6 概念 (uvw 使用 T_CUBIC)
class ShaderChTextureUnit -> setAnimatedTextureName == setAni 2个函数
class ShaderChTextureUnit -> setColourOperation 移动到 TextureBlend
class ShaderChTextureUnit -> setColourOperationEx 移动到 TextureBlend
class ShaderChTextureUnit -> setAlphaOperation 移动到 TextureBlend
class ShaderChTextureUnit -> setColourOpMultipassFallback
    mColourBlendFallbackSrc mColourBlendFallbackDest getColourBlendFallbackSrc
        getColourBlendFallbackDest 移去概念
class ShaderChTextureUnit -> getColourBlendMode == getColourBlend
class ShaderChTextureUnit -> getAlphaBlendMode == getAlphaBlend
class ShaderChTextureUnit -> _notifyParent == notify
class ShaderChTextureUnit -> _getTexturePtr == getTexture
class ShaderChTextureUnit -> _setTexturePtr == setTexture
class ShaderChTextureUnit -> ensurePrepared 融入移去
class ShaderChTextureUnit -> ensureLoaded 融入移去
class ShaderChTextureUnit -> mCompositorRefMrtIndex == mMultiIndex
class ShaderChTextureUnit -> getReferencedMRTIndex == getMultiIndex 还加入 setMultiIndex
class ShaderChTextureUnit -> setCompositorReference == setFusion
class ShaderChTextureUnit -> mCompositorRefName == mFrameFusion
class ShaderChTextureUnit -> mCompositorRefTexName == mFusionTex
class ShaderChTextureUnit -> getReferencedCompositorName == getFrameFusion
class ShaderChTextureUnit -> getReferencedTextureName == getFusionTexture
class ShaderChTextureUnit -> _getAnimController == 无效移去
class ShaderChTextureUnit -> mAnimController == mTimeFunc
class ShaderChTextureUnit -> mColourBlendMode == mColourBlend
class ShaderChTextureUnit -> mAlphaBlendMode == mAlphaBlend
class ShaderChTextureUnit -> mFrames == mTexIDList
class ShaderChTextureUnit -> mFramePtrs == mTextures
class ShaderChTextureUnit -> mMinFilter == mMinOP
class ShaderChTextureUnit -> mMagFilter == mMagOP
class ShaderChTextureUnit -> mMipFilter == mMipOP
class ShaderChTextureUnit -> mBorderColour == mBorder
class ShaderChTextureUnit -> EnvMapType == EnvMapMode
class ShaderChTextureUnit -> ENV_PLANAR == ENM_Planar
class ShaderChTextureUnit -> ENV_CURVED == ENM_Sphere
class ShaderChTextureUnit -> ENV_REFLECTION == ENM_Reflection
class ShaderChTextureUnit -> ENV_NORMAL == ENM_Normal
//--------------------------------------------------------------------------
class ShaderChTextureUnit -> setUAddressing setVAddressing setWAddressing getAddressingMode
    setBorderColour getBorderColour isBorderColourValid setMinFilter getMinFilter setMagFilter
    getMagFilter setMipFilter getMipFilter setFilter setAnisotropy getAnisotropy setMipmapBias
    getMipmapBias mMinOP mMagOP mMipOP mMaxAniso mMipmapBias mBorder
//--------------------------------------------------------------------------
类 Sampler 改名 TextureSampleUnit
class TextureSampleUnit -> setAddressingMode getAddressingMode == setMode getMode
class TextureSampleUnit -> setBorderColour getBorderColour mBorderColour == setBorder getBorder mBorder
class TextureSampleUnit -> setCompareEnabled getCompareEnabled mCompareEnabled == setCompare CPM_NONE
class TextureSampleUnit -> setCompareFunction getCompareFunction == setCompareFunc getCompareFunc
class TextureSampleUnit -> mMinFilter mMagFilter mMipFilter == mMinOP mMagOP mMipOP
//--------------------------------------------------------------------------
class ControllerManager -> ControllerValueRealPtr 融入移去
class ControllerManager -> ControllerFunctionRealPtr 融入移去
class ControllerManager -> createTextureWaveTransformer == createFunction 融入移去
class ControllerManager -> TextureEffect -> controller == mTimer
class ControllerManager -> TextureEffect -> type == mType
class ControllerManager -> TextureEffect -> subtype == mEffect
class ControllerManager -> TextureEffect -> arg1 == mFactor
//--------------------------------------------------------------------------
class EquationManager -> createController == create
class EquationManager -> createFrameTimePassthroughController == createInvalidEquation 融入移去
class EquationManager -> mPassthroughFunction == mNormalTimeFunc -> AnimationManager
class EquationManager -> mFrameTimeController == mFrameTimeValue -> AnimationManager
class EquationManager -> getPassthroughControllerFunction == getInvalidEquation
class EquationManager -> mControllers == mEquationList
class EquationManager -> clearControllers == destroyAll
class EquationManager -> updateAllControllers == update
class EquationManager -> destroyController == destroy
class EquationManager -> createTextureAnimator == createAnimation
class EquationManager -> createTextureUVScroller == createUVScroll
class EquationManager -> createTextureUScroller == createUScroll
class EquationManager -> createTextureVScroller == createVScroll
class EquationManager -> createTextureUVScale == createUVScale
class EquationManager -> createTextureUScale == createUScale
class EquationManager -> createTextureVScale == createVScale
class EquationManager -> createTextureRotater == createRotate
class EquationManager -> setTimeFactor -> AnimationManager
class EquationManager -> getTimeFactor -> AnimationManager
class EquationManager -> setFrameDelay = setFixFrame -> AnimationManager
class EquationManager -> getFrameDelay = getFixFrame -> AnimationManager
class EquationManager -> setElapsedTime = setCostTime -> AnimationManager
class EquationManager -> getElapsedTime = getCostTime -> AnimationManager
class EquationManager -> getFrameTimeSource -> getLastTimeValue AnimationManager
class EquationManager -> getInvalidEquation -> getNormalTimeFunc AnimationManager
class EquationManager -> createGpuProgramTimerParam == createTimeParam
//--------------------------------------------------------------------------
class ShaderChTextureUnit -> add 融入移去
class ShaderChTextureUnit -> setTransformAnimation == setFunctionAnimation
//--------------------------------------------------------------------------
class TextureUnitController -> setNumMipmaps == setMipmapCount
//--------------------------------------------------------------------------
class RectGeo -> setCorners == setRect
class RectGeo -> setUVs == setTexCoord
class RectGeo -> setDefaultUVs == 融入移去
class RectGeo -> _initRectangle2D == buildGeo
//--------------------------------------------------------------------------
class DataEquation -> mSource == mSrc
class DataEquation -> mDest == mDst
class DataEquation -> mEnabled == mValid
class DataEquation -> setSource == setInput
class DataEquation -> getSource == getInput
class DataEquation -> setDestination == setOutput
class DataEquation -> getDestination == getOutput
class DataEquation -> getEnabled == isEnable
class DataEquation -> setEnabled == setEnable
class DataEquation -> setFunction == setFunc
class DataEquation -> getFunction == getFunc
class DataEquation -> update == exec
//--------------------------------------------------------------------------
class OptimisedUtil -> extrudeVertices == extrude
class OptimisedUtil -> msImplementation == mImpl
class OptimisedUtil -> concatenateAffineMatrices == affine 第三参数改为第一参数
class OptimisedUtil -> _detectImplementation 融入到 startup
class OptimisedUtil -> 
class OptimisedUtil -> SimdManager
//--------------------------------------------------------------------------
class TempBufferCtl -> licenseExpired == expire
class TempBufferCtl -> getAutoDestroy == isAutoDestroy
//--------------------------------------------------------------------------
class FusionDataCollector -> _getAnimableValueNames 融入移去
class FusionDataCollector -> getAnimableValueNames 融入移去
class FusionDataCollector -> getAnimableDictionaryName == getFusionCollectorType
class FusionDataCollector -> createAnimableValue == createFusionData
class FusionDataCollector -> createAnimableDictionary == setupFusionData
class FusionDataCollector -> initialiseAnimableDictionary == initFusionCollector
class FusionDataCollector -> AnimableDictionaryMap == FusionCollectorList
class FusiomDataCollector -> msAnimableDictionary == mFusionCollectorList
/---------------------------------------------------------------------------
class AniTempBuffer -> extractFrom == map
class AniTempBuffer -> checkoutTempCopies == alloc
class AniTempBuffer -> bindTempCopies == bind 第二参数转义
class AniTempBuffer -> buffersCheckedOut == refill
class AniTempBuffer -> srcPositionBuffer == mSrcPos
class AniTempBuffer -> srcNormalBuffer == mSrcNrls
class AniTempBuffer -> destPositionBuffer == mDstPos
class AniTempBuffer -> destNormalBuffer == mDstNrls
class AniTempBuffer -> posBindIndex == mPosIndex
class AniTempBuffer -> normBindIndex == mNrlsIndex
class AniTempBuffer -> posNormalShareBuffer bindPositions bindNormals == mMark
//--------------------------------------------------------------------------
class AnimableValue -> resetToBaseValue == resetBase
class AnimableValue -> setCurrentStateAsBaseValue == setCurrentAsBase
//--------------------------------------------------------------------------
class OverlayView -> removeChild == remove 1个函数
class OverlayView -> addChildImpl 2 函数 融入移去
class OverlayView -> _addChild 使用 add 代替
class OverlayView -> _removeChild 使用 remove 代替
class OverlayView -> getChildContainerIterator 无用移去
class OverlayView -> mChildContainers 无用移去
class OverlayView -> getChildIterator == getList
class OverlayView -> _positionsOutOfDate == _notifyPos
class OverlayView -> setChildrenProcessEvents == setChildPosCheck
class OverlayView -> isChildrenProcessEvents == isChildPosCheck
class OverlayView -> mChildrenProcessEvents == mChildPosCheck
class
//--------------------------------------------------------------------------
class OverlayGeo -> _notifyWorldTransforms 无用移去
class OverlayGeo -> mXForm 无用移去
class OverlayGeo -> addBaseParameters == initCmd(PropertyCmdSet * dest)
class OverlayGeo -> isContainer 融入移去
class OverlayGeo -> copyFromTemplate == setTemplate
class OverlayGeo -> mName == mID
class OverlayGeo -> getName == getID
class OverlayGeo -> setDimensions == setSize
class OverlayGeo -> _setPosition == setUnitPos
class OverlayGeo -> _setDimensions == setUnitSize
class OverlayGeo -> _setLeft == setUnitLeft
class OverlayGeo -> _getLeft == getUnitLeft
class OverlayGeo -> _setTop == setUnitTop
class OverlayGeo -> _getTop == getUnitTop
class OverlayGeo -> _setWidth == setUnitWidth
class OverlayGeo -> _getWidth == getUnitWidth
class OverlayGeo -> _setHeight == setUnitHeight
class OverlayGeo -> _getHeight == getUnitHeight
class OverlayGeo -> getMaterialName == getMaterialID
class OverlayGeo -> query(GeometryQuery 无用移去
class OverlayGeo -> setMetricsMode == setSizeMode
class OverlayGeo -> getMetricsMode == getSizeMode
class OverlayGeo -> setHorizontalAlignment == setXAlign
class OverlayGeo -> getHorizontalAlignment == getXAlign
class OverlayGeo -> setVerticalAlignment == setYAlign
class OverlayGeo -> getVerticalAlignment == getYAlign
class OverlayGeo -> _getDerivedLeft == getEnvLeft
class OverlayGeo -> _getDerivedTop == getEnvTop
class OverlayGeo -> _getRelativeWidth == getEnvWidth
class OverlayGeo -> _getRelativeHeight == getEnvHeight
class OverlayGeo -> isKeyEnabled 无用移去
class OverlayGeo -> _updateFromParent == updateImpl
class OverlayGeo -> _getClippingRegion == getClipArea
class OverlayGeo -> _setParent == setParent
class OverlayGeo -> getTypeName == getTypeID
class OverlayGeo -> contains 融入移去
class OverlayGeo -> setCloneable == setTemplate
class OverlayGeo -> isCloneable == isTemplate
class OverlayGeo -> getSourceTemplate == getTemplate
class OverlayGeo -> mSourceTemplate == mSrcTemplate
class OverlayGeo -> updatePositionGeometry == updateGeoPos
class OverlayGeo -> updateTextureGeometry == updateGeoTex
class OverlayGeo -> mMaterialName == mMaterialID
class OverlayGeo -> mInitialised == mInit
class OverlayGeo -> mDerivedOutOfDate == mNeedUpdate
class OverlayGeo -> mGeomPositionsOutOfDate == mGeoPosDirty
class OverlayGeo -> mGeomUVsOutOfDate == mGeoTexDirty
class OverlayGeo -> mCloneable == mTemplate
class OverlayGeo -> mDerivedLeft == mEnvLeft
class OverlayGeo -> mDerivedTop == mEnvTop
class OverlayGeo -> mXForm 无用移去
DisplayString == ViewString
//--------------------------------------------------------------------------
class RenderSystemOperation class CustomCompositionPass -> FusionRender
class FusionRender -> createOperation == createInstance
//--------------------------------------------------------------------------
class FusionInstance -> destroyResources 融入移去
class FusionInstance -> LAST = (Nidx)-1; 融入移去
class FusionInstance -> BEST = 0; 移去
class FusionInstance -> addCompositor == create
class FusionInstance -> removeCompositor == destroy
class FusionInstance -> _removeInstance == destroy
class FusionInstance -> getNumCompositors == getCount
class FusionInstance -> removeAllCompositors == destroyAll
class FusionInstance -> getCompositor == get 2
class FusionInstance -> _getOriginalSceneCompositor 无用移去
class FusionInstance -> setCompositorEnabled == setEnable
class FusionInstance -> getCompositors == getList
class FusionInstance -> _markDirty == refresh
class FusionInstance -> preTargetOperation == beginRender -> mFrameResultRestore 第一参数融入
class FusionInstance -> postTargetOperation == endRender -> mFrameResultRestore 第一参数融入
class FusionInstance -> createOriginalScene == createResource
class FusionInstance -> destroyOriginalScene == destroyResource
class FusionInstance -> _queuedOperation == setupRender
class FusionInstance -> clearCompiledState == destroyRender
class FusionInstance -> _compile == build
class FusionInstance -> getPreviousInstance == getPre
class FusionInstance -> getNextInstance == getNext
class FusionInstance -> mInstances == mFusionList
class FusionInstance -> mResultID == mResourceID
class FusionInstance -> mOriginalScene == mOriginal
class FusionInstance -> mOriginalSceneScheme == mSchemeID
class FusionInstance -> mRenderSystemOperations == mRenderList
class FusionInstance -> mOurListener = mRenderListener -> mFrameResultRestore
class FusionInstance -> mCompiledState == mState -> mFrameResultRestore
class FusionInstance -> mOutputOperation = mOperation -> mFrameResultRestore
class FusionInstance -> mOldClearEveryFrameBuffers == mRestoreClearMark -> mFrameResultRestore
class FusionInstance -> mOldVisibilityMask == mRestoreViableMark -> mFrameResultRestore
class FusionInstance -> mOldLodBias == mRestoreLodBias -> mFrameResultRestore
class FusionInstance -> mOldMaterialScheme == mRestoreSchemeID -> mFrameResultRestore
class FusionInstance -> mOldShadowsEnabled == mRestoreShadowEnable -> mFrameResultRestore
class FusionInstance -> mOldFindVisibleObjects == mRestoreAutoVisible -> mFrameResultRestore
class FusionInstance -> RQListener == ResultRenderListener
class FusionInstance -> mAnyCompositorsEnabled == mEnable
class FusionInstance -> mDirty == mRefesh
//--------------------------------------------------------------------------
class OverlayGeoFactory -> getTypeName == getTypeID
//--------------------------------------------------------------------------
class VertexUnit -> getBestColourVertexElementType 移动到 RenderSys
class VertexUnit -> baseVertexPointerToElement == getData 5个函数
class VertexUnit -> getTypeSize == getSize -> DataTypeUtil
class VertexUnit -> getTypeCount == getCount -> DataTypeUtil
class VertexUnit -> multiplyTypeCount == getMultiType -> DataTypeUtil
class VertexUnit -> getSource == mSource
class VertexUnit -> getIndex == mIndex
class VertexUnit -> getOffset == mOffset
class VertexUnit -> setType getType == mType
class VertexUnit -> getSemantic == mSemantic ==mVType
class VertexUnit -> static getBaseType -> DataTypeUtil
class VertexUnit -> convertColourValue == 三个参数 融入移去
class VertexUnit -> convertColourValue == 二个参数 移动到 Engine
    移去 convertColourValue(const Colour & in, Nui32 * out 概念
class VertexUnit -> convertPackedColour == conv
//--------------------------------------------------------------------------
class VertexDeclaration -> findElementBySemantic == (find)get
class VertexDeclaration -> findElementsBySource == (find)get
class VertexDeclaration -> modifyElement == modify
class VertexDeclaration -> removeAllElements == removeAll
class VertexDeclaration -> removeElement == remove 2个函数
class VertexDeclaration -> addElement == add
class VertexDeclaration -> insertElement == insert
class VertexDeclaration -> getAutoOrganisedDeclaration == getOrganised
class VertexDeclaration -> getElements == getUnits
class VertexDeclaration -> getElement == get
class VertexDeclaration -> getElementCount == getCount
class VertexDeclaration -> closeGapsInSource == closeGaps
//--------------------------------------------------------------------------
class WindowDefine -> name == mName
class WindowDefine -> width == mWidth
class WindowDefine -> height == mHeight
class WindowDefine -> useFullScreen == mFull
class WindowDefine -> miscParams == mCustom
//----------------------------------------------------------------------
class AnimationManager -> addInterpolator 无效移去 OK
class AnimationManager -> removeInterpolator 无效移去 OK
class AnimationManager -> getInterpolator 无效移去 OK
class AnimationManager -> InterpolatorMap 无效移去 OK
class AnimationManager -> d_interpolators 无效移去 OK
class AnimationManager -> BasicInterpolatorList 无效移去 OK
class AnimationManager -> d_basicInterpolators 无效移去 OK
class AnimationManager -> generateUniqueAnimationName 无效移去 OK
class AnimationManager -> d_animations 使用 mAnimations
class AnimationManager -> d_uid_counter == mValidID
class AnimationManager -> s_defaultResourceGroup == mGroupID
class AnimationManager -> d_animationInstances == mAnimationInstances
class AnimationManager -> getAnimationAtIdx == getAnimation
class AnimationManager -> instantiateAnimation == createFusion
class AnimationManager -> destroyAnimationInstance == destroyFusion
class AnimationManager -> destroyAllInstancesOfAnimation == destroyAllFusion
class AnimationManager -> destroyAllAnimationInstances  == destroyAllFusion
class AnimationManager -> getAnimationInstanceAtIdx == getFusion
class AnimationManager -> getNumAnimationInstances == getFusionCount
class AnimationManager -> loadAnimationsFromXML loadAnimationsFromString writeAnimationDefinitionToStream
    getAnimationDefinitionAsString 融入移去
class AnimationManager -> _applySceneAnimations 融入移去
class AnimationManager -> autoStepInstances == update
class AnimationManager ->
//--------------------------------------------------------------------------
class ConvexBody -> moveDataFromBody == swap
class ConvexBody -> unlinkPolygon == popPolygon
class ConvexBody -> hasClosedHull == isClosedHull
class ConvexBody -> logInfo 移去
class ConvexBody -> storeEdgesOfPolygon 融入移去
class ConvexBody -> allocateSpace 移去
//--------------------------------------------------------------------------
class StrUtil -> splitFilename = split
class StrUtil -> standardisePath == convPath
class StrUtil -> normalizeFilePath == convPath2

//--------------------------------------------------------------------------
class VertexBufferBinding -> setBinding == attach
class VertexBufferBinding -> unsetBinding == detach
class VertexBufferBinding -> unsetAllBindings == detachAll
class VertexBufferBinding -> getBindings 融入移去
class VertexBufferBinding -> isBufferBound == isAttach
class VertexBufferBinding -> getBuffer == getAttach
class VertexBufferBinding -> getBufferCount = getCount -> getAttachCount
class VertexBufferBinding -> BindingIndexMap == NewMap
//--------------------------------------------------------------------------2012.09.24
class SpaceManager -> _setPass == applyCh
class SpaceManager -> renderShadowVolumeObjects == renderShadows
class SpaceManager -> renderShadowVolumesToStencil == renderStencil
class SpaceManager -> renderVisibleObjectsDefaultSequence == renderSequence
class SpaceManager -> renderVisibleObjectsCustomSequence == renderSequence
class SpaceManager -> setShadowVolumeStencilState == applyStencil
class SpaceManager -> _injectRenderWithPass == infusionObject
class SpaceManager -> validatePassForRendering == validateRendering
class SpaceManager -> validateRenderableForRendering == validateRendering
class SpaceManager -> findLightsAffectingFrustum == findLights
class SpaceManager -> findShadowCastersForLight == findCastList
class SpaceManager -> renderSingleObject == render 分离成2函数
class SpaceManager -> manualRender == render
class SpaceManager -> _notifyAutotrackingSceneNode == setAutoFocus
class SpaceManager -> mAutoTrackingSceneNodes == mAutoFocusList
class SpaceManager -> buildAndSetScissor == applyClip
class SpaceManager -> resetScissor == resetClip
class SpaceManager -> resetLightClip == resetPlaneClip
class SpaceManager -> buildAndSetLightClip == applyPlaneClip
class SpaceManager -> checkCachedLightClippingInfo == 融入移去
class SpaceManager -> updateRenderQueueSplitOptions == updateSplitOptions
class SpaceManager -> updateRenderQueueGroupSplitOptions == updateSplitOptions
class SpaceManager -> ShadowRenderTest -> visit == render apply
class SpaceManager -> _findVisibleObjects == _findVisibles 第二参数 RenderBound 融入到 Camera 概念中
class SpaceManager -> _renderVisibleObjects 融入移去
class SpaceManager -> _queueSkiesForRendering == _queueSkies
class SpaceManager -> _setDestinationRenderSystem == setRender
class SpaceManager -> getDestinationRenderSystem == getRender
class SpaceManager -> createSceneNodeImpl == createNodeImpl 2个函数
class SpaceManager -> deriveShadowCasterPass == deriveCaster
class SpaceManager -> deriveShadowReceiverPass == deriveReceiver
class SpaceManager -> useLights 融入移去
class SpaceManager -> resetViewProjMode 融入移去
class SpaceManager -> useRenderableViewProjMode 融入移去
class SpaceManager -> mSuppressRenderStateChanges == mLockShaderCh
class SpaceManager -> _suppressRenderStateChanges == setLockShaderCh
class SpaceManager -> _areRenderStateChangesSuppressed == isLockShaderCh
class SpaceManager -> setViewMatrix 融入移去
class SpaceManager -> createAutoParamDataSource 融入移去
class SpaceManager -> isLateMaterialResolving == isOptMaterial
class SpaceManager -> setLateMaterialResolving == setOptMaterial
class SpaceManager -> mBestResolving == mOptCh
class SpaceManager -> ensureShadowTexturesCreated == checkSTsCreated
class SpaceManager -> initShadowVolumeMaterials == initSVMaterials
class SpaceManager -> destroyShadowTextures == destroySTs
class SpaceManager -> prepareShadowTextures == prepareSTs
class SpaceManager -> updateGpuProgramParameters == applyGpuProgram
class SpaceManager -> mShadowCamLightMapping == mCamLightList
class SpaceManager -> mCamVisibleObjectsMap == mCamBoundList
class SpaceManager -> mDestRenderSystem == mRenderSys
class SpaceManager -> mCurrentViewport == mView
class SpaceManager -> mShadowTextureCustomCasterPass == mSTCCP
class SpaceManager -> mShadowTextureCustomCasterVPParams == mSTCCVPParams
class SpaceManager -> mInstancedGeometryList == mInstances
class SpaceManager -> mShadowTextureCameras == mCameras 在 ShadowMappingPattern 中
class SpaceManager -> mMovableNameGenerator 融入移去
class SpaceManager -> mShadowTextureConfigList == mTexConfList
class SpaceManager -> mShadowTextureConfigDirty == mTextureValid 反意
class SpaceManager -> mShadowTextureCustomCasterFPParams == mSTCCFPParams
class SpaceManager -> mShadowTextureCustomCasterFragmentProgram = mSTCCFP
class SpaceManager -> mLightsAffectingFrustum == mValidLights
class SpaceManager -> mPassCullingMode == mCullingMode
class SpaceManager -> getSuggestedViewpoint 概念移动到 BspSceneManager
class SpaceManager -> setViewport 融入移去
class SpaceManager -> buildScissor 融入移去
class SpaceManager -> buildLightClip 移动到 Light 类中 getClip
class SpaceManager -> createAnimationState == createFusion
class SpaceManager -> bindGpuProgram == applyGpuProgram
class SpaceManager -> setFog getFogMode getFogColour getFogStart getFogEnd getFogDensity
    mFogMode mFogColour mFogStart mFogEnd mFogDensity == getFog mFog(ShaderChFog 类)
class SpaceManager -> _renderScene == renderSpace 移去第三参数 bool includeOverlays
class SpaceManager -> prepareWorldGeometry 无用概念移去
class SpaceManager -> addRenderQueueListener == add
class SpaceManager -> removeRenderQueueListener == remove
class SpaceManager -> mRenderQueueListeners == mRenderListenerList
class SpaceManager -> materialLess 移动到 Material 改名 LessSort
class SpaceManager -> destroyCamera(Camera * 使用 destroyCamera(SpaceID 代替
class SpaceManager -> hasCamera == isCameraExist
class SpaceManager -> destroyAllCameras == destroyAllCamera
class SpaceManager -> hasLight == isLightExist
class SpaceManager -> createLight 无删除的移去
class SpaceManager -> destroyLight(Light * 使用 destroyLight(SpaceID 代替
class SpaceManager -> destroyAllLights == destroyAllLight
class SpaceManager -> getLightClippingPlanes == getClipPlane
class SpaceManager -> getLightScissorRect == getClipRect
class SpaceManager -> mLightClippingsLastFrame == mLightClipFrame
class SpaceManager -> _notifyLightsDirty == notifyLight
class SpaceManager -> _getLightsDirtyCounter == getLightDirtyMark
class SpaceManager -> mLightListMark
class SpaceManager -> mSceneRoot == mOriginNode
class SpaceManager -> clearScene == destroyAllCreateObj
class SpaceManager -> createEntity == createGeo 移去 const Mesh * 使用 ResourceID 代替
class SpaceManager -> getEntity == getGeo
class SpaceManager -> hasEntity == isGeoExist
class SpaceManager -> initRenderQueue 融入移去
class SpaceManager -> addLodListener == add
class SpaceManager -> removeLodListener == remove
class SpaceManager -> addRenderObjectListener == add
class SpaceManager -> removeRenderObjectListener == remove
class SpaceManager -> getCurrentViewport == getViewport
class SpaceManager -> destroyEntity == destroyGeo(GeometrySpace 使用 destroyEntity(SpaceID 代替
class SpaceManager -> destroyAllEntities == destroyAllGeo
class SpaceManager -> createCustomSpaceObj == createCustomGeo
class SpaceManager -> getCustomSpaceObj == getCustomGeo
class SpaceManager -> hasCustomSpaceObj == isCustomGeoExist
class SpaceManager -> destroyCustomSpaceObj == destroyCustomGeo
class SpaceManager -> destroyAllCustomSpaceObjs == destroyAllCustomGeo
class SpaceManager -> getAmbientLight == getAmbient
class SpaceManager -> createSceneNode == createSpaceNode
class SpaceManager -> getSceneNode == getSpaceNode
class SpaceManager -> destroySceneNode == destroySpaceNode
class SpaceManager -> hasSceneNode == isSpaceNodeExist
class SpaceManager -> getRootSceneNode == getOriginNode
class SpaceManager -> createBillboardChain getBillboardChain hasBillboardChain
    destroyBillboardChain destroyAllBillboardChains == 移去
class SpaceManager -> createRibbonTrail == createOrbit
class SpaceManager -> getRibbonTrail == getOrbit
class SpaceManager -> hasRibbonTrail == isOrbitExist
class SpaceManager -> destroyRibbonTrail == destroyOrbit
class SpaceManager -> destroyAllRibbonTrails == destroyAllOrbit
class SpaceManager -> createBillboardSet == createParticleCtrl
class SpaceManager -> getBillboardSet == getParticleCtrl
class SpaceManager -> hasBillboardSet == isParticleCtrlExist
class SpaceManager -> destroyBillboardSet == destroyParticleCtrl
class SpaceManager -> destroyAllBillboardSets == destroyAllParticleCtrl
class SpaceManager -> showBoundingBoxes == setAABBView
class SpaceManager -> getShowBoundingBoxes == isAABBView
class SpaceManager -> setDisplaySceneNodes == setNodeView
class SpaceManager -> getDisplaySceneNodes == isNodeView
class SpaceManager -> mShowNodeBBoxes == mAABBView
class SpaceManager -> mDisplayNodes == mNodeView
class SpaceManager -> mMovableNameGen 使用 SpaceObj 内部概念代替
class SpaceManager -> createParticleSpace 移去2参数的
class SpaceManager -> hasParticleSpace == isParticleSpaceExist
class SpaceManager -> destroyAllParticleSpaces == destroyAllParticleSpace
class SpaceManager -> _setActiveCompositorChain == setFrameResult
class SpaceManager -> _getActiveCompositorChain == getFrameResult
class SpaceManager -> _updateSceneGraph == updateSpace
class SpaceManager -> getAnimationIterator 无用移去
class SpaceManager -> getAnimations 无用移去
class SpaceManager -> getAnimationStateIterator 无用移去
class SpaceManager -> setWorldGeometry == setSceneGeo 2函数
class SpaceManager -> setWorldGeometryRenderQueue == setSceneGeoRenderGroup
class SpaceManager -> getWorldGeometryRenderQueue == getSceneGeoRenderGroup
class SpaceManager -> setOption == setProperty
class SpaceManager -> getOption == getProperty
class SpaceManager -> hasOption == isPropertyExist
class SpaceManager -> getOptionValues 移去
class SpaceManager -> getOptionKeys == getPropertyList
class SpaceManager -> _pauseRendering == pauseRender
class SpaceManager -> _resumeRendering == resumeRender
class SpaceManager -> SpecialCaseRenderQueueMode SCRQM_INCLUDE SCRQM_EXCLUDE mSpecialMode
    setSpecialCaseRenderQueueMode getSpecialCaseRenderQueueMode 移去概念
class SpaceManager -> addSpecialCaseRenderQueue 概念转变 addExcludeRender
class SpaceManager -> removeSpecialCaseRenderQueue 概念转变 removeExcludeRender
class SpaceManager -> clearSpecialCaseRenderQueues 概念转变 removeAllExcludeRender
class SpaceManager -> isRenderQueueToBeProcessed == isExcludeRenderExist 反义
class SpaceManager -> createPlaneBoundedVolumeQuery == createPlaneSpaceQuery
class SpaceManager -> createIntersectionQuery == createIntersectQuery
class SpaceManager -> ClipResult == ClipType
class SpaceManager -> CLIPPED_NONE == CT_None
class SpaceManager -> CLIPPED_SOME == CT_Some
class SpaceManager -> CLIPPED_ALL == CT_All
class SpaceManager -> setFindVisibleObjects == setAutoVisible
class SpaceManager -> getFindVisibleObjects == isAutoVisible
class SpaceManager -> setVisibilityMask == setVisibleMask
class SpaceManager -> getVisibilityMask == getVisibleMask
class SpaceManager -> _getCombinedVisibilityMask == getEnvVisibleMask
class SpaceManager -> setCameraRelativeRendering == setCameraOrigin
class SpaceManager -> getCameraRelativeRendering == isCameraOrigin
class SpaceManager -> setNormaliseNormalsOnScale == setUnitNormals
class SpaceManager -> getNormaliseNormalsOnScale == isUnitNormals
class SpaceManager -> mCameraRelativeRendering == mCameraOrigin
class SpaceManager -> mResetIdentityView == mIdentityViewMode
class SpaceManager -> mResetIdentityProj == mIdentityProjMode
class SpaceManager -> mNormaliseNormalsOnScale == mUnitNormals
class SpaceManager -> mFlipCullingOnNegativeScale == mNegScaleFlipCull
class SpaceManager -> setFlipCullingOnNegativeScale == setNegScaleFlipCull
class SpaceManager -> getFlipCullingOnNegativeScale == isNegScaleFlipCull
class SpaceManager -> mActiveCompositorChain == mFrameResult
class SpaceManager -> createMovableObject == createSpace
class SpaceManager -> destroyMovableObject == destroySpace
class SpaceManager -> getMovableObjectIterator == getSpace
class SpaceManager -> getMovableObject == getSpace
class SpaceManager -> hasMovableObject == isSpaceExist
class SpaceManager -> injectMovableObject == addSpace
class SpaceManager -> extractMovableObject == removeSpace
class SpaceManager -> extractAllMovableObjectsByType == removeSpace
class SpaceManager -> destroyAllMovableObjectsByType == destroyAllSpace
class SpaceManager -> destroyAllMovableObjects == destroyAllSpace
class SpaceManager -> RenderContext == RenderBase
class SpaceManager -> RenderContext viewport == mView
class SpaceManager -> RenderContext camera == mCamera
class SpaceManager -> RenderContext renderQueue == mQueue
class SpaceManager -> RenderContext activeChain == mFusion
class SpaceManager -> RenderContext rsContext == mFrame
class SpaceManager -> _markGpuParamsDirty 无用移去
class SpaceManager -> _notifyMovableObjectLodChanged == onLodEvent
class SpaceManager -> _notifyEntityMeshLodChanged == onLodEvent
class SpaceManager -> _notifyEntityMaterialLodChanged == onLodEvent
class SpaceManager -> sceneGraphMutex == mSpaceMutex
class SpaceManager -> MovableObjectMap == SpaceMap
class SpaceManager -> createStaticGeometry == createStaticSpace
class SpaceManager -> getStaticGeometry == getStaticSpace
class SpaceManager -> hasStaticGeometry == isStaticSpaceExist
class SpaceManager -> destroyStaticGeometry == destroyStaticSpace
class SpaceManager -> destroyAllStaticGeometry == destroyAllStaticSpace
class SpaceManager -> createInstancedGeometry == createInstanceSpace
class SpaceManager -> getInstancedGeometry == getInstanceSpace
class SpaceManager -> destroyInstancedGeometry == destroyInstanceSpace
class SpaceManager -> destroyAllInstancedGeometry == destroyAllInstanceSpace
class SpaceManager -> mSpecialQueues == mExcludeList
class SpaceManager -> getMovableObjectCollection == getSpaceList == getSpace
class SpaceManager -> _handleLodEvents == prcLodEvent
class SpaceManager -> MovableObjectCollection 融入移去
class SpaceManager -> firePreRenderQueues 融入移去
class SpaceManager -> firePostRenderQueues 融入移去
class SpaceManager -> mMovablesCollectionsMutex 移去
class SpaceManager -> WORLD_GEOMETRY_TYPE_MASK == SpaceGeoMark
class SpaceManager -> LIGHT_TYPE_MASK == LightSpaceMark
class SpaceManager -> ENTITY_TYPE_MASK == SelfGeoMark
class SpaceManager -> STATICGEOMETRY_TYPE_MASK == StaticGeoMark
class SpaceManager -> FRUSTUM_TYPE_MASK == ViewSpaceMark
class SpaceManager -> FX_TYPE_MASK == ParticleSpaceMark
class SpaceManager -> USER_TYPE_MASK_LIMIT == CustomSpaceMark
class SpaceManager -> fireRenderQueueStarted == onPreRenderQueue 融入移去
class SpaceManager -> fireRenderQueueEnded == onEndRenderQueue 融入移去
class SpaceManager -> prepareRenderQueue == prepareQueue
class SpaceManager -> renderSequence == renderQueue
class SpaceManager -> fireRenderSingleObject == onRender
class SpaceManager -> mRenderObjectListeners == mGeoRenderLisList
class SpaceManager -> mMaterialLodEvents == mMatLodEventList
class SpaceManager -> mMeshLodEvents == mMeshLodEventList
class SpaceManager -> mSpaceLodEvents == mSpaceLodEventList
class SpaceManager -> mVisibilityMask == mVisibleMark
class SpaceManager -> mGpuParamsDirty == mGpuParamMark
class SpaceManager -> mLastLightHashGpuProgram == mLastProgramLightMark
class SpaceManager -> mAutoParamDataSource == mSyncParams
class SpaceManager -> mFindVisibleObjects == mAutoVisible
class SpaceManager -> mLastQueueUseCustom == mLastCustomRender
class SpaceManager -> mWorldGeometryRenderQueue == mSceneGeoRenderGroup
class SpaceManager -> mCameraRelativePosition == mCameraRelPos
class SpaceManager -> mCameras == mCameraList
class SpaceManager -> mMovablesCollections == mSpaceMapList
class SpaceManager -> mTempXform == mTempSpace
class SpaceManager -> mCachedViewMatrix == mTempViewMatrix
class SpaceManager -> mLightClippings 分离出 mLightClipList mLightPlaneClipList
class SpaceManager -> getTypeName == getTypeID
//--------------------------------------------------------------------------
class RenderGroupFusion -> getRenderQueueGroupID == getRenderGroup
class RenderGroupFusion -> setSolidsOrganisation 无效移去
class RenderGroupFusion -> getSolidsOrganisation 无效移去
class RenderGroupFusion -> setSuppressShadows == setShadowEnable 反义
class RenderGroupFusion -> getSuppressShadows == getShadowEnable 反义
class RenderGroupFusion -> setSuppressRenderStateChanges == setLockShaderCh 转为设置通道
class RenderGroupFusion -> getSuppressRenderStateChanges == isLockShaderCh 转为设置通道
class RenderGroupFusion -> getInvocationName == getName
class RenderGroupFusion -> mRenderQueueGroupID == mRenderGroup
class RenderGroupFusion -> mInvocationName == mName
class RenderGroupFusion -> mSolidsOrganisation 无效移去
class RenderGroupFusion -> mSuppressShadows == mShadowEnable 反义
class RenderGroupFusion -> mSuppressRenderStateChanges == mLockShaderCh 转为设置通道
class RenderGroupFusion -> RENDER_QUEUE_INVOCATION_SHADOWS 无用移去
class RenderGroupFusion -> invoke 加入第二参数 RenderPattern * 改名 render
//--------------------------------------------------------------------------
AnimationStateMap == AnimationFusions
EnabledAnimationStateList == FusionList
//--------------------------------------------------------------------------
class AnimationFusionObj -> hasEnabledAnimationState == isValid
class AnimationFusionObj -> createAnimationState == createFusion 使用 addFusion
class AnimationFusionObj -> removeAnimationState == removeFusion
class AnimationFusionObj -> _notifyDirty == _notifyFrame
class AnimationFusionObj -> getDirtyFrameNumber == getFrameMark
class AnimationFusionObj -> _notifyAnimationStateEnabled == _notifyEnable
class AnimationFusionObj -> removeAllAnimationStates == removeAllFusion
class AnimationFusionObj -> mAnimationStates == mFusions
class AnimationFusionObj -> mEnabledAnimationStates == mValidFusions
class AnimationFusionObj -> mDirtyFrameNumber == mFrameMark
class AnimationFusionObj -> copyMatchingState == copyState 参数的概念反义
//--------------------------------------------------------------------------
class SyncParticle -> setDimensions == setSize
class SyncParticle -> getOwnWidth == getWidth
class SyncParticle -> getOwnHeight == getHeight
class SyncParticle -> resetDimensions == inheritSize
class SyncParticle -> hasOwnDimensions == isInheritSize 反义
class SyncParticle -> _notifyOwner 融入移去
class SyncParticle -> isUseTexcoordRect == isInheritTexCoord 反义
class SyncParticle -> setTexcoordRect == setTexCoordRect
class SyncParticle -> getTexcoordRect == getTexCoordRect
class SyncParticle -> setTexcoordRect 移去四参数的
class SyncParticle -> setTexcoordIndex == setCtrlTexCoord
class SyncParticle -> getTexcoordIndex == getCtrlTexCoord
class SyncParticle -> mParentSet == mCtrl
class SyncParticle -> mTexcoordRect == mTexCoord
class SyncParticle -> mTexcoordIndex == mInheritTexCoord
class SyncParticle -> mOwnDimensions == mSizeValid
class SyncParticle -> mUseTexcoordRect == mTexCoordValid
//--------------------------------------------------------------------------
class ParticleCtrl -> BillboardRotationType == 移入ParticleCtrl RotationMode
class ParticleCtrl -> BBR_VERTEX == RM_VertexPos
class ParticleCtrl -> BBR_TEXCOORD == RM_TexCoord
class ParticleCtrl -> BillboardType == 移入ParticleCtrl CtrlMode
class ParticleCtrl -> BBT_POINT == CM_Parallel_View
class ParticleCtrl -> BBT_ORIENTED_COMMON == CM_Parallel_Ctrl
class ParticleCtrl -> BBT_ORIENTED_SELF == CM_Parallel_Self
class ParticleCtrl -> BBT_PERPENDICULAR_COMMON == CM_Vertical_Ctrl
class ParticleCtrl -> BBT_PERPENDICULAR_SELF == CM_Vertical_Self
class ParticleCtrl ->
class ParticleCtrl -> BillboardOrigin == 移入ParticleCtrl OriginType
class ParticleCtrl -> BBO_CENTER_LEFT == OT_Center_Left
class ParticleCtrl -> BBO_CENTER == OT_Center
class ParticleCtrl -> BBO_CENTER_RIGHT == OT_Center_Right
class ParticleCtrl -> BBO_TOP_LEFT == OT_Top_Left
class ParticleCtrl -> BBO_TOP_CENTER == OT_Top_Center
class ParticleCtrl -> BBO_TOP_RIGHT == OT_Top_Right
class ParticleCtrl -> BBO_BOTTOM_LEFT == OT_Bottom_Left
class ParticleCtrl -> BBO_BOTTOM_CENTER == OT_Bottom_Center
class ParticleCtrl -> BBO_BOTTOM_RIGHT == OT_Bottom_Right
class ParticleCtrl -> createBillboard == create 4参数的移去
class ParticleCtrl -> getBillboard == get
class ParticleCtrl -> removeBillboard ==  remove
class ParticleCtrl -> getNumBillboards == getCount
class ParticleCtrl -> setBillboardType == setCtrlMode
class ParticleCtrl -> getBillboardType == getCtrlMode
class ParticleCtrl -> mRadixSorter == __ParticleCtrlRadixSorter
class ParticleCtrl -> setDefaultWidth == setParticleWidth
class ParticleCtrl -> setDefaultHeight == setParticleHeight
class ParticleCtrl -> setDefaultDimensions 使用 setParticleWidth setParticleHeight 代替
class ParticleCtrl -> getDefaultWidth == getParticleWidth
class ParticleCtrl -> getDefaultHeight == getParticleHeight
class ParticleCtrl -> getMaterialName == getMaterialID
class ParticleCtrl -> mMaterialName == mMaterialID
class ParticleCtrl -> mBoundingRadius == mBoundRange
class ParticleCtrl -> setAutoextend == setExpandParticle
class ParticleCtrl -> getAutoextend == isExpandParticle
class ParticleCtrl -> setSortingEnabled == setSortEnable
class ParticleCtrl -> getSortingEnabled == isSortEnable
class ParticleCtrl -> mBillboardType == mDirectionMode
class ParticleCtrl -> mTextureCoords == mTexCoordList
class ParticleCtrl -> _sortBillboards 融入移去
class ParticleCtrl -> setBillboardOrigin == setOriginType
class ParticleCtrl -> getBillboardOrigin == getOriginType
class ParticleCtrl -> setBillboardRotationType == setRotationMode
class ParticleCtrl -> getBillboardRotationType == getRotationMode
class ParticleCtrl -> increasePool 融入移去
class ParticleCtrl -> mBillboardPool == mParticlePool
class ParticleCtrl -> mActiveBillboards == mActiveList
class ParticleCtrl -> mFreeBillboards == mFreeList
class ParticleCtrl -> getParametricOffsets 融入移去
class ParticleCtrl -> setCullIndividually == setCullItself
class ParticleCtrl -> getCullIndividually == isCullItself
class ParticleCtrl -> setCommonDirection == setCtrlDirection
class ParticleCtrl -> getCommonDirection == getCtrlDirection
class ParticleCtrl -> setPointRenderingEnabled == setPointSprites
class ParticleCtrl -> isPointRenderingEnabled == isPointSprites
class ParticleCtrl -> setCommonUpVector == setCtrlUp
class ParticleCtrl -> getCommonUpVector == getCtrlUp
class ParticleCtrl -> setTextureStacksAndSlices == setTexCoordGrid
class ParticleCtrl -> setUseAccurateFacing == setParallelView
class ParticleCtrl -> getUseAccurateFacing == isParallelView
class ParticleCtrl -> mCurrentCamera == mCamera
class ParticleCtrl -> mNumVisibleBillboards == mVisableCount
class ParticleCtrl -> setAutoUpdate == setUpdatePerFrame
class ParticleCtrl -> getAutoUpdate == isUpdatePerFrame
class ParticleCtrl -> getTextureCoords 改概念 getTexCoordCount
class ParticleCtrl -> setTextureCoords == setTextureCoord
class ParticleCtrl -> mDefaultWidth == mParticleWidth
class ParticleCtrl -> mDefaultHeight == mParticleHeight
class ParticleCtrl -> mCamDir == mCameraLocalDir
class ParticleCtrl -> mCamQ == mCameraLocalOri
class ParticleCtrl -> mCamPos == mCameraLocalPos
class ParticleCtrl -> mCamX == mTempLocalX
class ParticleCtrl -> mCamY == mTempLocalY
class ParticleCtrl -> mLeftOff == mOriginLeft
class ParticleCtrl -> mRightOff == mOriginRight
class ParticleCtrl -> mTopOff == mOriginTop
class ParticleCtrl -> mBottomOff == mOriginBottom
class ParticleCtrl -> mMainBuf == mGeoBuffer
class ParticleCtrl -> mLockPtr == mGeoBufferPtr
class ParticleCtrl -> mCommonDirection == mCtrlDir
class ParticleCtrl -> mCommonUpVector == mCtrlUp
class ParticleCtrl -> billboardVisible == isCulling 反义
class ParticleCtrl -> _createBuffers == createGeoBuffer
class ParticleCtrl -> _destroyBuffers == destroyGeoBuffer
class ParticleCtrl -> genVertices == addParticle 交换参1参2位置
class ParticleCtrl -> _notifyBillboardResized == onParticleSize
class ParticleCtrl -> _notifyBillboardRotated == onParticleRotate
class ParticleCtrl -> notifyBillboardDataChanged == onParticleChange
class ParticleCtrl -> beginBillboards == onBeginRender
class ParticleCtrl -> injectBillboard == onRender
class ParticleCtrl -> endBillboards == onEndRender
class ParticleCtrl -> genVertOffsets == calcOffset
class ParticleCtrl -> genBillboardAxes 融入移去
class ParticleCtrl -> mPointRendering == mPointSprites
class ParticleCtrl -> mCullIndividual == mCullItself
class ParticleCtrl -> mAllDefaultSize == mSameSize
class ParticleCtrl -> mAutoExtendPool == mExpandParticle
class ParticleCtrl -> mSortingEnabled == mSortEnable
class ParticleCtrl -> mAccurateFacing == mParallelView
class ParticleCtrl -> mAllDefaultRotation == mSameRotation
class ParticleCtrl -> mWorldSpace == mLocalSpace 反义
class ParticleCtrl -> mBuffersCreated == mGeoBufCreate
class ParticleCtrl -> mAutoUpdate == mUpdatePerFrame
class ParticleCtrl -> mBillboardDataChanged == mParticleChange
class ParticleCtrl -> _getSortMode == getSortMode
class ParticleCtrl -> setBillboardsInWorldSpace == setLocalSpace 反义
class ParticleCtrl -> updateSpaceAABB == updateBounds
//--------------------------------------------------------------------------
class RenderPattern::Listener -> preUpdateSceneGraph firePreUpdateSceneGraph 移去
class RenderPattern::Listener -> postUpdateSceneGraph firePostUpdateSceneGraph 移去
class RenderPattern::Listener -> firePreFindVisibleObjects preFindVisibleObjects == onFindGeometry
class RenderPattern::Listener -> firePostFindVisibleObjects postFindVisibleObjects 移去
class RenderPattern::Listener -> shadowTexturesUpdated fireShadowTexturesUpdated 移去
class RenderPattern::Listener -> shadowTextureCasterPreViewProj 移去
class RenderPattern::Listener -> shadowTextureReceiverPreViewProj fireShadowTexturesPreReceiver 移去
class RenderPattern::Listener -> sortLightsAffectingFrustum 移去
class RenderPattern::Listener -> sceneManagerDestroyed == onDestroy
class RenderPattern::Listener -> fireShadowTexturesPreCaster == onCast 改变
class RenderPattern -> mSMInitDone == mInit
class RenderPattern -> mShadowCasterRenderBackFaces == mBackFaceInCast
class RenderPattern -> mSuppressShadows == mShadowEnable 转义
class RenderPattern -> mShadowUseInfiniteFarPlane == mInfiniteFar
class RenderPattern -> setInfiniteFarBound == setInfiniteFar
class RenderPattern -> isInfiniteFarBound == isInfiniteFar
class RenderPattern -> mShadowAdditiveLightClip == mLightClipPlane
class RenderPattern -> setShadowCasterRenderBackFaces == setBackFaceInCast
class RenderPattern -> getShadowCasterRenderBackFaces == isBackFaceInCast
class RenderPattern -> 
class RenderPattern -> splitRenderQueue == prepare
class RenderPattern -> splitRenderQueueGroup == prepare
class RenderPattern -> render renderImpl renderBasic 去第二参数 OrganisationMode 使用 OM_PASS_GROUP
//--------------------------------------------------------------------------
class JobResult -> getRequest == getJob
class JobResult -> mRequest == mJob
class JobResult -> succeeded == isComplete
//--------------------------------------------------------------------------
class RenderFilter -> visit == apply render
class RenderFilter -> apply render 2个单参数函数 合并
//--------------------------------------------------------------------------
class RenderGroup -> setShadowsEnabled == setShadowEnable
class RenderGroup -> getShadowsEnabled == isShadowEnable
class RenderGroup -> addOrganisationMode == addSort
class RenderGroup -> defaultOrganisationMode == resetSort
class RenderGroup -> resetOrganisationModes == removeSort(RenderSortMode om)
class RenderGroup -> getPriorityMap == getLevelList
class RenderGroup -> mPriorityGroups == mRenderList
class RenderGroup -> mOrganisationMode == mSortMark
class RenderGroup -> setSplitNoShadow setSplitLightingType
    setCastersNotBeReceivers mSplitLightingType mSplitNoShadow
    mCastersNotReceivers
class RenderGroup -> mShadowsEnabled == mShadowsEnable
//--------------------------------------------------------------------------
class ProxyGpuProgram -> mChosenDelegate == mCurrent
class ProxyGpuProgram -> addDelegateProgram == addCandidate
class ProxyGpuProgram -> clearDelegatePrograms == removeAllCandidate
class ProxyGpuProgram -> _getDelegate == getCurrent
class ProxyGpuProgram -> chooseDelegate 融入移去
class ProxyGpuProgram -> mDelegateNames == mCandidateList
//--------------------------------------------------------------------------
class SysSyncParam -> mMainCamBoundsInfo (RenderBound) 使用 mCurrentCamera 代替
class SysSyncParam -> setPointParameters == setPoint
class SysSyncParam -> incPassNumber 无用移去
class SysSyncParam -> updateLightCustomGpuParameter 融入到 GpuProgramParam
class SysSyncParam -> 
class SysSyncParam -> 
class SysSyncParam -> 
class SysSyncParam -> 
//--------------------------------------------------------------------------
class GpuProgram -> _getBindingDelegate == getMain
class GpuProgram -> setupBaseParamDictionary == initCmd(PropertyCmdSet * dest)
class GpuProgram -> isSupported == isValid
class GpuProgram -> setSyntaxCode == setSyntaxType
class GpuProgram -> getSyntaxCode == getSyntaxType
class GpuProgram -> setSourceFile == setProgramSrc
class GpuProgram -> getSourceFile == getProgramSrc
class GpuProgram -> setSource == setProgramCode
class GpuProgram -> getSource == getProgramCode
class GpuProgram -> createParameters == createParam
class GpuProgram -> getDefaultParameters == getDefaultParam
class GpuProgram -> hasDefaultParameters 使用 getDefaultParam 融入移去
class GpuProgram -> setSkeletalAnimationIncluded == setVertexMatrixFusion
class GpuProgram -> isSkeletalAnimationIncluded == isVertexMatrixFusion
class GpuProgram -> setMorphAnimationIncluded == setVertexInterpolation
class GpuProgram -> isMorphAnimationIncluded == isVertexInterpolation
class GpuProgram -> setPoseAnimationIncluded == setVertexOffsetCount
class GpuProgram -> getNumberOfPosesIncluded == getVertexOffsetCount
class GpuProgram -> setVertexTextureFetchRequired == setVertexTextureFetch
class GpuProgram -> isVertexTextureFetchRequired == isVertexTextureFetch
class GpuProgram -> isPoseAnimationIncluded == 使用 getVertexOffsetCount 代替
class GpuProgram -> setAdjacencyInfoRequired == setAdjacencyPrimitive
class GpuProgram -> isAdjacencyInfoRequired == isAdjacencyPrimitive
class GpuProgram -> mPoseAnimation == mFusionCount
class GpuProgram -> mDefaultParams == mParams
class GpuProgram -> mCompileError == mErrorCode
class GpuProgram -> mSyntaxCode == mSyntax
class GpuProgram -> mFilename == mFile
class GpuProgram -> setManualNamedConstants == setParamDef
class GpuProgram -> getConstantDefinitions == getParamDef
class GpuProgram -> getNamedConstants 使用 getParamDef() != 0 代替
class GpuProgram -> setManualNamedConstantsFile == setParamDefSrc
class GpuProgram -> getManualNamedConstantsFile ==  getParamDefSrc
class GpuProgram -> loadFromSource == loadCodeImpl(const VString & code)
class GpuProgram -> isRequiredCapabilitiesSupported == isSysSupport
class GpuProgram -> createLogicalParameterMappingStructures 融入移去
class GpuProgram -> createNamedParameterMappingStructures 融入移去
class GpuProgram -> mManualNamedConstantsFile == mParamDefFile
class GpuProgram -> mLoadedManualNamedConstants == mParamValid
class GpuProgram -> mLoadFromFile == mProgramSrcValid
class GpuProgram -> mSkeletalAnimation == mVertexMatrixValid
class GpuProgram -> mMorphAnimation == mVertexInterpolation
class GpuProgram -> mNeedsAdjacencyInfo == mAdjacencyPrimitive
class GpuProgram -> getPassFogStates == isEnvFogEnable
class GpuProgram -> getPassTransformStates == isEnvSpaceEnable
class GpuProgram -> getPassSurfaceAndLightStates 分离出 isEnvColourEnable isEnvLightEnable
class GpuProgram -> hasCompileError == getErrorCode
class GpuProgram -> resetCompileError == mCompileError = false; 融入移去使用 getErrorCode
class GpuProgram -> mConstantDefs == mDefines
class GpuProgram -> createParameterMappingStructures == createParamMap
class GpuProgram -> mFloatLogicalToPhysical 融入到 mBindMap Float 概念
class GpuProgram -> mIntLogicalToPhysical 融入到 mBindMap Int 概念
//--------------------------------------------------------------------------
class HighLevelGpuProgram -> createLowLevelImpl == genAssemblerImpl
class HighLevelGpuProgram -> populateParameterNames == configParamImpl
class HighLevelGpuProgram -> buildConstantDefinitions == genParamDefImpl
class HighLevelGpuProgram -> loadHighLevel == loadSysCode
class HighLevelGpuProgram -> unloadHighLevel == unloadSysCode
class HighLevelGpuProgram -> loadHighLevelImpl == loadSysCodeImpl
class HighLevelGpuProgram -> unloadHighLevelImpl == unloadSysCodeImpl
class HighLevelGpuProgram -> mAssemblerProgram ==  mAssemblerCode
class HighLevelGpuProgram -> mHighLevelLoaded == mSysCodeValid
class HighLevelGpuProgram -> mConstantDefsBuilt == mGenParamDef
class HighLevelGpuProgram -> setPreprocessorDefines getPreprocessorDefines mPreprocessorDefines ==
    setCompileDefine getCompileDefine mCompileDefine
//--------------------------------------------------------------------------
class GpuParamDefine -> getGenerateAllConstantDefinitionArrayEntries
    setGenerateAllConstantDefinitionArrayEntries
        msGenerateAllConstantDefinitionArrayEntries 无用移去
class GpuParamDefine -> generateConstantDefinitionArrayEntries == add 加入 insert(param) 语句
class GpuParamDefine -> floatBufferSize == mFloatSize == mDefineSize
class GpuParamDefine -> intBufferSize == mIntSize == mDefineSize
class GpuParamDefine -> map == mDefineList
//--------------------------------------------------------------------------
class GpuParamMap -> mutex 无效概念移去
class GpuParamMap -> map 分离出 mIntList mFloatList == mBlockList
class GpuParamMap -> bufferSize 分离出 mIntSize mFloatSize == mBlockDataSize
class GpuParamMap 把  Float 和 Int 概念都写到里面 Block
//--------------------------------------------------------------------------
PixelFormat -> PF_BYTE_L 使用 PF_L8ui 代替
PixelFormat -> PF_SHORT_L 使用 PF_L16ui 代替
PixelFormat -> PF_BYTE_A 使用 PF_A8UN 代替
PixelFormat ->
PixelFormat ->
PixelFormat ->
PixelFormat ->
PixelFormat ->
PixelFormat ->
PixelFormat ->
PixelFormat ->
//--------------------------------------------------------------------------
class GpuParamValue -> setNamedConstant == set
class GpuParamValue -> getConstantDefinitionIterator == getDefList
class GpuParamValue -> mVersion == mDirtyMark
class GpuParamValue -> mIntConstants == mIntData
class GpuParamValue -> mFloatConstants == mFloatData
class GpuParamValue -> addConstantDefinition == add
class GpuParamValue -> getConstantDefinition == get
class GpuParamValue -> removeConstantDefinition == remove
class GpuParamValue -> removeAllConstantDefinitions == removeAll
class GpuParamValue -> mNamedConstants == 分解出来 GpuParamUnitList mDefines mFloatSize mIntSize
class GpuParamValue -> getConstantDefinitions 融入移去 (mNamedConstants)
class GpuParamValue -> mFrameLastUpdated getFrameLastUpdated 无用移去
class GpuParamValue -> _setRenderSystemData _getRenderData mRenderSystemData 无用移去
class GpuParamValue -> getFloatPointer == getFloatData 2函数 getBufferData
class GpuParamValue -> getIntPointer == getIntData 2函数 getBufferData
class GpuParamValue -> _markDirty 融入移去
class GpuParamValue -> getVersion == getStateMark
//--------------------------------------------------------------------------
class ParamValueSync -> _setRenderSystemData _getRenderData mRenderSystemData 无用移去
class ParamValueSync -> _copySharedParamsToTargetParams == sync
//--------------------------------------------------------------------------
class RenderQueueFusion -> getName == getID
class RenderQueueFusion -> mName == mID
class RenderQueueFusion -> size == getCount
class RenderQueueFusion -> clear == removeAll
class RenderQueueFusion -> iterator == getList 返回 const RenderGroupFusionList &
class RenderQueueFusion -> mInvocations == mList
//--------------------------------------------------------------------------
class GpuProgramParam -> _setNamedConstants == setDefine
class GpuProgramParam -> getConstantDefinitions == getDefine
class GpuProgramParam -> hasNamedParameters 使用 getParamDef() != 0 代替
claas GpuProgramParam -> _setLogicalIndexes == setValue 使用一个参数
class GpuProgramParam -> 加入 getValue 函数
class GpuProgramParam -> setNamedConstant == set
class GpuProgramParam -> setConstant = set
class GpuProgramParam -> _writeRawConstants == _write
class GpuProgramParam -> _writeRawConstant == _write
class GpuProgramParam -> _readRawConstants == _read
class GpuProgramParam -> setAutoConstantReal == set
class GpuProgramParam -> setAutoConstant == set
class GpuProgramParam -> _setRawAutoConstantReal == _set
class GpuProgramParam -> _setRawAutoConstant == _set
class GpuProgramParam -> setNamedAutoConstant == set
class GpuProgramParam -> setNamedAutoConstantReal == set
class GpuProgramParam -> NIId 级的 set write 全部移去
class GpuProgramParam -> getIntLogicalBufferStruct 使用 getValue()->mIntList
class GpuProgramParam -> getFloatLogicalBufferStruct 使用 getValue()->mFloatList
class GpuProgramParam -> hasLogicalIndexedParameters 无用移去
class GpuProgramParam -> getConstantDefinitionIterator == getDefineList
class GpuProgramParam -> getFloatPointer == getFloatData 2函数 getBufferData
class GpuProgramParam -> getIntPointer == getIntData 2函数 getBufferData
class GpuProgramParam -> getFloatLogicalIndexForPhysicalIndex == getFloatIndex
class GpuProgramParam -> getIntLogicalIndexForPhysicalIndex == getIntIndex
class GpuProgramParam -> _findNamedConstantDefinition 融入移去
class GpuProgramParam -> _setRenderSystemData _getRenderData mRenderSystemData 无用移去
class GpuProgramParam -> mFloatConstants == mFloatData
class GpuProgramParam -> mIntConstants == mIntData
class GpuProgramParam -> mNamedConstants == mParamDefine
class GpuProgramParam -> mFloatLogicalToPhysical mIntLogicalToPhysical == mParamMap
class GpuProgramParam -> getFloatConstantList == getFloatData getBufferData
class GpuProgramParam -> getIntConstantList == getIntData getBufferData
class GpuProgramParam -> GpuSyncParam AutoConstantDefinition ACDataType GpuSyncParamBlock 外移
class GpuProgramParam -> ElementType ET_INT ET_REAL 移去 使用 ET_REAL == true 概念
class GpuProgramParam -> getAutoConstantDefinition getNumAutoConstantDefinitions
    AutoConstantDictionary 外移到 GpuProgramManager
class GpuProgramParam -> AutoConstantList == GpuSyncParamBlockList 融入到 GpuParamBlockList
class GpuProgramParam -> mAutoConstants == mSyncBlockList 使用 mBlockList 代替
class GpuProgramParam -> setConstantFromTime setNamedConstantFromTime 无用移去
class GpuProgramParam -> getAutoConstants == getSyncParamList
class GpuProgramParam -> getAutoConstantCount 使用 getSyncParamList().size() 代替
class GpuProgramParam -> hasAutoConstants 使用 getSyncParamList().empty() != true
class GpuProgramParam -> _getFloatConstantPhysicalIndex 融入移去
class GpuProgramParam -> _getIntConstantPhysicalIndex 融入移去
class GpuProgramParam -> deriveVariability == getGBTMark
class GpuProgramParam -> _getFloatConstantLogicalIndexUse == getFloatIndex
class GpuProgramParam -> _getIntConstantLogicalIndexUse == getIntIndex
class GpuProgramParam -> clearNamedAutoConstant == removeSyncParam
class GpuProgramParam -> clearAutoConstant == removeSyncParam
class GpuProgramParam -> clearAutoConstants == removeAllSyncParam
class GpuProgramParam -> getAutoConstantIterator 无效移去
class GpuProgramParam -> getAutoConstantEntry 无效移去
class GpuProgramParam -> findAutoConstantEntry == getSyncParamBlock
class GpuProgramParam -> addSharedParameters == addValue
class GpuProgramParam -> isUsingSharedParameters == isValueExist
class GpuProgramParam -> removeSharedParameters == removeValue
class GpuProgramParam -> removeAllSharedParameters == removeAllValue
class GpuProgramParam -> getSharedParameters == getValueList
class GpuProgramParam -> findFloatAutoConstantEntry == getFloatSParamIndex
class GpuProgramParam -> findIntAutoConstantEntry == getIntSParamIndex
class GpuProgramParam -> _findRawAutoConstantEntryFloat == _getFloatSParamIndex
class GpuProgramParam -> _findRawAutoConstantEntryInt == _getIntSyncParamBind
class GpuProgramParam -> getConstantDefinition == getUnit
class GpuProgramParam -> copySharedParamSetUsage 融入移去
class GpuProgramParam -> _copySharedParams == syncValue
class GpuProgramParam -> mSharedParamSets == mShareSyncList
class GpuProgramParam -> setIgnoreMissingParams == setAllowMissing
class GpuProgramParam -> _updateAutoParams == sync
class GpuProgramParam -> mCombinedVariability == mParamGBTMark
class GpuProgramParam -> copyConstantsFrom == copyParamValue
class GpuProgramParam -> mIgnoreMissingParams == mAllowParamLost
class GpuProgramParam -> mTransposeMatrices == mTransposeMatrix
class GpuProgramParam -> setTransposeMatrices == setTransposeMatrix
class GpuProgramParam -> getTransposeMatrices == isTransposeMatrix
class GpuProgramParam -> copyMatchingNamedConstantsFrom == copyDefineValue
class GpuProgramParam -> hasPassIterationNumber == getRenderCount() != 0
class GpuProgramParam -> getPassIterationNumberIndex == getRenderCountMemIndex
class GpuProgramParam -> incPassIterationNumber == setRenderCount(getRenderCount + 1)
class GpuProgramParam -> mActivePassIterationIndex == mRenderCountIndex
//--------------------------------------------------------------------------
class GpuSyncParamBlock -> physicalIndex == mMemIndex
class GpuSyncParamBlock -> paramType == mSyncParam
class GpuSyncParamBlock -> variability == mGBTMark
class GpuSyncParamBlock -> elementCount == mUnitCount
class GpuSyncParamBlock -> data == mInputInt
class GpuSyncParamBlock -> fData == mInputFloat
//--------------------------------------------------------------------------
class GpuEnvParamUnit -> name == mName
class GpuEnvParamUnit -> acType == mSyncParam
class GpuEnvParamUnit -> elementType == mFloatData == mDataType
class GpuEnvParamUnit -> dataType == mInputType
class GpuEnvParamUnit -> elementCount == mCount
class GpuEnvParamUnit -> elementType == mData
//--------------------------------------------------------------------------
class RenderFeature -> setCapability == add
class RenderFeature -> unsetCapability == remove
class RenderFeature -> hasCapability == isSupport
class RenderFeature -> addShaderProfile == add 参数改掩码
class RenderFeature -> removeShaderProfile == remove 参数改掩码
class RenderFeature -> isShaderProfileSupported == isShaderSupport 参数改掩码
class RenderFeature -> getSupportedShaderProfiles == getShaderMark
class RenderFeature -> mSupportedShaderProfiles 改掩码
class RenderFeature -> ShaderProfiles 移去
class RenderFeature -> 加入 getGpuInfo mGpuInfo
class RenderFeature -> isDriverOlderThanVersion 移入 DriverVersion 中
class RenderFeature -> vendorFromString vendorToString msGPUVendorStrings initVendorStrings
    移入 GpuVendorDetail 中
class RenderFeature -> setDeviceName getDeviceName mDeviceName
    setVendor getVendor mVendor getVendorSer getVendorSerNum
    setDriverVersion getDriverVersion mDriverVersion
    parseVendorFromString parseDriverVersionFromString 移入 GPUInfo 中
class RenderFeature -> setNumTextureUnits == setMaxTexUnit
class RenderFeature -> getNumTextureUnits == getMaxTexUnit
class RenderFeature -> setNumVertexBlendMatrices getNumVertexBlendMatrices
    mNumVertexBlendMatrices 无用移去
class RenderFeature -> setNumWorldMatrices == setMaxSpace
class RenderFeature -> getNumWorldMatrices == getMaxSpace
class RenderFeature -> setNumMultiRenderTargets == setMaxMultiFrameObj
class RenderFeature -> getNumMultiRenderTargets == getMaxMultiFrameObj
class RenderFeature -> setStencilBufferBitDepth == setStencilBit
class RenderFeature -> getStencilBufferBitDepth == getStencilBit
class RenderFeature -> isCapabilityRenderSystemSpecific == isSpecFeature
class RenderFeature -> setMaximumResolutions == setMaxTexSize
class RenderFeature -> setNonPOW2TexturesLimited == setOnlyPow2Texture
class RenderFeature -> getNonPOW2TexturesLimited == isOnlyPow2Texture
class RenderFeature -> setNumVertexTextureUnits == setMaxVertexTexUnit
class RenderFeature -> getNumVertexTextureUnits == getMaxVertexTexUnit
class RenderFeature -> setVertexTextureUnitsShared getVertexTextureUnitsShared
    mVertexTextureUnitsShared 概念移动到 RenderSys --- mVertexTextureShared
class RenderFeature -> setVertexProgramConstantFloatCount setVertexProgramConstantIntCount
    setVertexProgramConstantBoolCount == setMaxVertexProgramParam
class RenderFeature -> setGeometryProgramConstantFloatCount setGeometryProgramConstantIntCount
    setGeometryProgramConstantBoolCount == setMaxGeometryProgramParam
class RenderFeature -> setFragmentProgramConstantFloatCount setFragmentProgramConstantIntCount
    setFragmentProgramConstantBoolCount == setMaxFragmentProgramParam
class RenderFeature -> getVertexProgramConstantFloatCount == getMaxVPFloatParamCount
class RenderFeature -> getVertexProgramConstantIntCount == getMaxVPIntParamCount
class RenderFeature -> getVertexProgramConstantBoolCount == getMaxVPBoolParamCount
class RenderFeature -> getGeometryProgramConstantFloatCount == getMaxGPFloatCount
class RenderFeature -> getGeometryProgramConstantIntCount == getMaxGPIntCount
class RenderFeature -> getGeometryProgramConstantBoolCount == getMaxGPBoolCount
class RenderFeature -> getFragmentProgramConstantFloatCount == getMaxFPFloatCount
class RenderFeature -> getFragmentProgramConstantIntCount == getMaxFPIntCount
class RenderFeature -> getFragmentProgramConstantBoolCount == getMaxFPBoolCount
class RenderFeature -> setCategoryRelevant == 使用 add 代替
class RenderFeature -> isCategoryRelevant == 使用 isSupport 代替
class RenderFeature -> mNumMultiRenderTargets == mMaxMultiFrameObj
class RenderFeature -> mNumVertexTextureUnits == mMaxVertexTexUnit
class RenderFeature -> mRenderSystemName == mName
class RenderFeature -> mGeometryProgramNumOutputVertices == mMaxGPOutput
class RenderFeature -> mCategoryRelevant 融入移去
class RenderFeature -> mNumTextureUnits == mMaxTextureUnit
class RenderFeature -> mNumWorldMatrices == mMaxSpace
class RenderFeature -> mStencilBufferBitDepth == mStencilBit
class RenderFeature -> mVertexProgramConstantFloatCount == mMaxVPFloatParam -> mMaxVPParam[0]
class RenderFeature -> mVertexProgramConstantIntCount == mMaxVPIntParam -> mMaxVPParam[2]
class RenderFeature -> mVertexProgramConstantBoolCount == mMaxVPBoolParam -> mMaxVPParam[3]
class RenderFeature -> mGeometryProgramConstantFloatCount == mMaxGPFloatParam -> mMaxGPParam[0]
class RenderFeature -> mGeometryProgramConstantIntCount == mMaxGPIntParam -> mMaxGPParam[2]
class RenderFeature -> mGeometryProgramConstantBoolCount == mMaxGPBoolParam -> mMaxGPParam[3]
class RenderFeature -> mFragmentProgramConstantFloatCount == mMaxFPFloatParam -> mMaxFPParam[0]
class RenderFeature -> mFragmentProgramConstantIntCount == mMaxFPIntParam -> mMaxFPParam[2]
class RenderFeature -> mFragmentProgramConstantBoolCount == mMaxFPBoolParam -> mMaxFPParam[2]
class RenderFeature -> mNonPOW2TexturesLimited == mOnlyPow2Texture
class RenderFeature -> setGeometryProgramNumOutputVertices == setMaxGeometryOutput
class RenderFeature -> getGeometryProgramNumOutputVertices == getMaxGeometryOutput
class RenderFeature -> getRenderSystemName == getName
class RenderFeature -> setRenderSystemName == setName
class RenderFeature -> mCapabilities == mFeature
class RenderFeature -> calcSize 无用移去
class RenderFeature -> setMaxSupportedAnisotropy == setMaxAnisotropy
class RenderFeature -> getMaxSupportedAnisotropy == getMaxAnisotropy
class RenderFeature -> setNumVertexAttributes getNumVertexAttributes mNumVertexAttributes ==
    setMaxVertexAttrib getMaxVertexAttrib mMaxVertexAttrib
class RenderFeature ->
//--------------------------------------------------------------------------
ACT_PROJECTION_MATRIX == GSP_Matrix_Proj
ACT_VIEW_MATRIX == GSP_Matrix_View
ACT_WORLD_MATRIX == GSP_Matrix_Space
ACT_INVERSE_PROJECTION_MATRIX == GSP_Matrix_Proj_Inverse
ACT_INVERSE_VIEW_MATRIX == GSP_Matrix_View_Inverse
ACT_INVERSE_WORLD_MATRIX == GSP_Matrix_Space_Inverse
ACT_TRANSPOSE_PROJECTION_MATRIX == GSP_Matrix_Proj_Transpose
ACT_TRANSPOSE_VIEW_MATRIX == GSP_Matrix_View_Transpose
ACT_TRANSPOSE_WORLD_MATRIX == GSP_Matrix_Space_Transpose
ACT_INVERSE_TRANSPOSE_PROJECTION_MATRIX == GSP_Matrix_Proj_InverseTranspose
ACT_INVERSE_TRANSPOSE_VIEW_MATRIX == GSP_Matrix_View_InverseTranspose
ACT_INVERSE_TRANSPOSE_WORLD_MATRIX == GSP_Matrix_Space_InverseTranspose
ACT_TIME == GSP_Sys_CostTime
ACT_VIEWPORT_WIDTH == GSP_View_PixelWidth
ACT_VIEWPORT_HEIGHT == GSP_View_PixelHeight
ACT_VIEWPORT_SIZE == GSP_View_PixelSize
ACT_INVERSE_VIEWPORT_WIDTH ACT_INVERSE_VIEWPORT_HEIGHT 移去
ACT_CAMERA_POSITION == GSP_Camera_Pos
ACT_CAMERA_POSITION_OBJECT_SPACE == GSP_Camera_Pos_ChSpace
ACT_VIEW_DIRECTION == GSP_Camera_Dir
ACT_VIEW_SIDE_VECTOR == GSP_Camera_Right
ACT_VIEW_UP_VECTOR == GSP_Camera_Up
ACT_FOV == GSP_Camera_FOV
ACT_NEAR_CLIP_DISTANCE == GSP_Camera_NearClip
ACT_FAR_CLIP_DISTANCE == GSP_Camera_FarClip
ACT_WORLD_MATRIX_ARRAY_3x4 == GSP_Matrix3x4_Space_Array
ACT_WORLD_MATRIX_ARRAY == GSP_Matrix4x4_Space_Array
ACT_VIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View
ACT_WORLDVIEW_MATRIX == GSP_Matrix_View_X_Space
ACT_WORLDVIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View_X_Space
ACT_INVERSE_VIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View_Inverse
ACT_INVERSE_WORLDVIEW_MATRIX == GSP_Matrix_View_X_Space_Inverse
ACT_INVERSE_WORLDVIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View_X_Space_Inverse
ACT_TRANSPOSE_VIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View_Transpose
ACT_TRANSPOSE_WORLDVIEW_MATRIX == GSP_Matrix_View_X_Space_Transpose
ACT_TRANSPOSE_WORLDVIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View_X_Space_Transpose
ACT_INVERSE_TRANSPOSE_VIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View_InverseTranspose
ACT_INVERSE_TRANSPOSE_WORLDVIEW_MATRIX == GSP_Matrix_View_X_Space_InverseTranspose
ACT_INVERSE_TRANSPOSE_WORLDVIEWPROJ_MATRIX == GSP_Matrix_Proj_X_View_X_Space_InverseTranspose
ACT_WORLD_DUALQUATERNION_ARRAY_2x4 == GSP_DualQuaternion_Space
ACT_WORLD_SCALE_SHEAR_MATRIX_ARRAY_3x4 == GSP_Matrix3x4_Space_Scale_Shear
ACT_LOD_CAMERA_POSITION == GSP_Camera_LOD_Pos
ACT_LOD_CAMERA_POSITION_OBJECT_SPACE == GSP_Camera_LOD_Pos_ChSpace
ACT_FPS == GSP_FPS
ACT_AMBIENT_LIGHT_COLOUR == GSP_Ambient
ACT_SURFACE_AMBIENT_COLOUR == GSP_Ch_Ambient
ACT_SURFACE_DIFFUSE_COLOUR == GSP_Ch_Diffuse
ACT_SURFACE_SPECULAR_COLOUR == GSP_Ch_Specular
ACT_SURFACE_EMISSIVE_COLOUR == GSP_Ch_Emissive
ACT_SURFACE_SHININESS == GSP_Ch_Shininess
ACT_LIGHT_COUNT == GSP_Light_ActiveCount
ACT_LIGHT_DIFFUSE_COLOUR == GSP_Light_Diffuse_ParamIndex
ACT_LIGHT_SPECULAR_COLOUR == GSP_Light_Specular_ParamIndex
ACT_LIGHT_ATTENUATION == GSP_Light_Attenuation_ParamIndex
ACT_LIGHT_POSITION == GSP_Light_Pos_ParamIndex
ACT_LIGHT_DIRECTION == GSP_Light_Dir_ParamIndex
ACT_LIGHT_POSITION_OBJECT_SPACE == GSP_Light_Pos_ChSpace_ParamIndex
ACT_LIGHT_POSITION_VIEW_SPACE == GSP_Light_Pos_ChView_ParamIndex
ACT_LIGHT_DIRECTION_OBJECT_SPACE == GSP_Light_Dir_ChSpace_ParamIndex
ACT_LIGHT_DIRECTION_VIEW_SPACE == GSP_Light_Dir_ChView_ParamIndex
ACT_FOG_PARAMS == GSP_Fog_Params        GSP_Fog_Params[0]
ACT_FOG_COLOUR == GSP_Fog_Colour 融入到 GSP_Fog_Params[1]
ACT_VERTEX_WINDING == GSP_Vertex_Winding
ACT_RENDER_TARGET_FLIPPING == GSP_Texture_Flipping
ACT_LIGHT_DISTANCE_OBJECT_SPACE == GSP_Light_Dis_ChSpace_ParamIndex
ACT_LIGHT_POWER_SCALE = GSP_Light_BrightFactor_ParamIndex
ACT_LIGHT_CASTS_SHADOWS == GSP_Light_CastShadow_ParamIndex
ACT_SPOTLIGHT_PARAMS == GSP_Light_Spot_Params_ParamIndex

ACT_LIGHT_DIFFUSE_COLOUR_POWER_SCALED ACT_LIGHT_SPECULAR_COLOUR_POWER_SCALED
ACT_LIGHT_DIFFUSE_COLOUR_POWER_SCALED_ARRAY ACT_LIGHT_SPECULAR_COLOUR_POWER_SCALED_ARRAY
移去

ACT_LIGHT_ATTENUATION_ARRAY == GSP_Light_Attenuation_ParamCount
ACT_LIGHT_DIFFUSE_COLOUR_ARRAY == GSP_Light_Diffuse_ParamCount
ACT_LIGHT_SPECULAR_COLOUR_ARRAY == GSP_Light_Specular_ParamCount
ACT_LIGHT_POSITION_ARRAY == GSP_Light_Pos_ParamCount
ACT_LIGHT_POSITION_OBJECT_SPACE_ARRAY == GSP_Light_Pos_ChSpace_ParamCount
ACT_LIGHT_POSITION_VIEW_SPACE_ARRAY == GSP_Light_Pos_ChView_ParamCount
ACT_LIGHT_DIRECTION_ARRAY == GSP_Light_Dir_ParamCount
ACT_LIGHT_DIRECTION_OBJECT_SPACE_ARRAY == GSP_Light_Dir_ChSpace_ParamCount
ACT_LIGHT_DIRECTION_VIEW_SPACE_ARRAY == GSP_Light_Dir_ChView_ParamCount
ACT_LIGHT_DISTANCE_OBJECT_SPACE_ARRAY == GSP_Light_Dis_ChSpace_ParamCount
ACT_LIGHT_POWER_SCALE_ARRAY == GSP_Light_BrightFactor_ParamCount
ACT_SPOTLIGHT_PARAMS_ARRAY == GSP_Light_Spot_Params_ParamCount
ACT_LIGHT_NUMBER == GSP_Light_Index_ParamIndex
ACT_DERIVED_AMBIENT_LIGHT_COLOUR == GSP_Ch_Ambient_X_Env
ACT_DERIVED_SCENE_COLOUR == GSP_Ch_Emissive_Evn
ACT_DERIVED_LIGHT_DIFFUSE_COLOUR == GSP_Light_Diffuse_Ch_ParamIndex
ACT_DERIVED_LIGHT_SPECULAR_COLOUR == GSP_Light_Specular_Ch_ParamIndex
ACT_DERIVED_LIGHT_DIFFUSE_COLOUR_ARRAY == GSP_Light_Diffuse_Ch_ParamCount
ACT_DERIVED_LIGHT_SPECULAR_COLOUR_ARRAY == GSP_Light_Specular_Ch_ParamCount
ACT_SHADOW_EXTRUSION_DISTANCE == GSP_Shadow_VolExtent
ACT_SHADOW_COLOUR == GSP_Shadow_Colour
ACT_SPOTLIGHT_VIEWPROJ_MATRIX == GSP_Light_Spot_Matrix_Proj_X_View_ParamIndex
ACT_SPOTLIGHT_VIEWPROJ_MATRIX_ARRAY == GSP_Light_Spot_Matrix_Proj_X_View_ParamCount
ACT_SPOTLIGHT_WORLDVIEWPROJ_MATRIX == GSP_Light_Spot_Matrix_Proj_X_View_X_Space
ACT_TEXTURE_VIEWPROJ_MATRIX == GSP_Texture_Matrix_Proj_X_View_ParamIndex
ACT_TEXTURE_WORLDVIEWPROJ_MATRIX == GSP_Texture_Matrix_Proj_X_View_X_Space_ParamIndex
ACT_TEXTURE_VIEWPROJ_MATRIX_ARRAY == GSP_Texture_Matrix_Proj_X_View_ParamCount
ACT_TEXTURE_WORLDVIEWPROJ_MATRIX_ARRAY == GSP_Texture_Matrix_Proj_X_View_X_Space_ParamCount
ACT_TEXTURE_SIZE == GSP_Texture_Dim_ParamIndex
ACT_INVERSE_TEXTURE_SIZE == GSP_Texture_InverseDim_ParamIndex
ACT_PACKED_TEXTURE_SIZE == GSP_Texture_DimUnit_ParamIndex
ACT_TEXTURE_MATRIX == GSP_Texture_Matrix_Transform_ParamIndex
ACT_CUSTOM == GSP_Ch_Custom
ACT_ANIMATION_PARAMETRIC == GSP_Ch_AniParam

ACT_COSTIME_0_X ACT_SINTIME_0_X ACT_TANTIME_0_X ACT_TIME_0_X_PACKED ACT_TIME_0_1
ACT_COSTIME_0_1 ACT_SINTIME_0_1 ACT_TANTIME_0_1 ACT_TIME_0_1_PACKED ACT_TIME_0_2PI
ACT_COSTIME_0_2PI ACT_SINTIME_0_2PI ACT_TANTIME_0_2PI ACT_TIME_0_2PI_PACKED 无用移去

ACT_TIME_0_X == GSP_Sys_CostTime_Fmod_ParamData
ACT_PASS_NUMBER == GSP_Ch_Index
ACT_PASS_ITERATION_NUMBER == GSP_Ch_RenderCount
ACT_FRAME_TIME == GSP_Frame_CostTime
ACT_SCENE_DEPTH_RANGE == GSP_Ch_Depth_Range
ACT_TEXEL_OFFSETS == GSP_Texel_Oft
ACT_SHADOW_SCENE_DEPTH_RANGE == GSP_Shadow_ChDepthRange_ParamIndex
ACT_LIGHT_CUSTOM == GSP_Light_Custom
ACT_POINT_PARAMS == GSP_Ponit_Params
//--------------------------------------------------------------------------
RSC_SCISSOR_TEST == GF_ClipRect
RSC_USER_CLIP_PLANES == GF_ClipPlanes
RSC_INFINITE_FAR_PLANE == GF_Infinite_FarPlane
RSC_AUTOMIPMAP_COMPRESSED == GF_Tex_AutoMipmapCompress
RSC_AUTOMIPMAP == GF_Tex_AutoMipmap 移去
RSC_ANISOTROPY == GF_Tex_Anisotropy
RSC_CUBEMAPPING == GF_Tex_Cube 移去
RSC_BLENDING == GF_Tex_Blend 移去 
RSC_TEXTURE_3D == GF_Tex_3D
RSC_TEXTURE_1D == GF_Tex_1D
RSC_DOT3 == GF_Tex_Dot3
RSC_TEXTURE_FLOAT == GF_Tex_Float
RSC_NON_POWER_OF_2_TEXTURES == GF_Tex_NonPow2
RSC_MIPMAP_LOD_BIAS == GF_Tex_MipMapBias
RSC_VERTEX_PROGRAM == GF_Program_Vertex
RSC_FRAGMENT_PROGRAM == GF_Program_Fragment
RSC_GEOMETRY_PROGRAM == GF_Program_Geometry
RSC_TESSELLATION_HULL_PROGRAM == GF_Program_Tess
RSC_TESSELLATION_DOMAIN_PROGRAM == GF_Program_Domain
RSC_COMPUTE_PROGRAM == GF_Program_Compute
RSC_HWSTENCIL == GF_HW_Stencil
RSC_HW_GAMMA == GF_HW_GAMMA
RSC_VBO == GF_HW_Buffer  (RSC_MAPBUFFER)
RSC_32BIT_INDEX == GF_Index_32
RSC_DEBUG == GF_Debug

RSC_ATOMIC_COUNTERS == GF_Atomic_Counters
RSC_TEXTURE_COMPRESSION == GF_Tex_Compress
RSC_TEXTURE_COMPRESSION_ASTC == GF_Tex_Fromat_ASTC
RSC_TEXTURE_COMPRESSION_DXT == GF_Tex_Fromat_DXT
RSC_TEXTURE_COMPRESSION_VTC == GF_Tex_Fromat_VTC
RSC_TEXTURE_COMPRESSION_ETC2 == GF_Tex_Fromat_ETC2
RSC_TEXTURE_COMPRESSION_BC4_BC5 == GF_Tex_Fromat_BC4_5
RSC_TEXTURE_COMPRESSION_BC6H_BC7 == GF_Tex_Fromat_BC6H_7
RSC_TEXTURE_COMPRESSION_PVRTC == GF_Tex_Fromat_PVRTC
RSC_SEPARATE_SHADER_OBJECTS == CF_Program_SeparateObject
RSC_CONST_BUFFER_SLOTS_IN_SHADER == CF_Program_ConstBuffer
RSC_TYPED_UAV_LOADS == CF_Program_StorgeBuffer
RSC_VP_AND_RT_ARRAY_INDEX_FROM_ANY_SHADER == CF_Program_ViwportArray
RSC_TEXTURE_CUBE_MAP_ARRAY == CF_Tex_CubeArray
RSC_FIXED_FUNCTION == GF_Fixed_Pipeline
RSC_VERTEX_TEXTURE_FETCH == GF_Program_VertexTexFetch
RSC_HWOCCLUSION == GF_HW_PixelQuery
RSC_POINT_EXTENDED_PARAMETERS == GF_Point_Param
RSC_POINT_SPRITES == GF_Point_Sprites
RSC_VERTEX_FORMAT_UBYTE4 == GF_Vertex_UByte4
RSC_TWO_SIDED_STENCIL == GF_Stencil_BothSide
RSC_VERTEX_BUFFER_INSTANCE_DATA == GF_Vertex_Instance
RSC_STENCIL_WRAP == GF_Stencil_Wrap
RSC_HWRENDER_TO_TEXTURE == GF_Render_To_Texture
RSC_HWRENDER_TO_VERTEX_BUFFER == GF_Render_To_Vertex
RSC_ADVANCED_BLEND_OPERATIONS = GF_Colour_Blend
RSC_ALPHA_TO_COVERAGE == GF_Alpha_Coverage
RSC_CAN_GET_COMPILED_SHADER_BUFFER == GF_Shader_Binary_Get
RSC_RTT_SEPARATE_DEPTHBUFFER == GF_RenderTarget_SelfDepth 移去
RSC_RTT_MAIN_DEPTHBUFFER_ATTACHABLE == GF_RenderTarget_AttachMainDepth
RSC_MRT_DIFFERENT_BIT_DEPTHS == GF_MultiRenderTarget_EachDepthBit
RSC_RTT_DEPTHBUFFER_RESOLUTION_LESSEQUAL == GF_RenderTarget_LessDepth
RSC_PERSTAGECONSTANT == GF_D3D_PerStageConstant
RSC_FBO == GF_GL_FrameBuffer 移去
RSC_FBO_ARB == GF_GL_FrameBuffer_Arb 移去
RSC_FBO_ATI == GF_GL_FrameBuffer_ATI 移去
RSC_PBUFFER == GF_GL_PBuffer
RSC_POINT_EXTENDED_PARAMETERS_EXT == GF_GL_Point_Param 移去
RSC_POINT_EXTENDED_PARAMETERS_ARB == GF_GL_Point_Param_Arb 移去
RSC_GL1_5_NOVBO 分离出 GF_GL_1_5 和 ! GF_HW_Buffer 关系 移去
RSC_GL1_5_NOHWOCCLUSION 分离出 GF_GL_1_5 和 ! GF_HW_PixelQuery 关系
GF_GLSL_SeparateShaderObject == GF_GLSL_SeparateShaderObject
RSC_WIDE_LINES == GF_LineWide
RSC_VAO == GF_GL_VArrayObj
//--------------------------------------------------------------------------
CAPS_CATEGORY_COMMON == CC_Common1
CAPS_CATEGORY_COUNT == CC_Count
加入 CC_Common2
CAPS_CATEGORY_COMMON_2 == CC_Ext1
CAPS_CATEGORY_D3D9 == CC_D3D
CAPS_CATEGORY_GL == CC_GL
加入 CC_Vulkan CC_Spec4
//--------------------------------------------------------------------------
class GPUInfo -> isDriverOlderThanVersion == isOlder
//--------------------------------------------------------------------------
class GpuVendorDetail -> msGPUVendorStrings == mVendorStrList
class GpuVendorDetail -> initVendorStrings 融入移去
class GpuVendorDetail -> vendorFromString == toVendor
class GpuVendorDetail -> vendorToString == toStr
//--------------------------------------------------------------------------
class GPUInfo -> setDeviceName == setName
class GPUInfo -> getDeviceName == getName
class GPUInfo -> setDriverVersion == setVersion
class GPUInfo -> getDriverVersion == getVersion
class GPUInfo -> parseVendorFromString == setVendor
class GPUInfo -> parseDriverVersionFromString == setVersion
class GPUInfo -> mDriverVersion == mVersion
class GPUInfo -> mDeviceName == mName
//--------------------------------------------------------------------------
class SpaceQuery -> setWorldFragmentType == setPrimitivesMark
class SpaceQuery -> getWorldFragmentType == getPrimitivesMark
class SpaceQuery -> mWorldFragmentType == mPrimitivesMark
class SpaceQuery -> mSupportedWorldFragments == mSupportPrimitivesMark
class SpaceQuery -> getSupportedWorldFragmentTypes == getSupportPrimitivesMark
class SpaceQuery -> mParentSceneMgr == mArea 移动到 SpaceQueryCmd
class SpaceQuery -> WorldFragment == QueryDetail 移动到 SpaceQueryCmd
//--------------------------------------------------------------------------

class SpaceQueryCmd -> QueryDetail -> fragmentType == mType
class SpaceQueryCmd -> QueryDetail -> planes == mPlaneList
class SpaceQueryCmd -> QueryDetail -> singleIntersection == mPoint
class SpaceQueryCmd -> QueryDetail -> renderOp == mGeoRaw
class SpaceQueryCmd -> QueryDetail -> geometry == mSpaceObj
class SpaceQueryCmd -> QueryDetail -> 加入 mDistance
class SpaceQueryCmd -> 移去 queryResult(SpaceObj *
class SpaceQueryCmd -> queryResult == onQuery
class SpaceQueryCmd -> clearResults == clear
class SpaceQueryCmd -> getLastResults == getQuery
//--------------------------------------------------------------------------
class SpaceQueryResult 融入到 SpaceQueryCmd
//--------------------------------------------------------------------------
class AreaSpaceQuery -> mLastResult 使用 SpaceQueryCmd 里的 mQueryList
class AreaSpaceQuery -> clearResults 使用 SpaceQueryCmd 里的 clear
//--------------------------------------------------------------------------
class RaySpaceQueryCmd -> 使用 SpaceQueryCmd 代替 QueryDetail 支持 mDistance
class RaySpaceQueryResultEntry -> 使用 QueryDetail 代替
//--------------------------------------------------------------------------
class RaySpaceQuery -> mResult 使用 SpaceQueryCmd 的 mQueryList 代替
class RaySpaceQuery -> mSortByDistance == mSortDistance
class RaySpaceQuery -> setSortByDistance 分离出 setMaxResult
class RaySpaceQuery -> getMaxResults == getMaxResult
class RaySpaceQuery -> mMaxResults == mMaxResult
class RaySpaceQuery -> setMaxResult getMaxResults mMaxResult 移到 SpaceQueryCmd 中
class RaySpaceQuery -> setSortByDistance == setSortDistance
class RaySpaceQuery -> getSortByDistance == isSortDistance
//--------------------------------------------------------------------------
class IntersectionSpaceQueryCmd -> 使用 SpaceQueryCmd 代替
class IntersectionSpaceQueryResult -> 使用 QueryDetail 代替
SpaceQueryMovableObjectPair SpaceQueryMovableObjectWorldFragmentPair
SpaceQueryMovableIntersectionList SpaceQueryMovableWorldFragmentIntersectionList
movables2world 使用 QueryDetail 代替
//--------------------------------------------------------------------------
class AreaSpaceQuery -> mLastResult 使用 SpaceQueryCmd 里的 mQueryList
class AreaSpaceQuery -> clearResults 使用 SpaceQueryCmd 里的 clear
//--------------------------------------------------------------------------
class Particle -> setDimensions == setSize
class Particle -> getOwnWidth == getWidth
class Particle -> getOwnHeight == getHeight
class Particle -> resetDimensions == inheritSize(true) 反义
class Particle -> hasOwnDimensions  == isInheritSize 反义
class Particle -> _notifyOwner == setCtrl
class Particle -> _notifyVisualData == setEffect
class Particle -> getVisualData == getEffect
class Particle -> particleType == mType
class Particle -> rotation == mRotation
class Particle -> colour == mColour
class Particle -> position == mPosition
class Particle -> direction == mDirection
class Particle -> timeToLive == mRemainTTL
class Particle -> totalTimeToLive == mTotalTTL
class Particle -> rotationSpeed == mRotFactor
class Particle -> mParentSystem == mCtrl
class Particle -> mVisual == mEffect
class Particle -> mOwnDimensions == mInheritSize 反义
class Particle -> ParticleType == Type
class Particle -> Visual == T_Alone
class Particle -> Emitter == T_Spread
//--------------------------------------------------------------------------
class RenderFeatureSerializer -> addShaderProfile 融入移去
class RenderFeatureSerializer -> writeScript == write
class RenderFeatureSerializer -> initialiaseDispatchTables 融入移去
class RenderFeatureSerializer -> mCurrentCapabilities == mFeature
class RenderFeatureSerializer -> mKeywordTypeMap == mKeyTypeList
class RenderFeatureSerializer -> mSetStringMethodDispatchTable == mStringTableMap
class RenderFeatureSerializer -> mSetIntMethodDispatchTable == mInt16TableMap
class RenderFeatureSerializer -> mSetBoolMethodDispatchTable == mBoolTableMap
class RenderFeatureSerializer -> mSetRealMethodDispatchTable == mFloatTableMap
class RenderFeatureSerializer -> mCapabilitiesMap == mFeatureMap
class RenderFeatureSerializer -> parseCapabilitiesLines == parseUnit
class RenderFeatureSerializer -> logParseError == logError
class RenderFeatureSerializer -> parseScript == read
class RenderFeatureSerializer -> addKeywordType == addKeyDataType
class RenderFeatureSerializer -> getKeywordType == getKeyDataType
class RenderFeatureSerializer -> addCapabilitiesMapping == add
class RenderFeatureSerializer -> setCapabilityEnumBool == exec
class RenderFeatureSerializer -> addSetStringMethod == add
class RenderFeatureSerializer -> callSetStringMethod == exec
class RenderFeatureSerializer -> addSetIntMethod == add
class RenderFeatureSerializer -> callSetIntMethod == exec
class RenderFeatureSerializer -> addSetBoolMethod == add
class RenderFeatureSerializer -> callSetBoolMethod == exec
class RenderFeatureSerializer -> addSetRealMethod == add
class RenderFeatureSerializer -> callSetRealMethod == exec
class RenderFeatureSerializer -> mCurrentLine == mLine
class RenderFeatureSerializer -> mCurrentLineNumber == mNumber
class RenderFeatureSerializer -> mCurrentStream == mStream
//--------------------------------------------------------------------------
class GpuNamedConstantsSerializer -> 内部类
class GpuNamedConstantsSerializer -> exportNamedConstants == export 2个函数
class GpuNamedConstantsSerializer -> importNamedConstants == import
//--------------------------------------------------------------------------
class SkeletonSerializer -> exportSkeleton == export 2个函数
class SkeletonSerializer -> importSkeleton == import
class SkeletonSerializer -> calcBoneSize 移去第一参数
class SkeletonSerializer -> calcBoneSizeWithoutScale 移去第一参数
class SkeletonSerializer -> calcKeyFrameSize 移去第一参数
class SkeletonSerializer -> calcAnimationTrackSize 移去第一参数
class SkeletonSerializer -> calcAnimationSize 移去第一参数
class SkeletonSerializer -> calcKeyFrameSizeWithoutScale 移去第一参数
class SkeletonSerializer -> calcSkeletonAnimationLinkSize 移去第一参数
class SkeletonSerializer -> setWorkingVersion 无用移去
class SkeletonSerializer -> writeBoneParent 融入到 writeBone
class SkeletonSerializer -> readBoneParent 融入到 readBone
class SkeletonSerializer -> calcBoneParentSize 融入到 calcBoneSize calcBoneSizeWithoutScale
class SkeletonSerializer -> calcBoneSizeWithoutScale 移去
class SkeletonSerializer -> calcKeyFrameSizeWithoutScale 融入到 calcKeyFrameSize
class SkeletonSerializer -> calcSkeletonAssignSize 融入移去
//--------------------------------------------------------------------------
class MeshSerializer -> exportMesh == export
class MeshSerializer -> import == import
class MeshSerializer -> writeSubMeshOperation == writeSubGeoType 融入移去
class MeshSerializer -> readSubMeshOperation == readSubGeoType
class MeshSerializer -> writeMeshBoneAssignment == writeSkeletonAssign
class MeshSerializer -> writeSubMeshBoneAssignment == writeSubSkeletonAssign
class MeshSerializer -> readMeshBoneAssignment == readSkeletonAssign
class MeshSerializer -> readSubMeshBoneAssignment == readSubSkeletonAssign
class MeshSerializer -> calcSkeletonLinkSize 融入移去
class MeshSerializer -> writeGeometry == writeVertexData
class MeshSerializer -> readGeometry == readVertexData
class MeshSerializer -> writeSubGeoType readSubGeoType calcSubMeshOperationSize 融入移去
class MeshSerializer -> calcBoneAssignmentSize == calcSkeletonAssignSize
class MeshSerializer -> writePoses == writeVertexOffsetList
class MeshSerializer -> writePose == writeVertexOffset
class MeshSerializer -> readPoses == readVertexOffsetList
class MeshSerializer -> readPose == readVertexOffset
class MeshSerializer -> writeAnimations == writeAnimationList
class MeshSerializer -> readAnimations == readAnimationList
class MeshSerializer -> writeAnimationTrack == writeKeyFrameTrack
class MeshSerializer -> readAnimationTrack == readKeyFrameTrack
class MeshSerializer -> writeMorphKeyframe == writeVertexUnitKeyFrame
class MeshSerializer -> writePoseKeyframe == writeVertexOffsetKeyFrame
class MeshSerializer -> readMorphKeyFrame == readVertexUnitKeyFrame
class MeshSerializer -> readPoseKeyFrame == readVertexOffsetKeyFrame
class MeshSerializer -> writeExtremes == writeEdgePoint
class MeshSerializer -> readExtremes == readEdgePoint
class MeshSerializer -> readSubMeshNameTable 融入移去
class MeshSerializer -> writeBoundsInfo == writeAABB
class MeshSerializer -> readBoundsInfo == readAABB
class MeshSerializer -> writeSubMeshExtremes 融入移去
class MeshSerializer -> writePoseKeyframePoseRef 融入移去
class MeshSerializer -> calcPoseKeyframePoseRefSize 融入移去
class MeshSerializer -> readGeometryVertexDeclaration 融入移去
class MeshSerializer -> readGeometryVertexElement 融入移去
class MeshSerializer -> readGeometryVertexBuffer 融入移去
class MeshSerializer -> readEdgeListLodInfo 融入移去
class MeshSerializer -> calcPoseVertexSize 融入移去
class MeshSerializer -> writeLodUsageManual 融入移去
class MeshSerializer -> readMeshLodUsageManual 融入移去
class MeshSerializer -> writeLodUsageGenerated 融入移去
class MeshSerializer -> readMeshLodUsageGenerated 融入移去
class MeshSerializer ->
class MeshSerializer ->
//--------------------------------------------------------------------------
class MeshSerializer -> exportMesh == export 4个函数
class MeshSerializer -> import == import
//--------------------------------------------------------------------------
class GpuProgramManager -> isSyntaxSupported = isSupport 参数改枚举
class GpuProgramManager -> getSupportedSyntax 返回值改掩码
class GpuProgramManager -> loadFromString == load 第三个参数放到最后
class GpuProgramManager -> createProgramFromString == create 第三个参数放到最后
class GpuProgramManager -> createProgram == create
class GpuProgramManager -> 概念 syntaxCode 改 ShaderLanguage
class GpuProgramManager -> getSupportedSyntax == getSupportMark
class GpuProgramManager -> createParameters 融入移去
class GpuProgramManager -> canGetCompiledShaderBuffer 融入移去 N_Engine().getRender()->getFeature()->isSupport(GF_Shader_Binary_Get)
class GpuProgramManager -> addRenderSystemToName 融入移去
class GpuProgramManager -> createSharedParameters == createShare
class GpuProgramManager -> getSharedParameters == getShare
class GpuProgramManager -> getAvailableSharedParameters == getShareList
class GpuProgramManager -> mSharedParametersMap == mShareCustomList
class GpuProgramManager -> getSaveMicrocodesToCache == isCacheBinary
class GpuProgramManager -> setSaveMicrocodesToCache == setCacheBinary
class GpuProgramManager -> isMicrocodeAvailableInCache == isCacheExist
class GpuProgramManager -> createMicrocode == createCache
class GpuProgramManager -> addMicrocodeToCache 融入移去 (createCache)
class GpuProgramManager -> removeMicrocodeFromCache == destroyCache
class GpuProgramManager -> getMicrocodeFromCache == getCache
class GpuProgramManager -> mSaveMicrocodesToCache == mCacheMark(融入mark)
class GpuProgramManager -> mCacheDirty == mCacheMark(融入mark)
class GpuProgramManager -> mMicrocodeCache == mCacheList
class GpuProgramManager -> saveMicrocodeCache == exportCache
class GpuProgramManager -> loadMicrocodeCache == inportCache
class GpuProgramManager -> getAutoConstantDefinition == getSyncParam
class GpuProgramManager -> getNumAutoConstantDefinitions 融入移去
class GpuProgramManager -> AutoConstantDictionary == mSyncParamList
//--------------------------------------------------------------------------
class Overlay -> get2DElementsIterator == getViewList
class Overlay -> m2DElements == mViewList
class Overlay -> isInitialised == isInit
class Overlay -> assignZOrders 融入移去
class Overlay -> updateTransform 融入移去
class Overlay -> _findVisibles == renderImpl
class Overlay -> clear == clearAll
class Overlay -> add3D == add
class Overlay -> remove3D == remove
class Overlay -> add2D == add
class Overlay -> remove2D == remove
class Overlay -> setScroll == setOffset
class Overlay -> scroll == offset
class Overlay -> getScrollX == getXOffset
class Overlay -> getScrollY == getYOffset
class Overlay -> findElementAt == getGeo
class Overlay -> getScaleX == getXScale
class Overlay -> getScaleY == getYScale
class Overlay -> _getWorldMatrix == getSpaceMatrix
class Overlay -> mTransformOutOfDate == mSpaceValid 转义
class Overlay -> mTransformUpdated 无用移去
class Overlay -> mInitialised == mInit
class Overlay -> mTransform == mSpace
class Overlay -> getName == getID
class Overlay -> mName == mID

//--------------------------------------------------------------------------
GuiHorizontalAlignment 使用 HAlign
GuiVerticalAlignment 使用 VAlign
GuiMetricsMode == SizeMode
GMM_RELATIVE == SM_Unit
GMM_PIXELS == SM_Abs
GMM_RELATIVE_ASPECT_ADJUSTED == SM_Rel
//--------------------------------------------------------------------------
class HighLevelGpuProgramManager -> createProgram == create
class HighLevelGpuProgramManager -> isLanguageSupported == isSupport
class HighLevelGpuProgramManager -> mFactories == mFactList
class HighLevelGpuProgramManager -> mNullFactory 融入移去
class HighLevelGpuProgramManager -> mUnifiedFactory 融入移去
//--------------------------------------------------------------------------
class ShadowTextureManager -> mCount 移去
class ShadowTextureManager -> clearUnused == recover
class ShadowTextureManager -> getShadowTextures == getTexture
class ShadowTextureManager -> getNullShadowTexture == getDummy
//--------------------------------------------------------------------------
PrefabFactory 整个融入到 MeshManager 中
//--------------------------------------------------------------------------
class MeshManager -> _init == init
class MeshManager -> createPrefabPlane 融入
class MeshManager -> createPrefabCube 融入
class MeshManager -> createPrefabSphere 融入
class MeshManager -> prepare == plan
class MeshManager -> MeshBuildParams == MeshPatchDefine cpp融入
class MeshManager -> setBoundsPaddingFactor getBoundsPaddingFactor
    mBoundsPaddingFactor 融入移去
class MeshManager -> tesselate2DMesh 融入内部
class MeshManager -> loadManualPlane 融入内部
class MeshManager -> loadManualCurvedPlane 融入内部
class MeshManager -> loadManualCurvedIllusionPlane 融入内部
class MeshManager -> mMeshBuildParams == mPatchDefineList
class MeshManager -> mPrepAllMeshesForShadowVolumes setPrepareAllMeshesForShadowVolumes
    getPrepareAllMeshesForShadowVolumes == SpaceManager setShadowVolume isShadowVolume mShadowVolume
//--------------------------------------------------------------------------
class RenderObj -> setRenderOperation == setGeometry
class RenderObj -> setWorldTransform == setMatrix
class RenderObj -> mWorldTransform == mMatrix
class RenderObj -> mMatName == mMaterialID
class RenderObj -> msGenNameCount 无用移去
//--------------------------------------------------------------------------
class WireBoundingBox -> setupBoundingBox == setAABBGeo
class WireBoundingBox -> _initWireBoundingBox 融入移去
class WireBoundingBox -> setupBoundingBoxVertices 融入移去
//--------------------------------------------------------------------------
class PropertyScriptSys -> parseScript == parse 加入 PtrList * 参数
class PropertyScriptSys -> getLoadingOrder == getScriptLevel
class PropertyScriptSys -> getScriptPatterns == getScriptPattern
class PropertyScriptSys -> mLoadOrder == mScriptLevel
class PropertyScriptSys -> mScriptPatterns == mScriptPattern
//--------------------------------------------------------------------------
class ParticleEffect -> _initParticle == initImpl
class ParticleEffect -> addBaseParameters 移去
class ParticleEffect -> _affectParticles == effectImpl(ParticleList &, TimeDurMS)
//--------------------------------------------------------------------------
class ParticleGeo -> setKeepParticlesInLocalSpace == setLocalSpace
class ParticleGeo -> _setMaterial == setMaterial
class ParticleGeo -> _getSortMode == getSortMode
class ParticleGeo -> _update == queue 最后一个参数分离出 setCullItself
class ParticleGeo -> _notify == attach
class ParticleGeo -> _notifyParticleRotated == onParticleRotate
class ParticleGeo -> _notifyParticleResized == onParticleResize
//--------------------------------------------------------------------------
class ParticleCtrlGeo -> mBillboardSet == mCtrl
class ParticleCtrlGeo -> getParticleCtrl 融入移去
//--------------------------------------------------------------------------
class ShadowMappingPattern -> IlluminationRenderStage == ShadowType
class ShadowMappingPattern -> IRS_NONE == ST_Normal
class ShadowMappingPattern -> IRS_RENDER_TO_TEXTURE == ST_Cast
class ShadowMappingPattern -> IRS_RENDER_RECEIVER_PASS == ST_Receive
class ShadowMappingPattern -> mCameraExtentOffset == mExtentOffsetFactor
class ShadowMappingPattern ->
//--------------------------------------------------------------------------
class SpaceNode -> _findVisibleObjects == queue (RenderBound 融入到 Camera)
    第二参数和 第一参数换位 第五参数 使用 mNodeView
class SpaceNode -> setFixedYawAxis == setCustomYaw
class SpaceNode -> hideBoundingBox mHideBoundingBox 无用移去
class SpaceNode -> _getWorldAABB == getSpaceAABB
class SpaceNode -> getAttachedObjectIterator 使用 getAttachList 代替
class SpaceNode -> mObjectsByName == mAttachList
class SpaceNode -> attachObject == attach
class SpaceNode -> detachObject == detach
class SpaceNode -> getAttachedObject == getAttach
class SpaceNode -> detachAllObjects == detachAll
class SpaceNode -> numAttachedObjects == getAttachCount
class SpaceNode -> showBoundingBox == setAABBView
class SpaceNode -> getShowBoundingBox == isAABBView
class SpaceNode -> getParentSceneNode 融入移去
class SpaceNode -> createChildSceneNode 同体 create
class SpaceNode -> removeAndDestroyChild == destroy 概念移动到 PosNode
class SpaceNode -> removeAndDestroyAllChildren == destroyAll 概念移动到 PosNode
class SpaceNode -> flipVisibility == 无用移去
class SpaceNode -> mWireBoundingBox == mWorldAABBGeo
class SpaceNode -> _addBoundingBoxToQueue == queueAABB
class SpaceNode -> mIsInSceneGraph == mEnable
class SpaceNode -> setInSceneGraph == setEnable
clsss SpaceNode -> isInSceneGraph == isEnable
class SpaceNode -> _notifyRootNode 使用 setEnable(true 代替
class SpaceNode -> mShowBoundingBox == mAABBView
class SpaceNode -> mYawFixed == mCustomYaw
class SpaceNode -> mYawFixedAxis == mCustomYawAxis
class SpaceNode -> _autoTrack == updateAutoFocus
class SpaceNode -> setAutoTracking == setAutoFocus
class SpaceNode -> getAutoTrackTarget == getAutoFocus
class SpaceNode -> getAutoTrackOffset == getAutoFocusPos
class SpaceNode -> getAutoTrackLocalDirection == getgetAutoFocusDir
class SpaceNode -> mAutoTrackOffset == mAutoFocusPos
class SpaceNode -> mAutoTrackLocalDirection = mAutoFocusDir
class SpaceNode -> mAutoTrackTarget == mAutoFocus
//--------------------------------------------------------------------------
class Engine -> Engine 构造函数3参数改1参数合并所有概念
class Engine -> installPlugin == install
class Engine -> uninstallPlugin == uninstall
class Engine -> addRenderSystem == addRender
class Engine -> setRenderSystem == setRender
class Engine -> getRenderSystem == getRender
class Engine -> getTextureManager == get(TextureManager *&)
class Engine -> getMeshManager == get(MeshManager *&)
class Engine -> getRenderSystemByName == getRender
class Engine -> addSceneManagerFactory == add
class Engine -> removeSceneManagerFactory == remove
class Engine -> destroySceneManager == destroy
class Engine -> addFrameListener == add
class Engine -> removeFrameListener == remove
class Engine -> detachRenderTarget == destroy 删除性质 (const String & 参数的移去
class Engine -> getWorkQueue == get
class Engine -> setWorkQueue == set
class Engine -> getAutoCreatedWindow == getView(Nid id) 多窗体概念
class Engine -> mAutoWindow == mWins 多窗体概念
class Engine -> mRenderSystemCapabilitiesManager == mCapsManager
class Engine -> addResourceLocation 移去
class Engine -> removeResourceLocation 移去
class Engine -> mResourceBackgroundQueue == mResLSManager
class Engine -> mResourceGroupManager == mResGroupManager
class Engine -> 加入 mResourceRSManager
class Engine -> mLodStrategyManager == mLodSchemeManager
class Engine -> mArchiveManager == mVFSManager
class Engine -> mZipArchiveFactory == mZipVFSFy
class Engine -> mEmbeddedZipArchiveFactory == mEmbedZipVFSFy
class Engine -> mFileSystemArchiveFactory == mLocalVFSFy
class Engine -> mHighLevelGpuProgramManager == mHLGPManager
class Engine -> mExternalTextureSourceManager == mExtTextureManager 融入到 mTextureManager
class Engine -> getBestColourVertexElementType == getColourFormat
class Engine -> FrameEventTimeType == 移到 RenderFrameListener 中
class Engine -> clearEventTimes 融入移去
class Engine -> createRenderQueueInvocationSequence == createQueueFusion SpaceManager
class Engine -> getRenderQueueInvocationSequence == getQueueFusion SpaceManager
class Engine -> destroyRenderQueueInvocationSequence == destroyQueueFusion SpaceManager
class Engine -> destroyAllRenderQueueInvocationSequences == destroyAllQueueFusion SpaceManager
class Engine -> setCustomFeature == setFeature
class Engine -> mEntityFactory == mGeometrySpaceFactory
class Engine -> getSceneManagerMetaDataIterator 无用移去
class Engine -> isInitialised == isInit
class Engine -> getAvailableRenderers == getRenderList
class Engine -> mIsInitialised == mInit
class Engine -> renderOneFrame == renderFrame
class Engine -> getRemoveRenderQueueStructuresOnClear setRemoveRenderQueueStructuresOnClear
    mRemoveQueueStructuresOnClear 移动到 RenderQueue
class Engine -> createSceneManager == createSpaceManager
class Engine -> getSceneManager == getSpaceManager
class Engine -> hasSceneManager == isSpaceManagerExist
class Engine -> getSceneManagerMetaData == getSpaceVerbose
class Engine -> getErrorString == getRenderError
class Engine -> startRendering == beginRender
class Engine -> queueEndRendering == endRender
class Engine -> mRenderers == mRenderList
class Engine -> mActiveRenderer == mRender
class Engine -> mConfigFileName == mConfFile
class Engine -> showConfigDialog == config
class Engine -> mPluginLibs = mModuleList
class Engine -> mPlugins == mPluginList
class Engine -> createFileStream == createFile
class Engine -> openFileStream == openFile
class Engine -> convertColourValue == getColourValue
class Engine -> createRenderWindow == createWindow
class Engine -> createRenderWindows == createWindow
class Engine -> getInstalledPlugins == getPluginList
class Engine -> setScriptingModule == addScriptModule
class Engine -> getScriptingModule == getScriptModule
class Engine -> executeScriptFile == executeScript
class Engine -> executeScriptGlobal == executeScriptFunc
class Engine -> executeScriptString == executeScriptStr
class Engine -> d_defaultXMLParserName == mXmlModuleName
class Engine -> getNextFrameNumber == getCurrentFrame
class Engine -> mNextFrame == mCurrentFrame
class Engine -> _pushCurrentSceneManager == processBegin
class Engine -> _popCurrentSceneManager == processEnd
class Engine -> _getCurrentSceneManager == getProcessSpace
class Engine -> setupXMLParser cleanupXMLParser d_ourXmlParser
    d_parserModule setDefaultXMLParserName getDefaultXMLParserName 概念移去
class Engine -> d_xmlParser == mXmlPrc
class Engine -> shutdownPlugins 融入移去
class Engine -> initialisePlugins 融入移去
class Engine -> _fireFrameStarted == renderFrameBegin 融入移去
class Engine -> _fireFrameRenderingQueued == onRenderFrameCore 融入移去
class Engine -> _updateAllRenderTargets == updateFrameImpl 融入移去
class Engine -> _fireFrameEnded == renderFrameEnd 融入移去
class Engine -> oneTimePostWindowInit == initPrimaryWin 融入移去
class Engine -> mCompositorManager == mFusionManager
class Engine -> clearEventTimes == resetFrameTime
class Engine -> calculateEventTime 融入移去
class Engine -> populateFrameEvent == calcFrameAvg
class Engine -> mFrameListeners == mFrameLisList
class Engine -> mRemovedFrameListeners 融入到 mFrameLisList 中 mEnable = false
class Engine -> addMovableObjectFactory == addFactory
class Engine -> removeMovableObjectFactory == removeFactory
class Engine -> hasMovableObjectFactory == isFactoryExist
class Engine -> getMovableObjectFactory == getFactory
class Engine -> getMovableObjectFactoryIterator == getSpaceObjFactoryList
class Engine -> _allocateNextMovableObjectTypeFlag 融入移去
class Engine -> mMovableObjectFactoryMap == mSpaceObjFactoryList
class Engine -> mShadowTextureManager == mShadowTexManager
class Engine -> mSceneManagerStack == mSpaceQueue
class Engine -> mSceneManagerEnum == mSpaceTypeManager
class Engine -> mFrameSmoothingTime == mTimeSmooth
class Engine -> setFrameSmoothingPeriod == setTimeSmooth
class Engine -> getFrameSmoothingPeriod == getTimeSmooth
class Engine -> setBlendIndicesGpuRedundant isBlendIndicesGpuRedundant
    setBlendWeightsGpuRedundant isBlendWeightsGpuRedundant mIsBlendIndicesGpuRedundant
    mIsBlendWeightsGpuRedundant 融入到 cloneUnit 中的
class Engine -> setDefaultMinPixelSize == setMinPixelSize
class Engine -> getDefaultMinPixelSize == getMinPixelSize
class Engine -> mQueuedEnd == mRenderEnd
class Engine -> mFirstTimePostWindowInit == mPrimaryWinInit
class Engine -> msQueuedUpdates == mRootNodeUpdate
class Engine -> mDefaultMinPixelSize == mMinPixelSize
class Engine -> mInstanceManagerMap == mInstanceSpaceTypeList
class Engine -> mZipVFSFy == mVFSFactory[0]
class Engine -> mLocalVFSFy == mVFSFactory[1]
class Engine -> mEmbedZipVFSFy == mVFSFactory[2]
class Engine -> mResGroupManager == mResSchemeManager
class Engine -> createInstanceManager == createInstanceMesh
class Engine -> getInstanceManager == getInstanceMesh
class Engine -> hasInstanceManager == isInstanceMeshExist
class Engine -> destroyInstanceManager == destroyInstanceMesh
class Engine -> destroyAllInstanceManagers == destroyAllInstanceMesh
class Engine -> updateDirtyInstanceManagers == updateInstanceMeshImpl
class Engine -> createInstancedEntity == createInstanceGeo
class Engine -> _addDirtyInstanceManager == updateInstanceMesh
class Engine -> getNumInstancesPerBatch 融入移去
class Engine -> mEventTimes == mFrameTimeList
class Engine -> d_scriptModule == mScriptModuleList
class Engine -> mNextMovableObjectTypeFlag == mSpaceObjMark
class Engine -> mGeometrySpaceFactory == mPreDefineSpaceFactory[0]
class Engine -> mLightFactory == mPreDefineSpaceFactory[1]
class Engine -> mParticleCtrlFactory == mPreDefineSpaceFactory[2]
class Engine -> mCustomSpaceObjFactory == mPreDefineSpaceFactory[3]
class Engine -> mPixelChainFactory == mPreDefineSpaceFactory[4]
class Engine -> mPixelOrbitFactory == mPreDefineSpaceFactory[5]
class Engine -> mWorkQueue == mThreadManager
class Engine -> mDirtyInstanceManagers == mUpdateInstanceMeshs
class Engine -> mDirtyInstanceMgrsTmp == mDirtyInstanceMeshs
class Engine -> mPanelFactory == mPreDefineOverlayGeoFactory[0]
class Engine -> mBorderPanelFactory == mPreDefineOverlayGeoFactory[1]
class Engine -> mTextAreaFactory == mPreDefineOverlayGeoFactory[2]
//--------------------------------------------------------------------------
class InstanceMesh -> InstancingTechnique 移出 == InstanceMeshType
class InstanceMesh -> createInstanceManager == create
class InstanceMesh -> createInstancedEntity 概念移动到 SpaceManager 中
class InstanceMesh ->
//--------------------------------------------------------------------------
class RenderFrameListener -> frameStarted == onPreRender
class RenderFrameListener -> frameRenderingQueued == onRenderCore
class RenderFrameListener -> frameEnded == onEndRender
//--------------------------------------------------------------------------
class MaterialManager -> _arbitrateMissingTechniqueForActiveScheme == touchActiveMissing 第三参数放第一参数
class MaterialManager -> mDefaultMinFilter == mMin
class MaterialManager -> mDefaultMagFilter == mMag
class MaterialManager -> mDefaultMipFilter =- mMip
class MaterialManager -> mDefaultMaxAniso == mMaxAniso
class MaterialManager -> setDefaultTextureFiltering 移去3个参数的
class MaterialManager -> setDefaultTextureFiltering == setTextureFilter
class MaterialManager -> getDefaultTextureFiltering == getTextureFilter
class MaterialManager -> setDefaultAnisotropy == setTextureAniso
class MaterialManager -> getDefaultAnisotropy == getTextureAniso
class MaterialManager -> mDefaultSettings == mNull
class MaterialManager -> getDefaultSettings == getNullMaterial
class MaterialManager -> mActiveSchemeName == mCurrent
class MaterialManager -> getActiveScheme == getCurrent
class MaterialManager -> setActiveScheme == setCurrent
class MaterialManager -> _getSchemeIndex _getSchemeName mActiveSchemeIndex mSchemes 无用移去
class MaterialManager -> _getActiveSchemeIndex 使用 getCurrent 代替
class MaterialManager -> msPassGraveyard == mDetachList
class MaterialManager -> Listener == MaterialMatchListener 外移
class MaterialManager -> add 第一参数和第二参数换位
class MaterialManager -> remove 第一参数和第二参数换位
class MaterialManager -> mSerializer 放置到 PropertyScriptSys
class MaterialManager ->
class MaterialManager ->
//--------------------------------------------------------------------------
class MaterialMatchListener -> handleSchemeNotFound == miss 移去第一参数
    第二参数放第一 第四参数放第三
class MaterialMatchListener -> 加入 find
//--------------------------------------------------------------------------
class Material -> createTechnique == create(ShaderFusion *&)
class Material -> removeTechnique == destroy
class Material -> removeAllTechniques == destroyAll
class Material -> getTechnique == get 2个函数
class Material -> getNumTechniques == getCount
class Material -> getSupportedTechnique == getValid
class Material -> getNumSupportedTechniques == getValidCount
class Material -> getUnsupportedTechniquesExplanation 融入移去
class Material -> getTechniqueIterator == getList
class Material -> getSupportedTechniqueIterator == getValidList
class Material -> mCompilationRequired == mIntelDirty
class Material -> mBestTechniquesBySchemeList = mSchemeFusions
class Material -> BestTechniquesBySchemeList == SchemeFusions
class Material -> mLodStrategy == mLodScheme
class Material -> getLodStrategy == get(LodScheme *&)
class Material -> setLodStrategy == set(LodScheme *)
class Material -> setLodLevels 概念移动到 mLodScheme 概念转变 add
class Material -> getLodIndex 概念移动到 mLodScheme 概念转变 get
class Material -> getLodValueIterator 无效果
class Material -> getUserLodValueIterator 概念移动到 mLodScheme 概念转变 getList
class Material -> mUserLodValues 概念移动到 mLodScheme
class Material -> mLodValues 概念移动到 mLodScheme
class Material -> mTechniques == mFusions
class Material -> mSupportedTechniques == mValidFusions
class Material -> 三色参数 改 单元颜色参数
class Material -> setSelfIllumination 使用 setEmissive 代替
class Material -> getSelfIllumination 使用 getEmissive 代替
class Material -> setAmbient setDiffuse setSpecular setEmissive setShininess
    == setColour
class Material -> getCompilationRequired 无效移去
class Material -> clearBestTechniqueList 融入移去
class Material -> applyDefaults 融入移去
class Material -> insertSupportedTechnique 融入移去
class Material -> getBestTechnique == getLOD
class Material -> copyDetailsTo 使用 operator =
class Material -> mReceiveShadows -> mMark
class Material -> mTransparencyCastsShadows -> mMark
class Material -> mIntelDirty -> mMark
class Material -> mUnsupportedReasons == mLastError
class Material -> _notifyNeedsRecompile == notify
class Material -> applyTextureAliases 无效移去
class Material -> setDepthCheck setDepthWrite == 移到 MaterialManager 中
class Material -> getNumLodLevels == getLodCount 移去其中一个 const String &
class Material -> setReceiveShadows == setReceiveShadow
class Material -> getReceiveShadows == isReceiveShadow
class Material -> setTransparencyCastsShadows == setAlphaShadowCast
class Material -> getTransparencyCastsShadows == isTransparentCastsShadow
//--------------------------------------------------------------------------
class Fusion -> createTechnique == create(FrameShader *&)
class Fusion -> removeTechnique == destroy
class Fusion -> removeAllTechniques == destroyAll
class Fusion -> getTechnique == get
class Fusion -> getTechniqueIterator == getList
class Fusion -> getSupportedTechniqueIterator == geValidList
class Fusion -> mTechniques == mFusions
class Fusion -> mSupportedTechniques == mValidFusions
class Fusion -> getNumTechniques == getCount
class Fusion -> getNumSupportedTechniques == getValidCount
class Fusion -> compile == 融入移去
class Fusion -> createGlobalTextures == 融入移去
class Fusion -> freeGlobalTextures == 融入移去
class Fusion -> getTextureInstance == getTexture
class Fusion -> getTextureInstanceName == getTexture->getOriginID()
class Fusion -> getRenderTarget == getFrameObj

class Fusion -> mGlobalMRTs == mMultiTexFrameList
class Fusion -> mGlobalTextures== mTextureList
class FrameFusionListener -> compositorInstanceCreated == onCreate
class FrameFusionListener -> compositorInstanceDestroyed == onDestroy
//--------------------------------------------------------------------------
class ResourceGroupListener -> 加入到 GroupLoadScheme 概念中
class GroupLoadScheme -> resourceGroupScriptingStarted == onPreScriptParse
class GroupLoadScheme -> scriptParseStarted == onPreScriptParse 把第二参数改为返回
class GroupLoadScheme -> scriptParseEnded == onScriptParseEnd
class GroupLoadScheme -> resourceGroupScriptingEnded == onScriptParseEnd 不要第二参数
class GroupLoadScheme -> resourceGroupPrepareStarted == onPrePlan
class GroupLoadScheme -> resourcePrepareStarted == onPrePlan
class GroupLoadScheme -> resourceGroupPrepareEnded == onPlanEnd
class GroupLoadScheme -> resourceGroupLoadStarted == onPreLoad
class GroupLoadScheme -> resourceLoadStarted == onPreLoad
class GroupLoadScheme -> resourcePrepareEnded == onPlanEnd
class GroupLoadScheme -> resourceLoadEnded == onLoadEnd
class GroupLoadScheme -> resourceGroupLoadEnded == onLoadEnd
class GroupLoadScheme -> worldGeometryPrepareStageStarted 无效移去
class GroupLoadScheme -> worldGeometryPrepareStageEnded 无效移去
class GroupLoadScheme -> worldGeometryStageStarted 无效移去
class GroupLoadScheme -> worldGeometryStageEnded 无效移去
//--------------------------------------------------------------------------
class SceneManagerEnumerator -> destroySceneManager == destroy
//--------------------------------------------------------------------------
all msSingleton == mOnly
//--------------------------------------------------------------------------
class ParticleSpace -> addAffector == addEffect
class ParticleSpace -> getAffector == getEffect
class ParticleSpace -> getNumAffectors == getEffectCount
class ParticleSpace -> removeAffector == removeEffect
class ParticleSpace -> removeAllAffectors == removeAllEffect
class ParticleSpace -> addEmitter == addSpread
class ParticleSpace -> getEmitter == getSpread
class ParticleSpace -> removeEmitter == removeSpread
class ParticleSpace -> removeAllEmitters == removeAllSpread
class ParticleSpace -> getNumEmitters == getSpreadCount
class ParticleSpace -> getMaterialName == getMaterialID
class ParticleSpace -> getResourceGroupName == getResourceGroup
class ParticleSpace -> getNumParticles == getCount
class ParticleSpace -> setParticleQuota == setPoolSize
class ParticleSpace -> getParticleQuota == getPoolSize
class ParticleSpace -> createParticle == create
class ParticleSpace -> createEmitterParticle == createSpread
class ParticleSpace -> setEmittedEmitterQuota == setSpreadMax
class ParticleSpace -> getEmittedEmitterQuota == getSpreadPoolSize
class ParticleSpace -> ParticleIterator 使用 ParticleList 代替
class ParticleSpace -> _getIterator == getList
class ParticleSpace -> setSpeedFactor == setTimeFactor
class ParticleSpace -> getSpeedFactor == getTimeFactor
class ParticleSpace -> getIterationInterval == getTimeInterval
class ParticleSpace -> setIterationInterval == setTimeInterval
class ParticleSpace -> setCullIndividually == setCullItself
class ParticleSpace -> getCullIndividually == getCullItself
class ParticleSpace -> setSortingEnabled == setSortEnable
class ParticleSpace -> getSortingEnabled == isSortEnable
class ParticleSpace -> _notifyParticleResized == onParticleResize
class ParticleSpace -> _notifyParticleRotated == onParticleRotate
class ParticleSpace -> setSrc == setOrigin
class ParticleSpace -> getSrc == getOrigin
class ParticleSpace -> setKeepParticlesInLocalSpace == setLocalSpace
class ParticleSpace -> getKeepParticlesInLocalSpace == isLocalSpace
class ParticleSpace -> setDefaultWidth == setParticleWidth
class ParticleSpace -> getDefaultWidth == getParticleWidth
class ParticleSpace -> setDefaultHeight == setParticleHeight
class ParticleSpace -> getDefaultHeight == getParticleHeight
class ParticleSpace -> setDefaultDimensions == 使用 setParticleWidth setParticleHeight
class ParticleSpace -> setEmitting == setSpread
class ParticleSpace -> getEmitting == isSpread
class ParticleSpace -> mIsEmitting == mSpread
class ParticleSpace -> setDefaultIterationInterval getDefaultIterationInterval setDefaultNonVisibleUpdateTimeout
    getDefaultNonVisibleUpdateTimeout msDefaultIterationInterval msDefaultNonvisibleTimeout
    移动到 ParticleSpaceManager 中
class ParticleSpace -> mIterationInterval == mTimeInterval
class ParticleSpace -> mIterationIntervalSet 融入 mTimeInterval == 0
class ParticleSpace -> mNonvisibleTimeout == mTimeThreshold
class ParticleSpace -> mNonvisibleTimeoutSet 融入 mTimeThreshold == 0
class ParticleSpace -> setNonVisibleUpdateTimeout == setTimeThreshold
class ParticleSpace -> getNonVisibleUpdateTimeout == getTimeThreshold
class ParticleSpace -> addActiveEmittedEmittersToFreeList 融入移去
class ParticleSpace -> mUpdateRemainTime == mTimeToUpdate
class ParticleSpace -> mBoundingRadius == mBoundRange
class ParticleSpace -> setBoundsAutoUpdated == setAutoBound
class ParticleSpace -> mBoundsAutoUpdate == mAutoBound
class ParticleSpace -> mBoundsUpdateTime == mAutoBoundInterval
class ParticleSpace -> fastForward == _forward
class ParticleSpace -> initialiseEmittedEmitterPool 融入移去
class ParticleSpace -> _notifyReorganiseEmittedEmitterData 无用移去
class ParticleSpace -> _expire == costImpl
class ParticleSpace -> _triggerEmitters == spreadImpl
class ParticleSpace -> _applyMotion == moveImpl
class ParticleSpace -> _triggerAffectors == effectImpl
class ParticleSpace -> createVisualParticles 无用移去
class ParticleSpace -> destroyVisualParticles 无用移去
class ParticleSpace -> findFreeEmittedEmitter 融入移去
class ParticleSpace -> removeFromActiveEmittedEmitters 融入移去
class ParticleSpace -> _sortParticles == sortImpl
class ParticleSpace -> _executeTriggerEmitters == spreadParticle 第三参数 放到第二
class ParticleSpace -> addFreeEmittedEmitters 融入移去
class ParticleSpace -> mEmittedEmitterPool == mSpreadPool
class ParticleSpace -> mActiveEmittedEmitters == mActiveSpreadList
class ParticleSpace -> mFreeEmittedEmitters == mFreeSpreadMap
class ParticleSpace -> mAffectors == mEffectList
class ParticleSpace -> mMaterialName == mMaterialID
class ParticleSpace -> mResourceGroupName == mMaterialGroup
class ParticleSpace -> mRenderer == mGeo
class ParticleSpace -> mRendererType 无用移去
class ParticleSpace -> mEmittedEmitterPoolSize == mSpreadMax
class ParticleSpace -> mDefaultWidth == mWidth
class ParticleSpace -> mDefaultHeight == mHeight
class ParticleSpace -> mSpeedFactor == mTimeFactor
class ParticleSpace -> mTimeController == mTimeCtrl
class ParticleSpace -> mLastVisibleFrame == mFrameMark
class ParticleSpace -> mTimeSinceLastVisible == mCurrentTimeThreshold
class ParticleSpace -> mIsRendererConfigured == mGeoUpdate
class ParticleSpace -> mEmittedEmitterPoolInitialised == mSpreadInit
class ParticleSpace -> increasePool == resizePool
class ParticleSpace -> increaseEmittedEmitterPool == resizeSpreadPool
class ParticleSpace -> mEmitters == mSpreadList
class ParticleSpace -> initialiseEmittedEmitters == initSpreadPool
class ParticleSpace -> removeAllEmittedEmitters == destorySpreadPool
class ParticleSpace -> configureRenderer == syncGeo
class ParticleSpace -> setRenderer == setGeo
class ParticleSpace -> getRenderer == getGeo
class ParticleSpace -> getRendererName 使用 getGeo 代替
class ParticleSpace -> mMaterial 移去
class ParticleSpace -> mActiveParticles == mActiveList
class ParticleSpace -> mFreeParticles == mFreeList
class ParticleSpace ->
//--------------------------------------------------------------------------
class ParticleGeo -> _createVisualData 移去
class ParticleGeo -> _destroyVisualData  移去
class ParticleGeo -> _notifyDefaultDimensions 分离出 on
class ParticleGeo -> _notifyParticleEmitted _notifyParticleExpired
    _notifyParticleMoved _notifyParticleCleared 无用移去
class ParticleGeo -> _notifyDefaultDimensions == onCtrlResize
class ParticleGeo -> _notifyParticleQuota == onPoolSizeChange
//--------------------------------------------------------------------------
class SpaceManager 中的 _populateLightList(vector3 position ..方法迁移到  RenderPattern 中

class SpaceManager 中的 mTexConfList 成员迁移到 ShadowMappingPattern 中

移去 class SpaceManager 中的 getShadowTextureCount

移去 class SpaceManager 中的 mShadowTechnique

移去 class SpaceManager 中的 isShadowTechniqueStencilBased 概念化到 StencilRenderPattern
移去 class SpaceManager 中的 checkSTsCreated 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 prepareSTs 概念化到 ShadowMappingPattern 中

移去 class SpaceManager 中的 mShadowIndexBuffer == mIndexBuffer 到 StencilRenderPattern 中
移去 class SpaceManager 中的 destroySTs 概念化到 ShadowMappingPattern 中 destroyTexture
移去 class SpaceManager 中的 mTextures 到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mCameraList 到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mTextureValid 到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mTextureValid 到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mCamLightList 到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mRenderStage 到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTSelfShadow 到 ShadowMappingPattern 中
移去 class SpaceManager 中的 updateSplitOptions 2个函数 概念化到 RenderPattern 中
移去 class SpaceManager 中的 isShadowTechniqueTextureBased 概念化到 RenderPattern 中
移去 class SpaceManager 中的 deriveCaster 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mSTCCP 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCRP 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCCVP 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCCFP 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCRVP 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCRFP 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCCVPParams 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCCFPParams 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCRVPParams 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mSTCRFPParams 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 deriveReceiver 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mFadeEnd 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mFadeBegin 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mCameraExtentOffset 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mTextureIndexList 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mShadowLights 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mTextureCount 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureSelfShadow 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 getShadowTextureSelfShadow 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowDirLightTextureOffset == setExtentOffsetFactor 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 getShadowDirLightTextureOffset == getExtentOffsetFactor 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureFadeStart == setFadeStart 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureFadeEnd == setFadeEnd 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mShadowUseInfiniteFarPlane 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mShadowCasterRenderBackFaces 概念化到 RenderPattern 中
移去 class SpaceManager 中的 setShadowUseInfiniteFarPlane -> setInfiniteFarBound 概念化到 RenderPattern 中
移去 class SpaceManager 中的 getShadowUseInfiniteFarPlane -> isInfiniteFarBound 概念化到 RenderPattern 中
移去 class SpaceManager 中的 setShadowUseLightClipPlanes -> setLightClipPlane 概念化到 RenderPattern 中
移去 class SpaceManager 中的 getShadowUseLightClipPlanes -> isLightClipPlane 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mShadowAdditiveLightClip 概念化到 RenderPattern 中
移去 class SpaceManager 中的 setShadowTextureConfig == setTexture 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureSettings == setTextureConfig 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureCount == setTextureCount 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureSize == setTextureSize 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTexturePixelFormat == setTexturePixelFormat 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureFSAA == setTextureFSAA 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureCountPerLightType == setTextureCount 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 getShadowTextureCountPerLightType == getTextureCount 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowIndexBufferSize == setIndexSize 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 getShadowIndexBufferSize == getIndexSize 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowIndexBufferSize == mIndexBufferSize 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 getShadowTextureConfigIterator 无用移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 getShadowTexture == getTexture 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureCasterMaterial == setTextureCasterMaterial 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setShadowTextureReceiverMaterial == setTextureReceiverMaterial 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mCasterPass == mCast 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mReceiverPass == mReceive 概念化到 RenderPattern 中
移去 class SpaceManager 中的 initSVMaterials 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mSMInitDone 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mShadowDebugPass == mDebugCh 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mInfiniteExtrusionParams == mInfiniteParam 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowStencilPass == mStencilCh 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mFiniteExtrusionParams == mFiniteParam 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowModulativePass == mModulateCh 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mDebugShadows 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mFullScreenQuad == mScreen 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowColour -> mShadowColour 概念化到 RenderPattern 中
移去 class SpaceManager 中的 setShadowColour 概念化到 RenderPattern 中
移去 class SpaceManager 中的 getShadowColour 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mDefaultShadowFarDist -> mShadowExtentMax 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 getShadowFarDistance -> getMaxExtent 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 getShadowFarDistanceSquared -> getShadowExtentMax * getShadowExtentMax 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mDefaultShadowFarDistSquared -> mShadowExtentMax * mShadowExtentMax 概念化到 RenderPattern 中
移去 class SpaceManager 中的 setShadowFarDistance -> setMaxExtent 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mShadowDist -> mShadowExtent概念化到 RenderPattern 中
移去 class SpaceManager 中的 setShadowDirectionalLightExtrusionDistance -> setExtent 概念化到 RenderPattern 中
移去 class SpaceManager 中的 getShadowDirectionalLightExtrusionDistance -> getExtent 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mSuppressShadows 概念化到 RenderPattern 中
移去 class SpaceManager 中的 _areShadowsSuppressed -> isShadowEnable 转义 概念化到 RenderPattern 中
移去 class SpaceManager 中的 _suppressShadows -> setShadowEnable 转义 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mNullTexture 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mCurrentTexture 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 getCameraSetup 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 setCameraSetup 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 mCamera 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 renderBasicQueueGroupObjects == renderBasic 概念化到 RenderPattern 中
移去 class SpaceManager 中的 _renderQueueGroupObjects 概念化到 RenderPattern 中
移去 class SpaceManager 中的 renderModulativeStencilShadowedQueueGroupObjects 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 renderStencil 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 findCastList 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowCasterList == mCasterList 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowCasterQueryListener == mQueryCmd 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowCasterAABBQuery == mCasterAABBQuery 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 mShadowCasterSphereQuery == mCasterSphereQuery 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 applyStencil 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 renderAdditiveStencilShadowedQueueGroupObjects 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 renderShadows 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 renderTextureShadowCasterQueueGroupObjects 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 renderAdditiveTextureShadowedQueueGroupObjects 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 renderModulativeTextureShadowedQueueGroupObjects 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 renderTransparentShadowCasterObjects == 融入移去 概念化到 ShadowMappingPattern 中
移去 class SpaceManager 中的 renderTextureShadowReceiverQueueGroupObjects ModulativeShadowMappingPattern 中
移去 class SpaceManager 中的 renderObjects == 融入移去 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mActiveQueuedRenderableVisitor -> mTest 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mDefaultQueuedRenderableVisitor 概念化到 RenderPattern 中 无效移去
移去 class SpaceManager 中的 setQueuedRenderableVisitor 概念化到 RenderPattern 中 无效移去
移去 class SpaceManager 中的 getQueuedRenderableVisitor 概念化到 RenderPattern 中 无效移去
移去 class SpaceManager 中的 ShadowRenderTest 概念化到 RenderPattern 中
移去 class SpaceManager 中的 validateRendering 概念化到 RenderPattern 中
移去 class SpaceManager 中的 ShadowCasterSpaceQueryListener 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 ShadowCasterList == CasterList 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 isShadowTechniqueModulative 概念化到 RenderPattern 中
移去 class SpaceManager 中的 getShadowCasterBoundsInfo 概念化到 StencilRenderPattern 中
移去 class SpaceManager 中的 isShadowTechniqueInUse 概念化到 RenderPattern 中
移去 class SpaceManager 中的 isShadowTechniqueIntegrated 概念化到 RenderPattern 中
移去 class SpaceManager 中的 isShadowTechniqueAdditive 概念化到 RenderPattern 中
移去 class SpaceManager 中的 setShadowTechnique 概念化为 setRenderPattern
移去 class SpaceManager 中的 findLights 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mCachedLightInfos -> mLightHash 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mTestLightInfos -> mValidLights 概念化到 RenderPattern 中
移去 class SpaceManager 中的 LightInfo 概念化到 RenderPattern 中
移去 class SpaceManager 中的 LightInfoList 概念化到 RenderPattern 中
移去 class SpaceManager 中的 ShadowTextureCameraList ShadowMappingPattern 中
移去 class SpaceManager 中的 Listener 概念化到 RenderPattern 中
移去 class SpaceManager 中的 ListenerList 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mListeners 概念化到 RenderPattern 中
移去 class SpaceManager 中的 add 概念化到 RenderPattern 中
移去 class SpaceManager 中的 remove 概念化到 RenderPattern 中
移去 class SpaceManager 中的 fireShadowTexturesUpdated 概念化到 RenderPattern 中
移去 class SpaceManager 中的 fireShadowTexturesPreCaster 概念化到 RenderPattern 中
移去 class SpaceManager 中的 fireShadowTexturesPreReceiver 概念化到 RenderPattern 中
移去 class SpaceManager 中的 firePreUpdateSceneGraph 概念化到 RenderPattern 中
移去 class SpaceManager 中的 firePostUpdateSceneGraph 概念化到 RenderPattern 中
移去 class SpaceManager 中的 firePreFindVisibleObjects 概念化到 RenderPattern 中
移去 class SpaceManager 中的 firePostFindVisibleObjects 概念化到 RenderPattern 中
移去 class SpaceManager 中的 fireSceneManagerDestroyed == onDestroy
移去 class SpaceManager 中的 lightLess == lightCameraLess 概念化到 RenderPattern 中
移去 class SpaceManager 中的 lightsForShadowTextureLess == LightShadowLess 概念化到 RenderPattern 中
移去 class SpaceManager 中的 mCamBoundList 概念化到 RenderPattern 中
移去 class SpaceManager 中的 概念化到 RenderPattern 中

class SpaceManager -> SkyDomeGenParameters SkyPlaneGenParameters SkyBoxGenParameters
    mSkyDomeParams getSkyDomeGenParameters

class SpaceManager::LightClippingInfo == LightClipp
class SpaceManager::LightClippingInfo scissorRect == mClipRect
class SpaceManager::LightClippingInfo clipPlanes == mClipPlanes
class SpaceManager::LightClippingInfo scissorValid == mClip
class SpaceManager::LightClippingInfo clipPlanesValid == mPlaneClip
class SpaceManager::LightClippingInfo 分离成2个成分

class SpaceManager -> _populateLightList == find 第二参数直接改 Vector3
class SpaceManager -> _getLightsAffectingFrustum == getLightList
class SpaceManager -> useLightsGpuProgram 融入移去
class SpaceManager -> setAmbientLight == setAmbient
class SpaceManager -> mCamBoundList CameraBoundList getCameraBound
    getVisibleObjectsBoundsInfo 已经融入到 Camera 概念里






GpuLogicalIndexUseMap == GpuParamBlockList





class GLGpuProgramManager -> registerProgramFactory == addCreateFunc
class GLGpuProgramManager -> unregisterProgramFactory == removeCreateFunc
class GLGBufferManager -> allocateScratch == allocTempMapBuffer
class GLGBufferManager -> deallocateScratch == freeTempMapBuffer
class GLRenderSystem -> mActiveRenderTarget == mActiveFrame
